// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sandbox.proto

#include "sandbox.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr OpenSandboxAccountResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OpenSandboxAccountResponse::OpenSandboxAccountResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OpenSandboxAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenSandboxAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenSandboxAccountResponseDefaultTypeInternal() {}
  union {
    OpenSandboxAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenSandboxAccountResponseDefaultTypeInternal _OpenSandboxAccountResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR OpenSandboxAccountRequest::OpenSandboxAccountRequest(::_pbi::ConstantInitialized) {}
struct OpenSandboxAccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpenSandboxAccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpenSandboxAccountRequestDefaultTypeInternal() {}
  union {
    OpenSandboxAccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpenSandboxAccountRequestDefaultTypeInternal _OpenSandboxAccountRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CloseSandboxAccountResponse::CloseSandboxAccountResponse(::_pbi::ConstantInitialized) {}
struct CloseSandboxAccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseSandboxAccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseSandboxAccountResponseDefaultTypeInternal() {}
  union {
    CloseSandboxAccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseSandboxAccountResponseDefaultTypeInternal _CloseSandboxAccountResponse_default_instance_;

inline constexpr CloseSandboxAccountRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CloseSandboxAccountRequest::CloseSandboxAccountRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CloseSandboxAccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseSandboxAccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseSandboxAccountRequestDefaultTypeInternal() {}
  union {
    CloseSandboxAccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseSandboxAccountRequestDefaultTypeInternal _CloseSandboxAccountRequest_default_instance_;

inline constexpr SandboxPayInResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        balance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SandboxPayInResponse::SandboxPayInResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SandboxPayInResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SandboxPayInResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SandboxPayInResponseDefaultTypeInternal() {}
  union {
    SandboxPayInResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SandboxPayInResponseDefaultTypeInternal _SandboxPayInResponse_default_instance_;

inline constexpr SandboxPayInRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SandboxPayInRequest::SandboxPayInRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SandboxPayInRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SandboxPayInRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SandboxPayInRequestDefaultTypeInternal() {}
  union {
    SandboxPayInRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SandboxPayInRequestDefaultTypeInternal _SandboxPayInRequest_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
static ::_pb::Metadata file_level_metadata_sandbox_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_sandbox_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sandbox_2eproto = nullptr;
const ::uint32_t TableStruct_sandbox_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OpenSandboxAccountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OpenSandboxAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OpenSandboxAccountResponse, _impl_.account_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CloseSandboxAccountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CloseSandboxAccountRequest, _impl_.account_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CloseSandboxAccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SandboxPayInRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SandboxPayInRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SandboxPayInRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SandboxPayInRequest, _impl_.amount_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SandboxPayInResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SandboxPayInResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SandboxPayInResponse, _impl_.balance_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OpenSandboxAccountRequest)},
        {8, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OpenSandboxAccountResponse)},
        {17, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::CloseSandboxAccountRequest)},
        {26, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::CloseSandboxAccountResponse)},
        {34, 44, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SandboxPayInRequest)},
        {46, 55, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SandboxPayInResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::public_::invest::api::contract::v1::_OpenSandboxAccountRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OpenSandboxAccountResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_CloseSandboxAccountRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_CloseSandboxAccountResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SandboxPayInRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SandboxPayInResponse_default_instance_._instance,
};
const char descriptor_table_protodef_sandbox_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rsandbox.proto\022&tinkoff.public_.invest."
    "api.contract.v1\032\014common.proto\032\014orders.pr"
    "oto\032\020operations.proto\032\013users.proto\"\033\n\031Op"
    "enSandboxAccountRequest\"0\n\032OpenSandboxAc"
    "countResponse\022\022\n\naccount_id\030\001 \001(\t\"0\n\032Clo"
    "seSandboxAccountRequest\022\022\n\naccount_id\030\001 "
    "\001(\t\"\035\n\033CloseSandboxAccountResponse\"m\n\023Sa"
    "ndboxPayInRequest\022\022\n\naccount_id\030\001 \001(\t\022B\n"
    "\006amount\030\002 \001(\01322.tinkoff.public_.invest.a"
    "pi.contract.v1.MoneyValue\"[\n\024SandboxPayI"
    "nResponse\022C\n\007balance\030\001 \001(\01322.tinkoff.pub"
    "lic_.invest.api.contract.v1.MoneyValue2\236"
    "\020\n\016SandboxService\022\233\001\n\022OpenSandboxAccount"
    "\022A.tinkoff.public_.invest.api.contract.v"
    "1.OpenSandboxAccountRequest\032B.tinkoff.pu"
    "blic_.invest.api.contract.v1.OpenSandbox"
    "AccountResponse\022\215\001\n\022GetSandboxAccounts\022:"
    ".tinkoff.public_.invest.api.contract.v1."
    "GetAccountsRequest\032;.tinkoff.public_.inv"
    "est.api.contract.v1.GetAccountsResponse\022"
    "\236\001\n\023CloseSandboxAccount\022B.tinkoff.public"
    "_.invest.api.contract.v1.CloseSandboxAcc"
    "ountRequest\032C.tinkoff.public_.invest.api"
    ".contract.v1.CloseSandboxAccountResponse"
    "\022\207\001\n\020PostSandboxOrder\0228.tinkoff.public_."
    "invest.api.contract.v1.PostOrderRequest\032"
    "9.tinkoff.public_.invest.api.contract.v1"
    ".PostOrderResponse\022\215\001\n\023ReplaceSandboxOrd"
    "er\022;.tinkoff.public_.invest.api.contract"
    ".v1.ReplaceOrderRequest\0329.tinkoff.public"
    "_.invest.api.contract.v1.PostOrderRespon"
    "se\022\207\001\n\020GetSandboxOrders\0228.tinkoff.public"
    "_.invest.api.contract.v1.GetOrdersReques"
    "t\0329.tinkoff.public_.invest.api.contract."
    "v1.GetOrdersResponse\022\215\001\n\022CancelSandboxOr"
    "der\022:.tinkoff.public_.invest.api.contrac"
    "t.v1.CancelOrderRequest\032;.tinkoff.public"
    "_.invest.api.contract.v1.CancelOrderResp"
    "onse\022\210\001\n\024GetSandboxOrderState\022<.tinkoff."
    "public_.invest.api.contract.v1.GetOrderS"
    "tateRequest\0322.tinkoff.public_.invest.api"
    ".contract.v1.OrderState\022\212\001\n\023GetSandboxPo"
    "sitions\0228.tinkoff.public_.invest.api.con"
    "tract.v1.PositionsRequest\0329.tinkoff.publ"
    "ic_.invest.api.contract.v1.PositionsResp"
    "onse\022\215\001\n\024GetSandboxOperations\0229.tinkoff."
    "public_.invest.api.contract.v1.Operation"
    "sRequest\032:.tinkoff.public_.invest.api.co"
    "ntract.v1.OperationsResponse\022\253\001\n\034GetSand"
    "boxOperationsByCursor\022D.tinkoff.public_."
    "invest.api.contract.v1.GetOperationsByCu"
    "rsorRequest\032E.tinkoff.public_.invest.api"
    ".contract.v1.GetOperationsByCursorRespon"
    "se\022\212\001\n\023GetSandboxPortfolio\0228.tinkoff.pub"
    "lic_.invest.api.contract.v1.PortfolioReq"
    "uest\0329.tinkoff.public_.invest.api.contra"
    "ct.v1.PortfolioResponse\022\211\001\n\014SandboxPayIn"
    "\022;.tinkoff.public_.invest.api.contract.v"
    "1.SandboxPayInRequest\032<.tinkoff.public_."
    "invest.api.contract.v1.SandboxPayInRespo"
    "nse\022\231\001\n\030GetSandboxWithdrawLimits\022=.tinko"
    "ff.public_.invest.api.contract.v1.Withdr"
    "awLimitsRequest\032>.tinkoff.public_.invest"
    ".api.contract.v1.WithdrawLimitsResponseB"
    "a\n\034ru.tinkoff.piapi.contract.v1P\001Z\014./;in"
    "vestapi\242\002\005TIAPI\252\002\024Tinkoff.InvestApi.V1\312\002"
    "\021Tinkoff\\Invest\\V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_sandbox_2eproto_deps[4] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_operations_2eproto,
        &::descriptor_table_orders_2eproto,
        &::descriptor_table_users_2eproto,
};
static ::absl::once_flag descriptor_table_sandbox_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sandbox_2eproto = {
    false,
    false,
    2666,
    descriptor_table_protodef_sandbox_2eproto,
    "sandbox.proto",
    &descriptor_table_sandbox_2eproto_once,
    descriptor_table_sandbox_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_sandbox_2eproto::offsets,
    file_level_metadata_sandbox_2eproto,
    file_level_enum_descriptors_sandbox_2eproto,
    file_level_service_descriptors_sandbox_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sandbox_2eproto_getter() {
  return &descriptor_table_sandbox_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sandbox_2eproto(&descriptor_table_sandbox_2eproto);
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
// ===================================================================

class OpenSandboxAccountRequest::_Internal {
 public:
};

OpenSandboxAccountRequest::OpenSandboxAccountRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountRequest)
}
OpenSandboxAccountRequest::OpenSandboxAccountRequest(
    ::google::protobuf::Arena* arena,
    const OpenSandboxAccountRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  OpenSandboxAccountRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountRequest)
}









::google::protobuf::Metadata OpenSandboxAccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sandbox_2eproto_getter, &descriptor_table_sandbox_2eproto_once,
      file_level_metadata_sandbox_2eproto[0]);
}
// ===================================================================

class OpenSandboxAccountResponse::_Internal {
 public:
};

OpenSandboxAccountResponse::OpenSandboxAccountResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
}
inline PROTOBUF_NDEBUG_INLINE OpenSandboxAccountResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

OpenSandboxAccountResponse::OpenSandboxAccountResponse(
    ::google::protobuf::Arena* arena,
    const OpenSandboxAccountResponse& from)
    : ::google::protobuf::Message(arena) {
  OpenSandboxAccountResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
}
inline PROTOBUF_NDEBUG_INLINE OpenSandboxAccountResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void OpenSandboxAccountResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OpenSandboxAccountResponse::~OpenSandboxAccountResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OpenSandboxAccountResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OpenSandboxAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OpenSandboxAccountResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 84, 2> OpenSandboxAccountResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OpenSandboxAccountResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OpenSandboxAccountResponse, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(OpenSandboxAccountResponse, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\12\0\0\0\0\0\0"
    "tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse"
    "account_id"
  }},
};

::uint8_t* OpenSandboxAccountResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
  return target;
}

::size_t OpenSandboxAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OpenSandboxAccountResponse::_class_data_ = {
    OpenSandboxAccountResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OpenSandboxAccountResponse::GetClassData() const {
  return &_class_data_;
}

void OpenSandboxAccountResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OpenSandboxAccountResponse*>(&to_msg);
  auto& from = static_cast<const OpenSandboxAccountResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OpenSandboxAccountResponse::CopyFrom(const OpenSandboxAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public_.invest.api.contract.v1.OpenSandboxAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OpenSandboxAccountResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OpenSandboxAccountResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OpenSandboxAccountResponse::InternalSwap(OpenSandboxAccountResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata OpenSandboxAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sandbox_2eproto_getter, &descriptor_table_sandbox_2eproto_once,
      file_level_metadata_sandbox_2eproto[1]);
}
// ===================================================================

class CloseSandboxAccountRequest::_Internal {
 public:
};

CloseSandboxAccountRequest::CloseSandboxAccountRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
}
inline PROTOBUF_NDEBUG_INLINE CloseSandboxAccountRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

CloseSandboxAccountRequest::CloseSandboxAccountRequest(
    ::google::protobuf::Arena* arena,
    const CloseSandboxAccountRequest& from)
    : ::google::protobuf::Message(arena) {
  CloseSandboxAccountRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
}
inline PROTOBUF_NDEBUG_INLINE CloseSandboxAccountRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void CloseSandboxAccountRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CloseSandboxAccountRequest::~CloseSandboxAccountRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CloseSandboxAccountRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CloseSandboxAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CloseSandboxAccountRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 84, 2> CloseSandboxAccountRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CloseSandboxAccountRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CloseSandboxAccountRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CloseSandboxAccountRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\12\0\0\0\0\0\0"
    "tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest"
    "account_id"
  }},
};

::uint8_t* CloseSandboxAccountRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
  return target;
}

::size_t CloseSandboxAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CloseSandboxAccountRequest::_class_data_ = {
    CloseSandboxAccountRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CloseSandboxAccountRequest::GetClassData() const {
  return &_class_data_;
}

void CloseSandboxAccountRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CloseSandboxAccountRequest*>(&to_msg);
  auto& from = static_cast<const CloseSandboxAccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CloseSandboxAccountRequest::CopyFrom(const CloseSandboxAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CloseSandboxAccountRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CloseSandboxAccountRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CloseSandboxAccountRequest::InternalSwap(CloseSandboxAccountRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata CloseSandboxAccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sandbox_2eproto_getter, &descriptor_table_sandbox_2eproto_once,
      file_level_metadata_sandbox_2eproto[2]);
}
// ===================================================================

class CloseSandboxAccountResponse::_Internal {
 public:
};

CloseSandboxAccountResponse::CloseSandboxAccountResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountResponse)
}
CloseSandboxAccountResponse::CloseSandboxAccountResponse(
    ::google::protobuf::Arena* arena,
    const CloseSandboxAccountResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CloseSandboxAccountResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.CloseSandboxAccountResponse)
}









::google::protobuf::Metadata CloseSandboxAccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sandbox_2eproto_getter, &descriptor_table_sandbox_2eproto_once,
      file_level_metadata_sandbox_2eproto[3]);
}
// ===================================================================

class SandboxPayInRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SandboxPayInRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SandboxPayInRequest, _impl_._has_bits_);
  static const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& amount(const SandboxPayInRequest* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& SandboxPayInRequest::_Internal::amount(const SandboxPayInRequest* msg) {
  return *msg->_impl_.amount_;
}
void SandboxPayInRequest::clear_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SandboxPayInRequest::SandboxPayInRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
}
inline PROTOBUF_NDEBUG_INLINE SandboxPayInRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_) {}

SandboxPayInRequest::SandboxPayInRequest(
    ::google::protobuf::Arena* arena,
    const SandboxPayInRequest& from)
    : ::google::protobuf::Message(arena) {
  SandboxPayInRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.amount_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.amount_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
}
inline PROTOBUF_NDEBUG_INLINE SandboxPayInRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena) {}

inline void SandboxPayInRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
SandboxPayInRequest::~SandboxPayInRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SandboxPayInRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  delete _impl_.amount_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SandboxPayInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SandboxPayInRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 77, 2> SandboxPayInRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SandboxPayInRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SandboxPayInRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public_.invest.api.contract.v1.MoneyValue amount = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SandboxPayInRequest, _impl_.amount_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SandboxPayInRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(SandboxPayInRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public_.invest.api.contract.v1.MoneyValue amount = 2;
    {PROTOBUF_FIELD_OFFSET(SandboxPayInRequest, _impl_.amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\72\12\0\0\0\0\0\0"
    "tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest"
    "account_id"
  }},
};

::uint8_t* SandboxPayInRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public_.invest.api.contract.v1.MoneyValue amount = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
  return target;
}

::size_t SandboxPayInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // .tinkoff.public_.invest.api.contract.v1.MoneyValue amount = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SandboxPayInRequest::_class_data_ = {
    SandboxPayInRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SandboxPayInRequest::GetClassData() const {
  return &_class_data_;
}

void SandboxPayInRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SandboxPayInRequest*>(&to_msg);
  auto& from = static_cast<const SandboxPayInRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::tinkoff::public_::invest::api::contract::v1::MoneyValue::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SandboxPayInRequest::CopyFrom(const SandboxPayInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SandboxPayInRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SandboxPayInRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SandboxPayInRequest::InternalSwap(SandboxPayInRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata SandboxPayInRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sandbox_2eproto_getter, &descriptor_table_sandbox_2eproto_once,
      file_level_metadata_sandbox_2eproto[4]);
}
// ===================================================================

class SandboxPayInResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SandboxPayInResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SandboxPayInResponse, _impl_._has_bits_);
  static const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& balance(const SandboxPayInResponse* msg);
  static void set_has_balance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& SandboxPayInResponse::_Internal::balance(const SandboxPayInResponse* msg) {
  return *msg->_impl_.balance_;
}
void SandboxPayInResponse::clear_balance() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.balance_ != nullptr) _impl_.balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SandboxPayInResponse::SandboxPayInResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
}
inline PROTOBUF_NDEBUG_INLINE SandboxPayInResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SandboxPayInResponse::SandboxPayInResponse(
    ::google::protobuf::Arena* arena,
    const SandboxPayInResponse& from)
    : ::google::protobuf::Message(arena) {
  SandboxPayInResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.balance_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.balance_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
}
inline PROTOBUF_NDEBUG_INLINE SandboxPayInResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SandboxPayInResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.balance_ = {};
}
SandboxPayInResponse::~SandboxPayInResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SandboxPayInResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.balance_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SandboxPayInResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.balance_ != nullptr);
    _impl_.balance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SandboxPayInResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SandboxPayInResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SandboxPayInResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SandboxPayInResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public_.invest.api.contract.v1.MoneyValue balance = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SandboxPayInResponse, _impl_.balance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public_.invest.api.contract.v1.MoneyValue balance = 1;
    {PROTOBUF_FIELD_OFFSET(SandboxPayInResponse, _impl_.balance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
  }}, {{
  }},
};

::uint8_t* SandboxPayInResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public_.invest.api.contract.v1.MoneyValue balance = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::balance(this),
        _Internal::balance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
  return target;
}

::size_t SandboxPayInResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tinkoff.public_.invest.api.contract.v1.MoneyValue balance = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.balance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SandboxPayInResponse::_class_data_ = {
    SandboxPayInResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SandboxPayInResponse::GetClassData() const {
  return &_class_data_;
}

void SandboxPayInResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SandboxPayInResponse*>(&to_msg);
  auto& from = static_cast<const SandboxPayInResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_balance()->::tinkoff::public_::invest::api::contract::v1::MoneyValue::MergeFrom(
        from._internal_balance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SandboxPayInResponse::CopyFrom(const SandboxPayInResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public_.invest.api.contract.v1.SandboxPayInResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SandboxPayInResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SandboxPayInResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SandboxPayInResponse::InternalSwap(SandboxPayInResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.balance_, other->_impl_.balance_);
}

::google::protobuf::Metadata SandboxPayInResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sandbox_2eproto_getter, &descriptor_table_sandbox_2eproto_once,
      file_level_metadata_sandbox_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
