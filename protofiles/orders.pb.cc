// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orders.proto

#include "orders.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace public {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr TradesStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TradesStreamRequest::TradesStreamRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TradesStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradesStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradesStreamRequestDefaultTypeInternal() {}
  union {
    TradesStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradesStreamRequestDefaultTypeInternal _TradesStreamRequest_default_instance_;

inline constexpr GetOrdersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrdersRequest::GetOrdersRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetOrdersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrdersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrdersRequestDefaultTypeInternal() {}
  union {
    GetOrdersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrdersRequestDefaultTypeInternal _GetOrdersRequest_default_instance_;

inline constexpr GetOrderStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderStateRequest::GetOrderStateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetOrderStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderStateRequestDefaultTypeInternal() {}
  union {
    GetOrderStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderStateRequestDefaultTypeInternal _GetOrderStateRequest_default_instance_;

inline constexpr CancelOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelOrderRequest::CancelOrderRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CancelOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOrderRequestDefaultTypeInternal() {}
  union {
    CancelOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOrderRequestDefaultTypeInternal _CancelOrderRequest_default_instance_;

inline constexpr ReplaceOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        idempotency_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        quantity_{::int64_t{0}},
        price_type_{static_cast< ::tinkoff::public::invest::api::contract::v1::PriceType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ReplaceOrderRequest::ReplaceOrderRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReplaceOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplaceOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplaceOrderRequestDefaultTypeInternal() {}
  union {
    ReplaceOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplaceOrderRequestDefaultTypeInternal _ReplaceOrderRequest_default_instance_;

inline constexpr PostOrderResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_order_price_{nullptr},
        executed_order_price_{nullptr},
        total_order_amount_{nullptr},
        initial_commission_{nullptr},
        executed_commission_{nullptr},
        aci_value_{nullptr},
        initial_security_price_{nullptr},
        initial_order_price_pt_{nullptr},
        lots_requested_{::int64_t{0}},
        lots_executed_{::int64_t{0}},
        execution_report_status_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderExecutionReportStatus >(0)},
        direction_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderDirection >(0)},
        order_type_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PostOrderResponse::PostOrderResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PostOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostOrderResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostOrderResponseDefaultTypeInternal() {}
  union {
    PostOrderResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostOrderResponseDefaultTypeInternal _PostOrderResponse_default_instance_;

inline constexpr PostOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        quantity_{::int64_t{0}},
        direction_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderDirection >(0)},
        order_type_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PostOrderRequest::PostOrderRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PostOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostOrderRequestDefaultTypeInternal() {}
  union {
    PostOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostOrderRequestDefaultTypeInternal _PostOrderRequest_default_instance_;

inline constexpr OrderTrade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_time_{nullptr},
        price_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OrderTrade::OrderTrade(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrderTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderTradeDefaultTypeInternal() {}
  union {
    OrderTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderTradeDefaultTypeInternal _OrderTrade_default_instance_;

inline constexpr OrderStage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OrderStage::OrderStage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrderStageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStageDefaultTypeInternal() {}
  union {
    OrderStage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStageDefaultTypeInternal _OrderStage_default_instance_;

inline constexpr CancelOrderResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CancelOrderResponse::CancelOrderResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CancelOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOrderResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOrderResponseDefaultTypeInternal() {}
  union {
    CancelOrderResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOrderResponseDefaultTypeInternal _CancelOrderResponse_default_instance_;

inline constexpr OrderTrades::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trades_{},
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{nullptr},
        direction_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderDirection >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderTrades::OrderTrades(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrderTradesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderTradesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderTradesDefaultTypeInternal() {}
  union {
    OrderTrades _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderTradesDefaultTypeInternal _OrderTrades_default_instance_;

inline constexpr OrderState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stages_{},
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_order_price_{nullptr},
        executed_order_price_{nullptr},
        total_order_amount_{nullptr},
        average_position_price_{nullptr},
        initial_commission_{nullptr},
        executed_commission_{nullptr},
        initial_security_price_{nullptr},
        service_commission_{nullptr},
        order_date_{nullptr},
        lots_requested_{::int64_t{0}},
        lots_executed_{::int64_t{0}},
        execution_report_status_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderExecutionReportStatus >(0)},
        direction_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderDirection >(0)},
        order_type_{static_cast< ::tinkoff::public::invest::api::contract::v1::OrderType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderState::OrderState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrderStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStateDefaultTypeInternal() {}
  union {
    OrderState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStateDefaultTypeInternal _OrderState_default_instance_;

inline constexpr TradesStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TradesStreamResponse::TradesStreamResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TradesStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradesStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradesStreamResponseDefaultTypeInternal() {}
  union {
    TradesStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradesStreamResponseDefaultTypeInternal _TradesStreamResponse_default_instance_;

inline constexpr GetOrdersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : orders_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrdersResponse::GetOrdersResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetOrdersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrdersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrdersResponseDefaultTypeInternal() {}
  union {
    GetOrdersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrdersResponseDefaultTypeInternal _GetOrdersResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public
}  // namespace tinkoff
static ::_pb::Metadata file_level_metadata_orders_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_orders_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_orders_2eproto = nullptr;
const ::uint32_t TableStruct_orders_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::TradesStreamRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::TradesStreamRequest, _impl_.accounts_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::TradesStreamResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::TradesStreamResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::TradesStreamResponse, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_.order_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_.created_at_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_.trades_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrades, _impl_.instrument_uid_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrade, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrade, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrade, _impl_.date_time_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrade, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrade, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderTrade, _impl_.trade_id_),
    0,
    1,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.order_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.order_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderRequest, _impl_.instrument_id_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.order_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.execution_report_status_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.lots_requested_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.lots_executed_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.initial_order_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.executed_order_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.total_order_amount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.initial_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.executed_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.aci_value_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.initial_security_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.order_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.initial_order_price_pt_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PostOrderResponse, _impl_.instrument_uid_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    3,
    4,
    5,
    ~0u,
    ~0u,
    6,
    ~0u,
    ~0u,
    7,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::CancelOrderRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::CancelOrderRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::CancelOrderRequest, _impl_.order_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::CancelOrderResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::CancelOrderResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::CancelOrderResponse, _impl_.time_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOrderStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOrderStateRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOrderStateRequest, _impl_.order_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOrdersRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOrdersRequest, _impl_.account_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOrdersResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOrdersResponse, _impl_.orders_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.order_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.execution_report_status_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.lots_requested_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.lots_executed_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.initial_order_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.executed_order_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.total_order_amount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.average_position_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.initial_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.executed_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.initial_security_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.stages_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.service_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.order_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.order_date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.instrument_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderState, _impl_.order_request_id_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    3,
    4,
    5,
    ~0u,
    ~0u,
    6,
    ~0u,
    7,
    ~0u,
    ~0u,
    8,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderStage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderStage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderStage, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderStage, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OrderStage, _impl_.trade_id_),
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _impl_.order_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _impl_.idempotency_key_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest, _impl_.price_type_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::TradesStreamRequest)},
        {9, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::TradesStreamResponse)},
        {20, 35, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OrderTrades)},
        {42, 54, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OrderTrade)},
        {58, 74, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PostOrderRequest)},
        {82, 107, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PostOrderResponse)},
        {124, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::CancelOrderRequest)},
        {134, 143, -1, sizeof(::tinkoff::public::invest::api::contract::v1::CancelOrderResponse)},
        {144, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetOrderStateRequest)},
        {154, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetOrdersRequest)},
        {163, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetOrdersResponse)},
        {172, 200, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OrderState)},
        {220, 231, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OrderStage)},
        {234, 248, -1, sizeof(::tinkoff::public::invest::api::contract::v1::ReplaceOrderRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::public::invest::api::contract::v1::_TradesStreamRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_TradesStreamResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OrderTrades_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OrderTrade_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PostOrderRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PostOrderResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_CancelOrderRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_CancelOrderResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetOrderStateRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetOrdersRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetOrdersResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OrderState_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OrderStage_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_ReplaceOrderRequest_default_instance_._instance,
};
const char descriptor_table_protodef_orders_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014orders.proto\022%tinkoff.public.invest.ap"
    "i.contract.v1\032\014common.proto\032\037google/prot"
    "obuf/timestamp.proto\"\'\n\023TradesStreamRequ"
    "est\022\020\n\010accounts\030\001 \003(\t\"\252\001\n\024TradesStreamRe"
    "sponse\022J\n\014order_trades\030\001 \001(\01322.tinkoff.p"
    "ublic.invest.api.contract.v1.OrderTrades"
    "H\000\022;\n\004ping\030\002 \001(\0132+.tinkoff.public.invest"
    ".api.contract.v1.PingH\000B\t\n\007payload\"\226\002\n\013O"
    "rderTrades\022\020\n\010order_id\030\001 \001(\t\022.\n\ncreated_"
    "at\030\002 \001(\0132\032.google.protobuf.Timestamp\022H\n\t"
    "direction\030\003 \001(\01625.tinkoff.public.invest."
    "api.contract.v1.OrderDirection\022\014\n\004figi\030\004"
    " \001(\t\022A\n\006trades\030\005 \003(\01321.tinkoff.public.in"
    "vest.api.contract.v1.OrderTrade\022\022\n\naccou"
    "nt_id\030\006 \001(\t\022\026\n\016instrument_uid\030\007 \001(\t\"\240\001\n\n"
    "OrderTrade\022-\n\tdate_time\030\001 \001(\0132\032.google.p"
    "rotobuf.Timestamp\022\?\n\005price\030\002 \001(\01320.tinko"
    "ff.public.invest.api.contract.v1.Quotati"
    "on\022\020\n\010quantity\030\003 \001(\003\022\020\n\010trade_id\030\004 \001(\t\"\304"
    "\002\n\020PostOrderRequest\022\020\n\004figi\030\001 \001(\tB\002\030\001\022\020\n"
    "\010quantity\030\002 \001(\003\022\?\n\005price\030\003 \001(\01320.tinkoff"
    ".public.invest.api.contract.v1.Quotation"
    "\022H\n\tdirection\030\004 \001(\01625.tinkoff.public.inv"
    "est.api.contract.v1.OrderDirection\022\022\n\nac"
    "count_id\030\005 \001(\t\022D\n\norder_type\030\006 \001(\01620.tin"
    "koff.public.invest.api.contract.v1.Order"
    "Type\022\020\n\010order_id\030\007 \001(\t\022\025\n\rinstrument_id\030"
    "\010 \001(\t\"\371\007\n\021PostOrderResponse\022\020\n\010order_id\030"
    "\001 \001(\t\022b\n\027execution_report_status\030\002 \001(\0162A"
    ".tinkoff.public.invest.api.contract.v1.O"
    "rderExecutionReportStatus\022\026\n\016lots_reques"
    "ted\030\003 \001(\003\022\025\n\rlots_executed\030\004 \001(\003\022N\n\023init"
    "ial_order_price\030\005 \001(\01321.tinkoff.public.i"
    "nvest.api.contract.v1.MoneyValue\022O\n\024exec"
    "uted_order_price\030\006 \001(\01321.tinkoff.public."
    "invest.api.contract.v1.MoneyValue\022M\n\022tot"
    "al_order_amount\030\007 \001(\01321.tinkoff.public.i"
    "nvest.api.contract.v1.MoneyValue\022M\n\022init"
    "ial_commission\030\010 \001(\01321.tinkoff.public.in"
    "vest.api.contract.v1.MoneyValue\022N\n\023execu"
    "ted_commission\030\t \001(\01321.tinkoff.public.in"
    "vest.api.contract.v1.MoneyValue\022D\n\taci_v"
    "alue\030\n \001(\01321.tinkoff.public.invest.api.c"
    "ontract.v1.MoneyValue\022\014\n\004figi\030\013 \001(\t\022H\n\td"
    "irection\030\014 \001(\01625.tinkoff.public.invest.a"
    "pi.contract.v1.OrderDirection\022Q\n\026initial"
    "_security_price\030\r \001(\01321.tinkoff.public.i"
    "nvest.api.contract.v1.MoneyValue\022D\n\norde"
    "r_type\030\016 \001(\01620.tinkoff.public.invest.api"
    ".contract.v1.OrderType\022\017\n\007message\030\017 \001(\t\022"
    "P\n\026initial_order_price_pt\030\020 \001(\01320.tinkof"
    "f.public.invest.api.contract.v1.Quotatio"
    "n\022\026\n\016instrument_uid\030\021 \001(\t\":\n\022CancelOrder"
    "Request\022\022\n\naccount_id\030\001 \001(\t\022\020\n\010order_id\030"
    "\002 \001(\t\"\?\n\023CancelOrderResponse\022(\n\004time\030\001 \001"
    "(\0132\032.google.protobuf.Timestamp\"<\n\024GetOrd"
    "erStateRequest\022\022\n\naccount_id\030\001 \001(\t\022\020\n\010or"
    "der_id\030\002 \001(\t\"&\n\020GetOrdersRequest\022\022\n\nacco"
    "unt_id\030\001 \001(\t\"V\n\021GetOrdersResponse\022A\n\006ord"
    "ers\030\001 \003(\01321.tinkoff.public.invest.api.co"
    "ntract.v1.OrderState\"\212\t\n\nOrderState\022\020\n\010o"
    "rder_id\030\001 \001(\t\022b\n\027execution_report_status"
    "\030\002 \001(\0162A.tinkoff.public.invest.api.contr"
    "act.v1.OrderExecutionReportStatus\022\026\n\016lot"
    "s_requested\030\003 \001(\003\022\025\n\rlots_executed\030\004 \001(\003"
    "\022N\n\023initial_order_price\030\005 \001(\01321.tinkoff."
    "public.invest.api.contract.v1.MoneyValue"
    "\022O\n\024executed_order_price\030\006 \001(\01321.tinkoff"
    ".public.invest.api.contract.v1.MoneyValu"
    "e\022M\n\022total_order_amount\030\007 \001(\01321.tinkoff."
    "public.invest.api.contract.v1.MoneyValue"
    "\022Q\n\026average_position_price\030\010 \001(\01321.tinko"
    "ff.public.invest.api.contract.v1.MoneyVa"
    "lue\022M\n\022initial_commission\030\t \001(\01321.tinkof"
    "f.public.invest.api.contract.v1.MoneyVal"
    "ue\022N\n\023executed_commission\030\n \001(\01321.tinkof"
    "f.public.invest.api.contract.v1.MoneyVal"
    "ue\022\014\n\004figi\030\013 \001(\t\022H\n\tdirection\030\014 \001(\01625.ti"
    "nkoff.public.invest.api.contract.v1.Orde"
    "rDirection\022Q\n\026initial_security_price\030\r \001"
    "(\01321.tinkoff.public.invest.api.contract."
    "v1.MoneyValue\022A\n\006stages\030\016 \003(\01321.tinkoff."
    "public.invest.api.contract.v1.OrderStage"
    "\022M\n\022service_commission\030\017 \001(\01321.tinkoff.p"
    "ublic.invest.api.contract.v1.MoneyValue\022"
    "\020\n\010currency\030\020 \001(\t\022D\n\norder_type\030\021 \001(\01620."
    "tinkoff.public.invest.api.contract.v1.Or"
    "derType\022.\n\norder_date\030\022 \001(\0132\032.google.pro"
    "tobuf.Timestamp\022\026\n\016instrument_uid\030\023 \001(\t\022"
    "\030\n\020order_request_id\030\024 \001(\t\"r\n\nOrderStage\022"
    "@\n\005price\030\001 \001(\01321.tinkoff.public.invest.a"
    "pi.contract.v1.MoneyValue\022\020\n\010quantity\030\002 "
    "\001(\003\022\020\n\010trade_id\030\003 \001(\t\"\355\001\n\023ReplaceOrderRe"
    "quest\022\022\n\naccount_id\030\001 \001(\t\022\020\n\010order_id\030\006 "
    "\001(\t\022\027\n\017idempotency_key\030\007 \001(\t\022\020\n\010quantity"
    "\030\013 \001(\003\022\?\n\005price\030\014 \001(\01320.tinkoff.public.i"
    "nvest.api.contract.v1.Quotation\022D\n\nprice"
    "_type\030\r \001(\01620.tinkoff.public.invest.api."
    "contract.v1.PriceType*d\n\016OrderDirection\022"
    "\037\n\033ORDER_DIRECTION_UNSPECIFIED\020\000\022\027\n\023ORDE"
    "R_DIRECTION_BUY\020\001\022\030\n\024ORDER_DIRECTION_SEL"
    "L\020\002*n\n\tOrderType\022\032\n\026ORDER_TYPE_UNSPECIFI"
    "ED\020\000\022\024\n\020ORDER_TYPE_LIMIT\020\001\022\025\n\021ORDER_TYPE"
    "_MARKET\020\002\022\030\n\024ORDER_TYPE_BESTPRICE\020\003*\200\002\n\032"
    "OrderExecutionReportStatus\022\'\n#EXECUTION_"
    "REPORT_STATUS_UNSPECIFIED\020\000\022 \n\034EXECUTION"
    "_REPORT_STATUS_FILL\020\001\022$\n EXECUTION_REPOR"
    "T_STATUS_REJECTED\020\002\022%\n!EXECUTION_REPORT_"
    "STATUS_CANCELLED\020\003\022\037\n\033EXECUTION_REPORT_S"
    "TATUS_NEW\020\004\022)\n%EXECUTION_REPORT_STATUS_P"
    "ARTIALLYFILL\020\005*V\n\tPriceType\022\032\n\026PRICE_TYP"
    "E_UNSPECIFIED\020\000\022\024\n\020PRICE_TYPE_POINT\020\001\022\027\n"
    "\023PRICE_TYPE_CURRENCY\020\0022\241\001\n\023OrdersStreamS"
    "ervice\022\211\001\n\014TradesStream\022:.tinkoff.public"
    ".invest.api.contract.v1.TradesStreamRequ"
    "est\032;.tinkoff.public.invest.api.contract"
    ".v1.TradesStreamResponse0\0012\236\005\n\rOrdersSer"
    "vice\022~\n\tPostOrder\0227.tinkoff.public.inves"
    "t.api.contract.v1.PostOrderRequest\0328.tin"
    "koff.public.invest.api.contract.v1.PostO"
    "rderResponse\022\204\001\n\013CancelOrder\0229.tinkoff.p"
    "ublic.invest.api.contract.v1.CancelOrder"
    "Request\032:.tinkoff.public.invest.api.cont"
    "ract.v1.CancelOrderResponse\022\177\n\rGetOrderS"
    "tate\022;.tinkoff.public.invest.api.contrac"
    "t.v1.GetOrderStateRequest\0321.tinkoff.publ"
    "ic.invest.api.contract.v1.OrderState\022~\n\t"
    "GetOrders\0227.tinkoff.public.invest.api.co"
    "ntract.v1.GetOrdersRequest\0328.tinkoff.pub"
    "lic.invest.api.contract.v1.GetOrdersResp"
    "onse\022\204\001\n\014ReplaceOrder\022:.tinkoff.public.i"
    "nvest.api.contract.v1.ReplaceOrderReques"
    "t\0328.tinkoff.public.invest.api.contract.v"
    "1.PostOrderResponseBa\n\034ru.tinkoff.piapi."
    "contract.v1P\001Z\014./;investapi\242\002\005TIAPI\252\002\024Ti"
    "nkoff.InvestApi.V1\312\002\021Tinkoff\\Invest\\V1b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_orders_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_orders_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_orders_2eproto = {
    false,
    false,
    5446,
    descriptor_table_protodef_orders_2eproto,
    "orders.proto",
    &descriptor_table_orders_2eproto_once,
    descriptor_table_orders_2eproto_deps,
    2,
    14,
    schemas,
    file_default_instances,
    TableStruct_orders_2eproto::offsets,
    file_level_metadata_orders_2eproto,
    file_level_enum_descriptors_orders_2eproto,
    file_level_service_descriptors_orders_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_orders_2eproto_getter() {
  return &descriptor_table_orders_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_orders_2eproto(&descriptor_table_orders_2eproto);
namespace tinkoff {
namespace public {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* OrderDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t OrderDirection_internal_data_[] = {
    196608u, 0u, };
bool OrderDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* OrderType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t OrderType_internal_data_[] = {
    262144u, 0u, };
bool OrderType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* OrderExecutionReportStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t OrderExecutionReportStatus_internal_data_[] = {
    393216u, 0u, };
bool OrderExecutionReportStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* PriceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t PriceType_internal_data_[] = {
    196608u, 0u, };
bool PriceType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class TradesStreamRequest::_Internal {
 public:
};

TradesStreamRequest::TradesStreamRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : accounts_{visibility, arena, from.accounts_},
        _cached_size_{0} {}

TradesStreamRequest::TradesStreamRequest(
    ::google::protobuf::Arena* arena,
    const TradesStreamRequest& from)
    : ::google::protobuf::Message(arena) {
  TradesStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        _cached_size_{0} {}

inline void TradesStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TradesStreamRequest::~TradesStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TradesStreamRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TradesStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TradesStreamRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 74, 2> TradesStreamRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TradesStreamRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string accounts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_.accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string accounts = 1;
    {PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\71\10\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.TradesStreamRequest"
    "accounts"
  }},
};

::uint8_t* TradesStreamRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string accounts = 1;
  for (int i = 0, n = this->_internal_accounts_size(); i < n; ++i) {
    const auto& s = this->_internal_accounts().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  return target;
}

::size_t TradesStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accounts = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_accounts().size());
  for (int i = 0, n = _internal_accounts().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_accounts().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TradesStreamRequest::_class_data_ = {
    TradesStreamRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TradesStreamRequest::GetClassData() const {
  return &_class_data_;
}

void TradesStreamRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TradesStreamRequest*>(&to_msg);
  auto& from = static_cast<const TradesStreamRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradesStreamRequest::CopyFrom(const TradesStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TradesStreamRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TradesStreamRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TradesStreamRequest::InternalSwap(TradesStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
}

::google::protobuf::Metadata TradesStreamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[0]);
}
// ===================================================================

class TradesStreamResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::TradesStreamResponse, _impl_._oneof_case_);
  static const ::tinkoff::public::invest::api::contract::v1::OrderTrades& order_trades(const TradesStreamResponse* msg);
  static const ::tinkoff::public::invest::api::contract::v1::Ping& ping(const TradesStreamResponse* msg);
};

const ::tinkoff::public::invest::api::contract::v1::OrderTrades& TradesStreamResponse::_Internal::order_trades(const TradesStreamResponse* msg) {
  return *msg->_impl_.payload_.order_trades_;
}
const ::tinkoff::public::invest::api::contract::v1::Ping& TradesStreamResponse::_Internal::ping(const TradesStreamResponse* msg) {
  return *msg->_impl_.payload_.ping_;
}
void TradesStreamResponse::set_allocated_order_trades(::tinkoff::public::invest::api::contract::v1::OrderTrades* order_trades) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_trades) {
    ::google::protobuf::Arena* submessage_arena = order_trades->GetArena();
    if (message_arena != submessage_arena) {
      order_trades = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_trades, submessage_arena);
    }
    set_has_order_trades();
    _impl_.payload_.order_trades_ = order_trades;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.order_trades)
}
void TradesStreamResponse::set_allocated_ping(::tinkoff::public::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.ping)
}
void TradesStreamResponse::clear_ping() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    }
    clear_has_payload();
  }
}
TradesStreamResponse::TradesStreamResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

TradesStreamResponse::TradesStreamResponse(
    ::google::protobuf::Arena* arena,
    const TradesStreamResponse& from)
    : ::google::protobuf::Message(arena) {
  TradesStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kOrderTrades:
        _impl_.payload_.order_trades_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::OrderTrades>(arena, *from._impl_.payload_.order_trades_);
        break;
      case kPing:
        _impl_.payload_.ping_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void TradesStreamResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TradesStreamResponse::~TradesStreamResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TradesStreamResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void TradesStreamResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kOrderTrades: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_trades_;
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void TradesStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TradesStreamResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> TradesStreamResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TradesStreamResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.OrderTrades order_trades = 1;
    {PROTOBUF_FIELD_OFFSET(TradesStreamResponse, _impl_.payload_.order_trades_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
    {PROTOBUF_FIELD_OFFSET(TradesStreamResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OrderTrades>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Ping>()},
  }}, {{
  }},
};

::uint8_t* TradesStreamResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (payload_case()) {
    case kOrderTrades: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::order_trades(this),
          _Internal::order_trades(this).GetCachedSize(), target, stream);
      break;
    }
    case kPing: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::ping(this),
          _Internal::ping(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  return target;
}

::size_t TradesStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .tinkoff.public.invest.api.contract.v1.OrderTrades order_trades = 1;
    case kOrderTrades: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.order_trades_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
    case kPing: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.ping_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TradesStreamResponse::_class_data_ = {
    TradesStreamResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TradesStreamResponse::GetClassData() const {
  return &_class_data_;
}

void TradesStreamResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TradesStreamResponse*>(&to_msg);
  auto& from = static_cast<const TradesStreamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kOrderTrades: {
      _this->_internal_mutable_order_trades()->::tinkoff::public::invest::api::contract::v1::OrderTrades::MergeFrom(
          from._internal_order_trades());
      break;
    }
    case kPing: {
      _this->_internal_mutable_ping()->::tinkoff::public::invest::api::contract::v1::Ping::MergeFrom(
          from._internal_ping());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradesStreamResponse::CopyFrom(const TradesStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TradesStreamResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TradesStreamResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TradesStreamResponse::InternalSwap(TradesStreamResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TradesStreamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[1]);
}
// ===================================================================

class OrderTrades::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderTrades>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& created_at(const OrderTrades* msg);
  static void set_has_created_at(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& OrderTrades::_Internal::created_at(const OrderTrades* msg) {
  return *msg->_impl_.created_at_;
}
void OrderTrades::clear_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
OrderTrades::OrderTrades(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderTrades)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trades_{visibility, arena, from.trades_},
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        account_id_(arena, from.account_id_),
        instrument_uid_(arena, from.instrument_uid_) {}

OrderTrades::OrderTrades(
    ::google::protobuf::Arena* arena,
    const OrderTrades& from)
    : ::google::protobuf::Message(arena) {
  OrderTrades* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_)
                : nullptr;
  _impl_.direction_ = from._impl_.direction_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderTrades)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trades_{visibility, arena},
        order_id_(arena),
        figi_(arena),
        account_id_(arena),
        instrument_uid_(arena) {}

inline void OrderTrades::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::direction_));
}
OrderTrades::~OrderTrades() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderTrades)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrderTrades::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.order_id_.Destroy();
  _impl_.figi_.Destroy();
  _impl_.account_id_.Destroy();
  _impl_.instrument_uid_.Destroy();
  delete _impl_.created_at_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OrderTrades::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.account_id_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.created_at_ != nullptr);
    _impl_.created_at_->Clear();
  }
  _impl_.direction_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrderTrades::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 94, 2> OrderTrades::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrderTrades_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.order_id_)}},
    // .google.protobuf.Timestamp created_at = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.created_at_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderTrades, _impl_.direction_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.direction_)}},
    // string figi = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.figi_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.trades_)}},
    // string account_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.account_id_)}},
    // string instrument_uid = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.instrument_uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string order_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp created_at = 2;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.created_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string figi = 4;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.trades_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string account_id = 6;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 7;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OrderTrade>()},
  }}, {{
    "\61\10\0\0\4\0\12\16"
    "tinkoff.public.invest.api.contract.v1.OrderTrades"
    "order_id"
    "figi"
    "account_id"
    "instrument_uid"
  }},
};

::uint8_t* OrderTrades::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.order_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp created_at = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_direction(), target);
  }

  // string figi = 4;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.figi");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trades_size()); i < n; i++) {
    const auto& repfield = this->_internal_trades().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string account_id = 6;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.account_id");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string instrument_uid = 7;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.instrument_uid");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderTrades)
  return target;
}

::size_t OrderTrades::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
  total_size += 1UL * this->_internal_trades_size();
  for (const auto& msg : this->_internal_trades()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  // string figi = 4;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string account_id = 6;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string instrument_uid = 7;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  // .google.protobuf.Timestamp created_at = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.created_at_);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OrderTrades::_class_data_ = {
    OrderTrades::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OrderTrades::GetClassData() const {
  return &_class_data_;
}

void OrderTrades::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OrderTrades*>(&to_msg);
  auto& from = static_cast<const OrderTrades&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_created_at()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_created_at());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderTrades::CopyFrom(const OrderTrades& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrderTrades::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OrderTrades::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OrderTrades::InternalSwap(OrderTrades* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.direction_)
      + sizeof(OrderTrades::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata OrderTrades::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[2]);
}
// ===================================================================

class OrderTrade::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderTrade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& date_time(const OrderTrade* msg);
  static void set_has_date_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& price(const OrderTrade* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& OrderTrade::_Internal::date_time(const OrderTrade* msg) {
  return *msg->_impl_.date_time_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& OrderTrade::_Internal::price(const OrderTrade* msg) {
  return *msg->_impl_.price_;
}
void OrderTrade::clear_date_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.date_time_ != nullptr) _impl_.date_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OrderTrade::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OrderTrade::OrderTrade(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderTrade)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_) {}

OrderTrade::OrderTrade(
    ::google::protobuf::Arena* arena,
    const OrderTrade& from)
    : ::google::protobuf::Message(arena) {
  OrderTrade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.date_time_)
                : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_)
                : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderTrade)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena) {}

inline void OrderTrade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_time_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, date_time_) +
               sizeof(Impl_::quantity_));
}
OrderTrade::~OrderTrade() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderTrade)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrderTrade::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.trade_id_.Destroy();
  delete _impl_.date_time_;
  delete _impl_.price_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OrderTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_time_ != nullptr);
      _impl_.date_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrderTrade::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 65, 2> OrderTrade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrderTrade_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string trade_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.trade_id_)}},
    // .google.protobuf.Timestamp date_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.date_time_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.price_)}},
    // int64 quantity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderTrade, _impl_.quantity_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp date_time = 1;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.date_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 3;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string trade_id = 4;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\60\0\0\0\10\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderTrade"
    "trade_id"
  }},
};

::uint8_t* OrderTrade::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp date_time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::date_time(this),
        _Internal::date_time(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // int64 quantity = 3;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_quantity(), target);
  }

  // string trade_id = 4;
  if (!this->_internal_trade_id().empty()) {
    const std::string& _s = this->_internal_trade_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrade.trade_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderTrade)
  return target;
}

::size_t OrderTrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trade_id = 4;
  if (!this->_internal_trade_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp date_time = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.date_time_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
    }

  }
  // int64 quantity = 3;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OrderTrade::_class_data_ = {
    OrderTrade::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OrderTrade::GetClassData() const {
  return &_class_data_;
}

void OrderTrade::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OrderTrade*>(&to_msg);
  auto& from = static_cast<const OrderTrade&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_date_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_date_time());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_price());
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderTrade::CopyFrom(const OrderTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrderTrade::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OrderTrade::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OrderTrade::InternalSwap(OrderTrade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.quantity_)
      + sizeof(OrderTrade::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.date_time_)>(
          reinterpret_cast<char*>(&_impl_.date_time_),
          reinterpret_cast<char*>(&other->_impl_.date_time_));
}

::google::protobuf::Metadata OrderTrade::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[3]);
}
// ===================================================================

class PostOrderRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PostOrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& price(const PostOrderRequest* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::Quotation& PostOrderRequest::_Internal::price(const PostOrderRequest* msg) {
  return *msg->_impl_.price_;
}
void PostOrderRequest::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PostOrderRequest::PostOrderRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_),
        instrument_id_(arena, from.instrument_id_) {}

PostOrderRequest::PostOrderRequest(
    ::google::protobuf::Arena* arena,
    const PostOrderRequest& from)
    : ::google::protobuf::Message(arena) {
  PostOrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::order_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        account_id_(arena),
        order_id_(arena),
        instrument_id_(arena) {}

inline void PostOrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::order_type_));
}
PostOrderRequest::~PostOrderRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PostOrderRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.figi_.Destroy();
  _impl_.account_id_.Destroy();
  _impl_.order_id_.Destroy();
  _impl_.instrument_id_.Destroy();
  delete _impl_.price_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PostOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_type_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.order_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PostOrderRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 106, 2> PostOrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PostOrderRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string instrument_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.instrument_id_)}},
    // string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.figi_)}},
    // int64 quantity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PostOrderRequest, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.quantity_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderRequest, _impl_.direction_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.direction_)}},
    // string account_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.account_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderRequest, _impl_.order_type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_type_)}},
    // string order_id = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 quantity = 2;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string account_id = 5;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string order_id = 7;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 8;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.instrument_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\66\4\0\0\0\12\0\10\15\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PostOrderRequest"
    "figi"
    "account_id"
    "order_id"
    "instrument_id"
  }},
};

::uint8_t* PostOrderRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string figi = 1 [deprecated = true];
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.figi");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 quantity = 2;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_quantity(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_direction(), target);
  }

  // string account_id = 5;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.account_id");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6;
  if (this->_internal_order_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_order_type(), target);
  }

  // string order_id = 7;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_id");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string instrument_id = 8;
  if (!this->_internal_instrument_id().empty()) {
    const std::string& _s = this->_internal_instrument_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.instrument_id");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  return target;
}

::size_t PostOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string figi = 1 [deprecated = true];
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string account_id = 5;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string order_id = 7;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  // string instrument_id = 8;
  if (!this->_internal_instrument_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_id());
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
  }

  // int64 quantity = 2;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6;
  if (this->_internal_order_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_order_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PostOrderRequest::_class_data_ = {
    PostOrderRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PostOrderRequest::GetClassData() const {
  return &_class_data_;
}

void PostOrderRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PostOrderRequest*>(&to_msg);
  auto& from = static_cast<const PostOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
        from._internal_price());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_order_type() != 0) {
    _this->_internal_set_order_type(from._internal_order_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PostOrderRequest::CopyFrom(const PostOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PostOrderRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PostOrderRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PostOrderRequest::InternalSwap(PostOrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_type_)
      + sizeof(PostOrderRequest::_impl_.order_type_)
      - PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata PostOrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[4]);
}
// ===================================================================

class PostOrderResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PostOrderResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& initial_order_price(const PostOrderResponse* msg);
  static void set_has_initial_order_price(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& executed_order_price(const PostOrderResponse* msg);
  static void set_has_executed_order_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_order_amount(const PostOrderResponse* msg);
  static void set_has_total_order_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& initial_commission(const PostOrderResponse* msg);
  static void set_has_initial_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& executed_commission(const PostOrderResponse* msg);
  static void set_has_executed_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& aci_value(const PostOrderResponse* msg);
  static void set_has_aci_value(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& initial_security_price(const PostOrderResponse* msg);
  static void set_has_initial_security_price(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& initial_order_price_pt(const PostOrderResponse* msg);
  static void set_has_initial_order_price_pt(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PostOrderResponse::_Internal::initial_order_price(const PostOrderResponse* msg) {
  return *msg->_impl_.initial_order_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PostOrderResponse::_Internal::executed_order_price(const PostOrderResponse* msg) {
  return *msg->_impl_.executed_order_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PostOrderResponse::_Internal::total_order_amount(const PostOrderResponse* msg) {
  return *msg->_impl_.total_order_amount_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PostOrderResponse::_Internal::initial_commission(const PostOrderResponse* msg) {
  return *msg->_impl_.initial_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PostOrderResponse::_Internal::executed_commission(const PostOrderResponse* msg) {
  return *msg->_impl_.executed_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PostOrderResponse::_Internal::aci_value(const PostOrderResponse* msg) {
  return *msg->_impl_.aci_value_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PostOrderResponse::_Internal::initial_security_price(const PostOrderResponse* msg) {
  return *msg->_impl_.initial_security_price_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& PostOrderResponse::_Internal::initial_order_price_pt(const PostOrderResponse* msg) {
  return *msg->_impl_.initial_order_price_pt_;
}
void PostOrderResponse::clear_initial_order_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.initial_order_price_ != nullptr) _impl_.initial_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PostOrderResponse::clear_executed_order_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.executed_order_price_ != nullptr) _impl_.executed_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PostOrderResponse::clear_total_order_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_order_amount_ != nullptr) _impl_.total_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void PostOrderResponse::clear_initial_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.initial_commission_ != nullptr) _impl_.initial_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void PostOrderResponse::clear_executed_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.executed_commission_ != nullptr) _impl_.executed_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void PostOrderResponse::clear_aci_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.aci_value_ != nullptr) _impl_.aci_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void PostOrderResponse::clear_initial_security_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.initial_security_price_ != nullptr) _impl_.initial_security_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void PostOrderResponse::clear_initial_order_price_pt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.initial_order_price_pt_ != nullptr) _impl_.initial_order_price_pt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
PostOrderResponse::PostOrderResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        message_(arena, from.message_),
        instrument_uid_(arena, from.instrument_uid_) {}

PostOrderResponse::PostOrderResponse(
    ::google::protobuf::Arena* arena,
    const PostOrderResponse& from)
    : ::google::protobuf::Message(arena) {
  PostOrderResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initial_order_price_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_order_price_)
                : nullptr;
  _impl_.executed_order_price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_order_price_)
                : nullptr;
  _impl_.total_order_amount_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_order_amount_)
                : nullptr;
  _impl_.initial_commission_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_commission_)
                : nullptr;
  _impl_.executed_commission_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_commission_)
                : nullptr;
  _impl_.aci_value_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.aci_value_)
                : nullptr;
  _impl_.initial_security_price_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_security_price_)
                : nullptr;
  _impl_.initial_order_price_pt_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.initial_order_price_pt_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lots_requested_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lots_requested_),
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, lots_requested_) +
               sizeof(Impl_::order_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        order_id_(arena),
        figi_(arena),
        message_(arena),
        instrument_uid_(arena) {}

inline void PostOrderResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_order_price_),
           0,
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, initial_order_price_) +
               sizeof(Impl_::order_type_));
}
PostOrderResponse::~PostOrderResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PostOrderResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.order_id_.Destroy();
  _impl_.figi_.Destroy();
  _impl_.message_.Destroy();
  _impl_.instrument_uid_.Destroy();
  delete _impl_.initial_order_price_;
  delete _impl_.executed_order_price_;
  delete _impl_.total_order_amount_;
  delete _impl_.initial_commission_;
  delete _impl_.executed_commission_;
  delete _impl_.aci_value_;
  delete _impl_.initial_security_price_;
  delete _impl_.initial_order_price_pt_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PostOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.initial_order_price_ != nullptr);
      _impl_.initial_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.executed_order_price_ != nullptr);
      _impl_.executed_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.total_order_amount_ != nullptr);
      _impl_.total_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.initial_commission_ != nullptr);
      _impl_.initial_commission_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.executed_commission_ != nullptr);
      _impl_.executed_commission_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.aci_value_ != nullptr);
      _impl_.aci_value_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.initial_security_price_ != nullptr);
      _impl_.initial_security_price_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.initial_order_price_pt_ != nullptr);
      _impl_.initial_order_price_pt_->Clear();
    }
  }
  ::memset(&_impl_.lots_requested_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_type_) -
      reinterpret_cast<char*>(&_impl_.lots_requested_)) + sizeof(_impl_.order_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PostOrderResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 8, 113, 2> PostOrderResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_._has_bits_),
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PostOrderResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderResponse, _impl_.execution_report_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.execution_report_status_)}},
    // int64 lots_requested = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PostOrderResponse, _impl_.lots_requested_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_requested_)}},
    // int64 lots_executed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PostOrderResponse, _impl_.lots_executed_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_executed_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.total_order_amount_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.aci_value_)}},
    // string figi = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderResponse, _impl_.direction_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.direction_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 6, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_security_price_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderResponse, _impl_.order_type_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_type_)}},
    // string message = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.message_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 7, 7, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_pt_)}},
    // string instrument_uid = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string order_id = 1;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.execution_report_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 lots_requested = 3;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_requested_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 lots_executed = 4;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_executed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_order_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.total_order_amount_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_commission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_commission_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.aci_value_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string figi = 11;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_security_price_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 15;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_pt_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 17;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\67\10\0\0\0\0\0\0\0\0\0\4\0\0\0\7\0\16\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PostOrderResponse"
    "order_id"
    "figi"
    "message"
    "instrument_uid"
  }},
};

::uint8_t* PostOrderResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
  if (this->_internal_execution_report_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_execution_report_status(), target);
  }

  // int64 lots_requested = 3;
  if (this->_internal_lots_requested() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_lots_requested(), target);
  }

  // int64 lots_executed = 4;
  if (this->_internal_lots_executed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_lots_executed(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::initial_order_price(this),
        _Internal::initial_order_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::executed_order_price(this),
        _Internal::executed_order_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::total_order_amount(this),
        _Internal::total_order_amount(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::initial_commission(this),
        _Internal::initial_commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::executed_commission(this),
        _Internal::executed_commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::aci_value(this),
        _Internal::aci_value(this).GetCachedSize(), target, stream);
  }

  // string figi = 11;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.figi");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        12, this->_internal_direction(), target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, _Internal::initial_security_price(this),
        _Internal::initial_security_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
  if (this->_internal_order_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        14, this->_internal_order_type(), target);
  }

  // string message = 15;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.message");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, _Internal::initial_order_price_pt(this),
        _Internal::initial_order_price_pt(this).GetCachedSize(), target, stream);
  }

  // string instrument_uid = 17;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.instrument_uid");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  return target;
}

::size_t PostOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  // string figi = 11;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string message = 15;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // string instrument_uid = 17;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.initial_order_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.executed_order_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_order_amount_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.initial_commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.executed_commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.aci_value_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.initial_security_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.initial_order_price_pt_);
    }

  }
  // int64 lots_requested = 3;
  if (this->_internal_lots_requested() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_lots_requested());
  }

  // int64 lots_executed = 4;
  if (this->_internal_lots_executed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_lots_executed());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
  if (this->_internal_execution_report_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_execution_report_status());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
  if (this->_internal_order_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_order_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PostOrderResponse::_class_data_ = {
    PostOrderResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PostOrderResponse::GetClassData() const {
  return &_class_data_;
}

void PostOrderResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PostOrderResponse*>(&to_msg);
  auto& from = static_cast<const PostOrderResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_initial_order_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_initial_order_price());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_executed_order_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_executed_order_price());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_total_order_amount()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_order_amount());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_initial_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_initial_commission());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_executed_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_executed_commission());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_aci_value()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_aci_value());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_initial_security_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_initial_security_price());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_initial_order_price_pt()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_initial_order_price_pt());
    }
  }
  if (from._internal_lots_requested() != 0) {
    _this->_internal_set_lots_requested(from._internal_lots_requested());
  }
  if (from._internal_lots_executed() != 0) {
    _this->_internal_set_lots_executed(from._internal_lots_executed());
  }
  if (from._internal_execution_report_status() != 0) {
    _this->_internal_set_execution_report_status(from._internal_execution_report_status());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_order_type() != 0) {
    _this->_internal_set_order_type(from._internal_order_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PostOrderResponse::CopyFrom(const PostOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PostOrderResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PostOrderResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PostOrderResponse::InternalSwap(PostOrderResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_type_)
      + sizeof(PostOrderResponse::_impl_.order_type_)
      - PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_)>(
          reinterpret_cast<char*>(&_impl_.initial_order_price_),
          reinterpret_cast<char*>(&other->_impl_.initial_order_price_));
}

::google::protobuf::Metadata PostOrderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[5]);
}
// ===================================================================

class CancelOrderRequest::_Internal {
 public:
};

CancelOrderRequest::CancelOrderRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_),
        _cached_size_{0} {}

CancelOrderRequest::CancelOrderRequest(
    ::google::protobuf::Arena* arena,
    const CancelOrderRequest& from)
    : ::google::protobuf::Message(arena) {
  CancelOrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        order_id_(arena),
        _cached_size_{0} {}

inline void CancelOrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CancelOrderRequest::~CancelOrderRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CancelOrderRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.order_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CancelOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CancelOrderRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 83, 2> CancelOrderRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CancelOrderRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string order_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.order_id_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 2;
    {PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.order_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\12\10\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.CancelOrderRequest"
    "account_id"
    "order_id"
  }},
};

::uint8_t* CancelOrderRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CancelOrderRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string order_id = 2;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  return target;
}

::size_t CancelOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string order_id = 2;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CancelOrderRequest::_class_data_ = {
    CancelOrderRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CancelOrderRequest::GetClassData() const {
  return &_class_data_;
}

void CancelOrderRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CancelOrderRequest*>(&to_msg);
  auto& from = static_cast<const CancelOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOrderRequest::CopyFrom(const CancelOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CancelOrderRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CancelOrderRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CancelOrderRequest::InternalSwap(CancelOrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
}

::google::protobuf::Metadata CancelOrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[6]);
}
// ===================================================================

class CancelOrderResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CancelOrderResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& time(const CancelOrderResponse* msg);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& CancelOrderResponse::_Internal::time(const CancelOrderResponse* msg) {
  return *msg->_impl_.time_;
}
void CancelOrderResponse::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CancelOrderResponse::CancelOrderResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CancelOrderResponse::CancelOrderResponse(
    ::google::protobuf::Arena* arena,
    const CancelOrderResponse& from)
    : ::google::protobuf::Message(arena) {
  CancelOrderResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.time_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CancelOrderResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
CancelOrderResponse::~CancelOrderResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CancelOrderResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CancelOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_ != nullptr);
    _impl_.time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CancelOrderResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CancelOrderResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CancelOrderResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp time = 1;
    {PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* CancelOrderResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::time(this),
        _Internal::time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  return target;
}

::size_t CancelOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CancelOrderResponse::_class_data_ = {
    CancelOrderResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CancelOrderResponse::GetClassData() const {
  return &_class_data_;
}

void CancelOrderResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CancelOrderResponse*>(&to_msg);
  auto& from = static_cast<const CancelOrderResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOrderResponse::CopyFrom(const CancelOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CancelOrderResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CancelOrderResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CancelOrderResponse::InternalSwap(CancelOrderResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata CancelOrderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[7]);
}
// ===================================================================

class GetOrderStateRequest::_Internal {
 public:
};

GetOrderStateRequest::GetOrderStateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_),
        _cached_size_{0} {}

GetOrderStateRequest::GetOrderStateRequest(
    ::google::protobuf::Arena* arena,
    const GetOrderStateRequest& from)
    : ::google::protobuf::Message(arena) {
  GetOrderStateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        order_id_(arena),
        _cached_size_{0} {}

inline void GetOrderStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetOrderStateRequest::~GetOrderStateRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetOrderStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.order_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetOrderStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetOrderStateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 85, 2> GetOrderStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetOrderStateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string order_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.order_id_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.order_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\72\12\10\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOrderStateRequest"
    "account_id"
    "order_id"
  }},
};

::uint8_t* GetOrderStateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string order_id = 2;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  return target;
}

::size_t GetOrderStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string order_id = 2;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetOrderStateRequest::_class_data_ = {
    GetOrderStateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetOrderStateRequest::GetClassData() const {
  return &_class_data_;
}

void GetOrderStateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetOrderStateRequest*>(&to_msg);
  auto& from = static_cast<const GetOrderStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderStateRequest::CopyFrom(const GetOrderStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetOrderStateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetOrderStateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetOrderStateRequest::InternalSwap(GetOrderStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
}

::google::protobuf::Metadata GetOrderStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[8]);
}
// ===================================================================

class GetOrdersRequest::_Internal {
 public:
};

GetOrdersRequest::GetOrdersRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

GetOrdersRequest::GetOrdersRequest(
    ::google::protobuf::Arena* arena,
    const GetOrdersRequest& from)
    : ::google::protobuf::Message(arena) {
  GetOrdersRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void GetOrdersRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetOrdersRequest::~GetOrdersRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetOrdersRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetOrdersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetOrdersRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 73, 2> GetOrdersRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetOrdersRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrdersRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetOrdersRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOrdersRequest"
    "account_id"
  }},
};

::uint8_t* GetOrdersRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrdersRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  return target;
}

::size_t GetOrdersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetOrdersRequest::_class_data_ = {
    GetOrdersRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetOrdersRequest::GetClassData() const {
  return &_class_data_;
}

void GetOrdersRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetOrdersRequest*>(&to_msg);
  auto& from = static_cast<const GetOrdersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrdersRequest::CopyFrom(const GetOrdersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetOrdersRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetOrdersRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetOrdersRequest::InternalSwap(GetOrdersRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata GetOrdersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[9]);
}
// ===================================================================

class GetOrdersResponse::_Internal {
 public:
};

GetOrdersResponse::GetOrdersResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : orders_{visibility, arena, from.orders_},
        _cached_size_{0} {}

GetOrdersResponse::GetOrdersResponse(
    ::google::protobuf::Arena* arena,
    const GetOrdersResponse& from)
    : ::google::protobuf::Message(arena) {
  GetOrdersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : orders_{visibility, arena},
        _cached_size_{0} {}

inline void GetOrdersResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetOrdersResponse::~GetOrdersResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetOrdersResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetOrdersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orders_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetOrdersResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetOrdersResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetOrdersResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrdersResponse, _impl_.orders_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
    {PROTOBUF_FIELD_OFFSET(GetOrdersResponse, _impl_.orders_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OrderState>()},
  }}, {{
  }},
};

::uint8_t* GetOrdersResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_orders_size()); i < n; i++) {
    const auto& repfield = this->_internal_orders().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  return target;
}

::size_t GetOrdersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
  total_size += 1UL * this->_internal_orders_size();
  for (const auto& msg : this->_internal_orders()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetOrdersResponse::_class_data_ = {
    GetOrdersResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetOrdersResponse::GetClassData() const {
  return &_class_data_;
}

void GetOrdersResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetOrdersResponse*>(&to_msg);
  auto& from = static_cast<const GetOrdersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_orders()->MergeFrom(
      from._internal_orders());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrdersResponse::CopyFrom(const GetOrdersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetOrdersResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetOrdersResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetOrdersResponse::InternalSwap(GetOrdersResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orders_.InternalSwap(&other->_impl_.orders_);
}

::google::protobuf::Metadata GetOrdersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[10]);
}
// ===================================================================

class OrderState::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrderState, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& initial_order_price(const OrderState* msg);
  static void set_has_initial_order_price(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& executed_order_price(const OrderState* msg);
  static void set_has_executed_order_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_order_amount(const OrderState* msg);
  static void set_has_total_order_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& average_position_price(const OrderState* msg);
  static void set_has_average_position_price(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& initial_commission(const OrderState* msg);
  static void set_has_initial_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& executed_commission(const OrderState* msg);
  static void set_has_executed_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& initial_security_price(const OrderState* msg);
  static void set_has_initial_security_price(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& service_commission(const OrderState* msg);
  static void set_has_service_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::google::protobuf::Timestamp& order_date(const OrderState* msg);
  static void set_has_order_date(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::initial_order_price(const OrderState* msg) {
  return *msg->_impl_.initial_order_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::executed_order_price(const OrderState* msg) {
  return *msg->_impl_.executed_order_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::total_order_amount(const OrderState* msg) {
  return *msg->_impl_.total_order_amount_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::average_position_price(const OrderState* msg) {
  return *msg->_impl_.average_position_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::initial_commission(const OrderState* msg) {
  return *msg->_impl_.initial_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::executed_commission(const OrderState* msg) {
  return *msg->_impl_.executed_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::initial_security_price(const OrderState* msg) {
  return *msg->_impl_.initial_security_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderState::_Internal::service_commission(const OrderState* msg) {
  return *msg->_impl_.service_commission_;
}
const ::google::protobuf::Timestamp& OrderState::_Internal::order_date(const OrderState* msg) {
  return *msg->_impl_.order_date_;
}
void OrderState::clear_initial_order_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.initial_order_price_ != nullptr) _impl_.initial_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OrderState::clear_executed_order_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.executed_order_price_ != nullptr) _impl_.executed_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OrderState::clear_total_order_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_order_amount_ != nullptr) _impl_.total_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OrderState::clear_average_position_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.average_position_price_ != nullptr) _impl_.average_position_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OrderState::clear_initial_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.initial_commission_ != nullptr) _impl_.initial_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OrderState::clear_executed_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.executed_commission_ != nullptr) _impl_.executed_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void OrderState::clear_initial_security_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.initial_security_price_ != nullptr) _impl_.initial_security_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void OrderState::clear_service_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.service_commission_ != nullptr) _impl_.service_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void OrderState::clear_order_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.order_date_ != nullptr) _impl_.order_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
OrderState::OrderState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderState)
}
inline PROTOBUF_NDEBUG_INLINE OrderState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stages_{visibility, arena, from.stages_},
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        currency_(arena, from.currency_),
        instrument_uid_(arena, from.instrument_uid_),
        order_request_id_(arena, from.order_request_id_) {}

OrderState::OrderState(
    ::google::protobuf::Arena* arena,
    const OrderState& from)
    : ::google::protobuf::Message(arena) {
  OrderState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initial_order_price_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_order_price_)
                : nullptr;
  _impl_.executed_order_price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_order_price_)
                : nullptr;
  _impl_.total_order_amount_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_order_amount_)
                : nullptr;
  _impl_.average_position_price_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_)
                : nullptr;
  _impl_.initial_commission_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_commission_)
                : nullptr;
  _impl_.executed_commission_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_commission_)
                : nullptr;
  _impl_.initial_security_price_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_security_price_)
                : nullptr;
  _impl_.service_commission_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.service_commission_)
                : nullptr;
  _impl_.order_date_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.order_date_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lots_requested_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lots_requested_),
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, lots_requested_) +
               sizeof(Impl_::order_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderState)
}
inline PROTOBUF_NDEBUG_INLINE OrderState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        stages_{visibility, arena},
        order_id_(arena),
        figi_(arena),
        currency_(arena),
        instrument_uid_(arena),
        order_request_id_(arena) {}

inline void OrderState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_order_price_),
           0,
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, initial_order_price_) +
               sizeof(Impl_::order_type_));
}
OrderState::~OrderState() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrderState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.order_id_.Destroy();
  _impl_.figi_.Destroy();
  _impl_.currency_.Destroy();
  _impl_.instrument_uid_.Destroy();
  _impl_.order_request_id_.Destroy();
  delete _impl_.initial_order_price_;
  delete _impl_.executed_order_price_;
  delete _impl_.total_order_amount_;
  delete _impl_.average_position_price_;
  delete _impl_.initial_commission_;
  delete _impl_.executed_commission_;
  delete _impl_.initial_security_price_;
  delete _impl_.service_commission_;
  delete _impl_.order_date_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OrderState::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderState)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stages_.Clear();
  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.order_request_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.initial_order_price_ != nullptr);
      _impl_.initial_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.executed_order_price_ != nullptr);
      _impl_.executed_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.total_order_amount_ != nullptr);
      _impl_.total_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.average_position_price_ != nullptr);
      _impl_.average_position_price_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.initial_commission_ != nullptr);
      _impl_.initial_commission_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.executed_commission_ != nullptr);
      _impl_.executed_commission_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.initial_security_price_ != nullptr);
      _impl_.initial_security_price_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.service_commission_ != nullptr);
      _impl_.service_commission_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.order_date_ != nullptr);
    _impl_.order_date_->Clear();
  }
  ::memset(&_impl_.lots_requested_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_type_) -
      reinterpret_cast<char*>(&_impl_.lots_requested_)) + sizeof(_impl_.order_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrderState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 10, 123, 2> OrderState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderState, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrderState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderState, _impl_.execution_report_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.execution_report_status_)}},
    // int64 lots_requested = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderState, _impl_.lots_requested_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_requested_)}},
    // int64 lots_executed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderState, _impl_.lots_executed_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_executed_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.total_order_amount_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.average_position_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_commission_)}},
    // string figi = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderState, _impl_.direction_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.direction_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 6, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_security_price_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 7, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.stages_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 7, 8, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.service_commission_)}},
    // string currency = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.currency_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_type_)}},
    // .google.protobuf.Timestamp order_date = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 8, 9, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_date_)}},
    // string instrument_uid = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.instrument_uid_)}},
    // string order_request_id = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_request_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string order_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.execution_report_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 lots_requested = 3;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_requested_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 lots_executed = 4;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_executed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_order_price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_order_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.total_order_amount_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.average_position_price_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_commission_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_commission_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string figi = 11;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_security_price_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.stages_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.service_commission_), _Internal::kHasBitsOffset + 7, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string currency = 16;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp order_date = 18;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_date_), _Internal::kHasBitsOffset + 8, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 19;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_request_id = 20;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OrderStage>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\60\10\0\0\0\0\0\0\0\0\0\4\0\0\0\0\10\0\0\16\20\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderState"
    "order_id"
    "figi"
    "currency"
    "instrument_uid"
    "order_request_id"
  }},
};

::uint8_t* OrderState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.order_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
  if (this->_internal_execution_report_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_execution_report_status(), target);
  }

  // int64 lots_requested = 3;
  if (this->_internal_lots_requested() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_lots_requested(), target);
  }

  // int64 lots_executed = 4;
  if (this->_internal_lots_executed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_lots_executed(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::initial_order_price(this),
        _Internal::initial_order_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::executed_order_price(this),
        _Internal::executed_order_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::total_order_amount(this),
        _Internal::total_order_amount(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::average_position_price(this),
        _Internal::average_position_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::initial_commission(this),
        _Internal::initial_commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::executed_commission(this),
        _Internal::executed_commission(this).GetCachedSize(), target, stream);
  }

  // string figi = 11;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.figi");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        12, this->_internal_direction(), target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, _Internal::initial_security_price(this),
        _Internal::initial_security_price(this).GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stages_size()); i < n; i++) {
    const auto& repfield = this->_internal_stages().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, _Internal::service_commission(this),
        _Internal::service_commission(this).GetCachedSize(), target, stream);
  }

  // string currency = 16;
  if (!this->_internal_currency().empty()) {
    const std::string& _s = this->_internal_currency();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.currency");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
  if (this->_internal_order_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        17, this->_internal_order_type(), target);
  }

  // .google.protobuf.Timestamp order_date = 18;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, _Internal::order_date(this),
        _Internal::order_date(this).GetCachedSize(), target, stream);
  }

  // string instrument_uid = 19;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.instrument_uid");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  // string order_request_id = 20;
  if (!this->_internal_order_request_id().empty()) {
    const std::string& _s = this->_internal_order_request_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.order_request_id");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderState)
  return target;
}

::size_t OrderState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
  total_size += 1UL * this->_internal_stages_size();
  for (const auto& msg : this->_internal_stages()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string order_id = 1;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  // string figi = 11;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string currency = 16;
  if (!this->_internal_currency().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currency());
  }

  // string instrument_uid = 19;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  // string order_request_id = 20;
  if (!this->_internal_order_request_id().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_request_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.initial_order_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.executed_order_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_order_amount_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.average_position_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.initial_commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.executed_commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.initial_security_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.service_commission_);
    }

  }
  // .google.protobuf.Timestamp order_date = 18;
  if (cached_has_bits & 0x00000100u) {
    total_size +=
        2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.order_date_);
  }

  // int64 lots_requested = 3;
  if (this->_internal_lots_requested() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_lots_requested());
  }

  // int64 lots_executed = 4;
  if (this->_internal_lots_executed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_lots_executed());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
  if (this->_internal_execution_report_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_execution_report_status());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
  if (this->_internal_order_type() != 0) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_order_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OrderState::_class_data_ = {
    OrderState::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OrderState::GetClassData() const {
  return &_class_data_;
}

void OrderState::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OrderState*>(&to_msg);
  auto& from = static_cast<const OrderState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stages()->MergeFrom(
      from._internal_stages());
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_order_request_id().empty()) {
    _this->_internal_set_order_request_id(from._internal_order_request_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_initial_order_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_initial_order_price());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_executed_order_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_executed_order_price());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_total_order_amount()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_order_amount());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_average_position_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_average_position_price());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_initial_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_initial_commission());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_executed_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_executed_commission());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_initial_security_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_initial_security_price());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_service_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_service_commission());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_order_date()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_order_date());
  }
  if (from._internal_lots_requested() != 0) {
    _this->_internal_set_lots_requested(from._internal_lots_requested());
  }
  if (from._internal_lots_executed() != 0) {
    _this->_internal_set_lots_executed(from._internal_lots_executed());
  }
  if (from._internal_execution_report_status() != 0) {
    _this->_internal_set_execution_report_status(from._internal_execution_report_status());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_order_type() != 0) {
    _this->_internal_set_order_type(from._internal_order_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderState::CopyFrom(const OrderState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrderState::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OrderState::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OrderState::InternalSwap(OrderState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stages_.InternalSwap(&other->_impl_.stages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_request_id_, &other->_impl_.order_request_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_type_)
      + sizeof(OrderState::_impl_.order_type_)
      - PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_order_price_)>(
          reinterpret_cast<char*>(&_impl_.initial_order_price_),
          reinterpret_cast<char*>(&other->_impl_.initial_order_price_));
}

::google::protobuf::Metadata OrderState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[11]);
}
// ===================================================================

class OrderStage::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderStage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrderStage, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& price(const OrderStage* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OrderStage::_Internal::price(const OrderStage* msg) {
  return *msg->_impl_.price_;
}
void OrderStage::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
OrderStage::OrderStage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderStage)
}
inline PROTOBUF_NDEBUG_INLINE OrderStage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_) {}

OrderStage::OrderStage(
    ::google::protobuf::Arena* arena,
    const OrderStage& from)
    : ::google::protobuf::Message(arena) {
  OrderStage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_)
                : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderStage)
}
inline PROTOBUF_NDEBUG_INLINE OrderStage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena) {}

inline void OrderStage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));
}
OrderStage::~OrderStage() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderStage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrderStage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.trade_id_.Destroy();
  delete _impl_.price_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OrderStage::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrderStage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 65, 2> OrderStage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderStage, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrderStage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.price_)}},
    // int64 quantity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderStage, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.quantity_)}},
    // string trade_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.trade_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
    {PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 2;
    {PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string trade_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\60\0\0\10\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderStage"
    "trade_id"
  }},
};

::uint8_t* OrderStage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // int64 quantity = 2;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_quantity(), target);
  }

  // string trade_id = 3;
  if (!this->_internal_trade_id().empty()) {
    const std::string& _s = this->_internal_trade_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStage.trade_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderStage)
  return target;
}

::size_t OrderStage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trade_id = 3;
  if (!this->_internal_trade_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_id());
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
  }

  // int64 quantity = 2;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OrderStage::_class_data_ = {
    OrderStage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OrderStage::GetClassData() const {
  return &_class_data_;
}

void OrderStage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OrderStage*>(&to_msg);
  auto& from = static_cast<const OrderStage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
        from._internal_price());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderStage::CopyFrom(const OrderStage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrderStage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OrderStage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OrderStage::InternalSwap(OrderStage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.quantity_)
      + sizeof(OrderStage::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata OrderStage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[12]);
}
// ===================================================================

class ReplaceOrderRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ReplaceOrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& price(const ReplaceOrderRequest* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::Quotation& ReplaceOrderRequest::_Internal::price(const ReplaceOrderRequest* msg) {
  return *msg->_impl_.price_;
}
void ReplaceOrderRequest::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ReplaceOrderRequest::ReplaceOrderRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReplaceOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_),
        idempotency_key_(arena, from.idempotency_key_) {}

ReplaceOrderRequest::ReplaceOrderRequest(
    ::google::protobuf::Arena* arena,
    const ReplaceOrderRequest& from)
    : ::google::protobuf::Message(arena) {
  ReplaceOrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, price_type_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::price_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReplaceOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        order_id_(arena),
        idempotency_key_(arena) {}

inline void ReplaceOrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, price_type_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::price_type_));
}
ReplaceOrderRequest::~ReplaceOrderRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReplaceOrderRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.order_id_.Destroy();
  _impl_.idempotency_key_.Destroy();
  delete _impl_.price_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ReplaceOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.idempotency_key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.price_type_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.price_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReplaceOrderRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 99, 2> ReplaceOrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    13, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294960030,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReplaceOrderRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.account_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 quantity = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReplaceOrderRequest, _impl_.quantity_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.quantity_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 0, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplaceOrderRequest, _impl_.price_type_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_type_)}},
    // string order_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.order_id_)}},
    // string idempotency_key = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.idempotency_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 6;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string idempotency_key = 7;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.idempotency_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 quantity = 11;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\71\12\10\17\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest"
    "account_id"
    "order_id"
    "idempotency_key"
  }},
};

::uint8_t* ReplaceOrderRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string order_id = 6;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.order_id");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string idempotency_key = 7;
  if (!this->_internal_idempotency_key().empty()) {
    const std::string& _s = this->_internal_idempotency_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.idempotency_key");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // int64 quantity = 11;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_quantity(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
  if (this->_internal_price_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        13, this->_internal_price_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  return target;
}

::size_t ReplaceOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string order_id = 6;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  // string idempotency_key = 7;
  if (!this->_internal_idempotency_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_idempotency_key());
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
  }

  // int64 quantity = 11;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
  if (this->_internal_price_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_price_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ReplaceOrderRequest::_class_data_ = {
    ReplaceOrderRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ReplaceOrderRequest::GetClassData() const {
  return &_class_data_;
}

void ReplaceOrderRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ReplaceOrderRequest*>(&to_msg);
  auto& from = static_cast<const ReplaceOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_idempotency_key().empty()) {
    _this->_internal_set_idempotency_key(from._internal_idempotency_key());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
        from._internal_price());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  if (from._internal_price_type() != 0) {
    _this->_internal_set_price_type(from._internal_price_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplaceOrderRequest::CopyFrom(const ReplaceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReplaceOrderRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ReplaceOrderRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ReplaceOrderRequest::InternalSwap(ReplaceOrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.idempotency_key_, &other->_impl_.idempotency_key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_type_)
      + sizeof(ReplaceOrderRequest::_impl_.price_type_)
      - PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata ReplaceOrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_orders_2eproto_getter, &descriptor_table_orders_2eproto_once,
      file_level_metadata_orders_2eproto[13]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
