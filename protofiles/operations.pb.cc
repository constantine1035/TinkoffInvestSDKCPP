// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operations.proto

#include "operations.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace public {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr WithdrawLimitsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WithdrawLimitsRequest::WithdrawLimitsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WithdrawLimitsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WithdrawLimitsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WithdrawLimitsRequestDefaultTypeInternal() {}
  union {
    WithdrawLimitsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WithdrawLimitsRequestDefaultTypeInternal _WithdrawLimitsRequest_default_instance_;

inline constexpr PositionsSubscriptionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_status_{static_cast< ::tinkoff::public::invest::api::contract::v1::PositionsAccountSubscriptionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsSubscriptionStatus::PositionsSubscriptionStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsSubscriptionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsSubscriptionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsSubscriptionStatusDefaultTypeInternal() {}
  union {
    PositionsSubscriptionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsSubscriptionStatusDefaultTypeInternal _PositionsSubscriptionStatus_default_instance_;

inline constexpr PositionsStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsStreamRequest::PositionsStreamRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsStreamRequestDefaultTypeInternal() {}
  union {
    PositionsStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsStreamRequestDefaultTypeInternal _PositionsStreamRequest_default_instance_;

inline constexpr PositionsSecurities::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocked_{::int64_t{0}},
        balance_{::int64_t{0}},
        exchange_blocked_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsSecurities::PositionsSecurities(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsSecuritiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsSecuritiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsSecuritiesDefaultTypeInternal() {}
  union {
    PositionsSecurities _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsSecuritiesDefaultTypeInternal _PositionsSecurities_default_instance_;

inline constexpr PositionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsRequest::PositionsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsRequestDefaultTypeInternal() {}
  union {
    PositionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsRequestDefaultTypeInternal _PositionsRequest_default_instance_;

inline constexpr PositionsOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocked_{::int64_t{0}},
        balance_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsOptions::PositionsOptions(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsOptionsDefaultTypeInternal() {}
  union {
    PositionsOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsOptionsDefaultTypeInternal _PositionsOptions_default_instance_;

inline constexpr PositionsFutures::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocked_{::int64_t{0}},
        balance_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsFutures::PositionsFutures(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsFuturesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsFuturesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsFuturesDefaultTypeInternal() {}
  union {
    PositionsFutures _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsFuturesDefaultTypeInternal _PositionsFutures_default_instance_;

inline constexpr PortfolioStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioStreamRequest::PortfolioStreamRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortfolioStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioStreamRequestDefaultTypeInternal() {}
  union {
    PortfolioStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioStreamRequestDefaultTypeInternal _PortfolioStreamRequest_default_instance_;

inline constexpr PortfolioRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_{static_cast< ::tinkoff::public::invest::api::contract::v1::PortfolioRequest_CurrencyRequest >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioRequest::PortfolioRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortfolioRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioRequestDefaultTypeInternal() {}
  union {
    PortfolioRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioRequestDefaultTypeInternal _PortfolioRequest_default_instance_;

inline constexpr GetDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportRequest::GetDividendsForeignIssuerReportRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetDividendsForeignIssuerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerReportRequestDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerReportRequestDefaultTypeInternal _GetDividendsForeignIssuerReportRequest_default_instance_;

inline constexpr GetBrokerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetBrokerReportRequest::GetBrokerReportRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetBrokerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBrokerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBrokerReportRequestDefaultTypeInternal() {}
  union {
    GetBrokerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBrokerReportRequestDefaultTypeInternal _GetBrokerReportRequest_default_instance_;

inline constexpr GenerateDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportResponse::GenerateDividendsForeignIssuerReportResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal() {}
  union {
    GenerateDividendsForeignIssuerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal _GenerateDividendsForeignIssuerReportResponse_default_instance_;

inline constexpr GenerateBrokerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateBrokerReportResponse::GenerateBrokerReportResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateBrokerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateBrokerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateBrokerReportResponseDefaultTypeInternal() {}
  union {
    GenerateBrokerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateBrokerReportResponseDefaultTypeInternal _GenerateBrokerReportResponse_default_instance_;

inline constexpr AccountSubscriptionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_status_{static_cast< ::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AccountSubscriptionStatus::AccountSubscriptionStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccountSubscriptionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountSubscriptionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountSubscriptionStatusDefaultTypeInternal() {}
  union {
    AccountSubscriptionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountSubscriptionStatusDefaultTypeInternal _AccountSubscriptionStatus_default_instance_;

inline constexpr WithdrawLimitsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : money_{},
        blocked_{},
        blocked_guarantee_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WithdrawLimitsResponse::WithdrawLimitsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WithdrawLimitsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WithdrawLimitsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WithdrawLimitsResponseDefaultTypeInternal() {}
  union {
    WithdrawLimitsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WithdrawLimitsResponseDefaultTypeInternal _WithdrawLimitsResponse_default_instance_;

inline constexpr VirtualPortfolioPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{nullptr},
        average_position_price_{nullptr},
        expected_yield_{nullptr},
        expected_yield_fifo_{nullptr},
        expire_date_{nullptr},
        current_price_{nullptr},
        average_position_price_fifo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VirtualPortfolioPosition::VirtualPortfolioPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VirtualPortfolioPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VirtualPortfolioPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VirtualPortfolioPositionDefaultTypeInternal() {}
  union {
    VirtualPortfolioPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VirtualPortfolioPositionDefaultTypeInternal _VirtualPortfolioPosition_default_instance_;

inline constexpr PositionsSubscriptionResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsSubscriptionResult::PositionsSubscriptionResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsSubscriptionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsSubscriptionResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsSubscriptionResultDefaultTypeInternal() {}
  union {
    PositionsSubscriptionResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsSubscriptionResultDefaultTypeInternal _PositionsSubscriptionResult_default_instance_;

inline constexpr PositionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : money_{},
        blocked_{},
        securities_{},
        futures_{},
        options_{},
        limits_loading_in_progress_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsResponse::PositionsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsResponseDefaultTypeInternal() {}
  union {
    PositionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsResponseDefaultTypeInternal _PositionsResponse_default_instance_;

inline constexpr PositionsMoney::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        available_value_{nullptr},
        blocked_value_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsMoney::PositionsMoney(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsMoneyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsMoneyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsMoneyDefaultTypeInternal() {}
  union {
    PositionsMoney _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsMoneyDefaultTypeInternal _PositionsMoney_default_instance_;

inline constexpr PortfolioSubscriptionResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioSubscriptionResult::PortfolioSubscriptionResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortfolioSubscriptionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioSubscriptionResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioSubscriptionResultDefaultTypeInternal() {}
  union {
    PortfolioSubscriptionResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioSubscriptionResultDefaultTypeInternal _PortfolioSubscriptionResult_default_instance_;

inline constexpr PortfolioPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{nullptr},
        average_position_price_{nullptr},
        expected_yield_{nullptr},
        current_nkd_{nullptr},
        average_position_price_pt_{nullptr},
        current_price_{nullptr},
        average_position_price_fifo_{nullptr},
        quantity_lots_{nullptr},
        blocked_lots_{nullptr},
        var_margin_{nullptr},
        expected_yield_fifo_{nullptr},
        blocked_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioPosition::PortfolioPosition(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortfolioPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioPositionDefaultTypeInternal() {}
  union {
    PortfolioPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioPositionDefaultTypeInternal _PortfolioPosition_default_instance_;

inline constexpr OperationsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        state_{static_cast< ::tinkoff::public::invest::api::contract::v1::OperationState >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OperationsRequest::OperationsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationsRequestDefaultTypeInternal() {}
  union {
    OperationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationsRequestDefaultTypeInternal _OperationsRequest_default_instance_;

inline constexpr OperationTrade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_time_{nullptr},
        price_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OperationTrade::OperationTrade(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationTradeDefaultTypeInternal() {}
  union {
    OperationTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationTradeDefaultTypeInternal _OperationTrade_default_instance_;

inline constexpr OperationItemTrade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        num_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_{nullptr},
        price_{nullptr},
        yield_{nullptr},
        yield_relative_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OperationItemTrade::OperationItemTrade(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationItemTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationItemTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationItemTradeDefaultTypeInternal() {}
  union {
    OperationItemTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationItemTradeDefaultTypeInternal _OperationItemTrade_default_instance_;

inline constexpr GetOperationsByCursorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        operation_types_{},
        _operation_types_cached_byte_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        limit_{0},
        state_{static_cast< ::tinkoff::public::invest::api::contract::v1::OperationState >(0)},
        without_commissions_{false},
        without_trades_{false},
        without_overnights_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetOperationsByCursorRequest::GetOperationsByCursorRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetOperationsByCursorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsByCursorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsByCursorRequestDefaultTypeInternal() {}
  union {
    GetOperationsByCursorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsByCursorRequestDefaultTypeInternal _GetOperationsByCursorRequest_default_instance_;

inline constexpr GenerateDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportRequest::GenerateDividendsForeignIssuerReportRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal() {}
  union {
    GenerateDividendsForeignIssuerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal _GenerateDividendsForeignIssuerReportRequest_default_instance_;

inline constexpr GenerateBrokerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateBrokerReportRequest::GenerateBrokerReportRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateBrokerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateBrokerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateBrokerReportRequestDefaultTypeInternal() {}
  union {
    GenerateBrokerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateBrokerReportRequestDefaultTypeInternal _GenerateBrokerReportRequest_default_instance_;

inline constexpr DividendsForeignIssuerReport::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        security_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        isin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        issuer_country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        record_date_{nullptr},
        payment_date_{nullptr},
        dividend_{nullptr},
        external_commission_{nullptr},
        dividend_gross_{nullptr},
        tax_{nullptr},
        dividend_amount_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR DividendsForeignIssuerReport::DividendsForeignIssuerReport(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DividendsForeignIssuerReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DividendsForeignIssuerReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DividendsForeignIssuerReportDefaultTypeInternal() {}
  union {
    DividendsForeignIssuerReport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DividendsForeignIssuerReportDefaultTypeInternal _DividendsForeignIssuerReport_default_instance_;

inline constexpr BrokerReport::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        execute_sign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        class_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ticker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        party_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        broker_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        separate_agreement_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        separate_agreement_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        separate_agreement_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        delivery_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trade_datetime_{nullptr},
        price_{nullptr},
        order_amount_{nullptr},
        aci_value_{nullptr},
        total_order_amount_{nullptr},
        broker_commission_{nullptr},
        exchange_commission_{nullptr},
        exchange_clearing_commission_{nullptr},
        repo_rate_{nullptr},
        clear_value_date_{nullptr},
        sec_value_date_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR BrokerReport::BrokerReport(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BrokerReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokerReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokerReportDefaultTypeInternal() {}
  union {
    BrokerReport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokerReportDefaultTypeInternal _BrokerReport_default_instance_;

inline constexpr PositionData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        money_{},
        securities_{},
        futures_{},
        options_{},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionData::PositionData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDataDefaultTypeInternal() {}
  union {
    PositionData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDataDefaultTypeInternal _PositionData_default_instance_;

inline constexpr PortfolioResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        positions_{},
        virtual_positions_{},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_amount_shares_{nullptr},
        total_amount_bonds_{nullptr},
        total_amount_etf_{nullptr},
        total_amount_currencies_{nullptr},
        total_amount_futures_{nullptr},
        expected_yield_{nullptr},
        total_amount_options_{nullptr},
        total_amount_sp_{nullptr},
        total_amount_portfolio_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioResponse::PortfolioResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortfolioResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioResponseDefaultTypeInternal() {}
  union {
    PortfolioResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioResponseDefaultTypeInternal _PortfolioResponse_default_instance_;

inline constexpr OperationItemTrades::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trades_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationItemTrades::OperationItemTrades(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationItemTradesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationItemTradesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationItemTradesDefaultTypeInternal() {}
  union {
    OperationItemTrades _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationItemTradesDefaultTypeInternal _OperationItemTrades_default_instance_;

inline constexpr Operation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trades_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_operation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asset_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payment_{nullptr},
        price_{nullptr},
        date_{nullptr},
        quantity_{::int64_t{0}},
        quantity_rest_{::int64_t{0}},
        state_{static_cast< ::tinkoff::public::invest::api::contract::v1::OperationState >(0)},
        operation_type_{static_cast< ::tinkoff::public::invest::api::contract::v1::OperationType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Operation::Operation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationDefaultTypeInternal _Operation_default_instance_;

inline constexpr GetDividendsForeignIssuerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerRequest::GetDividendsForeignIssuerRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetDividendsForeignIssuerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerRequestDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerRequestDefaultTypeInternal _GetDividendsForeignIssuerRequest_default_instance_;

inline constexpr GetDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dividends_foreign_issuer_report_{},
        itemscount_{0},
        pagescount_{0},
        page_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportResponse::GetDividendsForeignIssuerReportResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetDividendsForeignIssuerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerReportResponseDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerReportResponseDefaultTypeInternal _GetDividendsForeignIssuerReportResponse_default_instance_;

inline constexpr GetBrokerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : broker_report_{},
        itemscount_{0},
        pagescount_{0},
        page_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetBrokerReportResponse::GetBrokerReportResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetBrokerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBrokerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBrokerReportResponseDefaultTypeInternal() {}
  union {
    GetBrokerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBrokerReportResponseDefaultTypeInternal _GetBrokerReportResponse_default_instance_;

inline constexpr BrokerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BrokerReportRequest::BrokerReportRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BrokerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokerReportRequestDefaultTypeInternal() {}
  union {
    BrokerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokerReportRequestDefaultTypeInternal _BrokerReportRequest_default_instance_;

inline constexpr PositionsStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsStreamResponse::PositionsStreamResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionsStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsStreamResponseDefaultTypeInternal() {}
  union {
    PositionsStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsStreamResponseDefaultTypeInternal _PositionsStreamResponse_default_instance_;

inline constexpr PortfolioStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioStreamResponse::PortfolioStreamResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PortfolioStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioStreamResponseDefaultTypeInternal() {}
  union {
    PortfolioStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioStreamResponseDefaultTypeInternal _PortfolioStreamResponse_default_instance_;

inline constexpr OperationsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : operations_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationsResponse::OperationsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationsResponseDefaultTypeInternal() {}
  union {
    OperationsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationsResponseDefaultTypeInternal _OperationsResponse_default_instance_;

inline constexpr OperationItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        broker_account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_operation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cancel_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asset_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_{nullptr},
        payment_{nullptr},
        price_{nullptr},
        commission_{nullptr},
        yield_{nullptr},
        yield_relative_{nullptr},
        accrued_int_{nullptr},
        cancel_date_time_{nullptr},
        trades_info_{nullptr},
        type_{static_cast< ::tinkoff::public::invest::api::contract::v1::OperationType >(0)},
        state_{static_cast< ::tinkoff::public::invest::api::contract::v1::OperationState >(0)},
        quantity_{::int64_t{0}},
        quantity_rest_{::int64_t{0}},
        quantity_done_{::int64_t{0}},
        instrument_kind_{static_cast< ::tinkoff::public::invest::api::contract::v1::InstrumentType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OperationItem::OperationItem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OperationItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationItemDefaultTypeInternal() {}
  union {
    OperationItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationItemDefaultTypeInternal _OperationItem_default_instance_;

inline constexpr GetDividendsForeignIssuerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerResponse::GetDividendsForeignIssuerResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetDividendsForeignIssuerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerResponseDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerResponseDefaultTypeInternal _GetDividendsForeignIssuerResponse_default_instance_;

inline constexpr BrokerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BrokerReportResponse::BrokerReportResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BrokerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokerReportResponseDefaultTypeInternal() {}
  union {
    BrokerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokerReportResponseDefaultTypeInternal _BrokerReportResponse_default_instance_;

inline constexpr GetOperationsByCursorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        next_cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        has_next_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOperationsByCursorResponse::GetOperationsByCursorResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetOperationsByCursorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsByCursorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsByCursorResponseDefaultTypeInternal() {}
  union {
    GetOperationsByCursorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsByCursorResponseDefaultTypeInternal _GetOperationsByCursorResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public
}  // namespace tinkoff
static ::_pb::Metadata file_level_metadata_operations_2eproto[44];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_operations_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_operations_2eproto = nullptr;
const ::uint32_t TableStruct_operations_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsRequest, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsRequest, _impl_.to_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsRequest, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsRequest, _impl_.figi_),
    ~0u,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationsResponse, _impl_.operations_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.parent_operation_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.payment_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.quantity_rest_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.instrument_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.operation_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.trades_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.asset_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.position_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::Operation, _impl_.instrument_uid_),
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    2,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationTrade, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationTrade, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationTrade, _impl_.trade_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationTrade, _impl_.date_time_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationTrade, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationTrade, _impl_.price_),
    ~0u,
    0,
    ~0u,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioRequest, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_shares_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_bonds_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_etf_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_currencies_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_futures_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.expected_yield_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.positions_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_options_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_sp_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_portfolio_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioResponse, _impl_.virtual_positions_),
    0,
    1,
    2,
    3,
    4,
    5,
    ~0u,
    ~0u,
    6,
    7,
    8,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsRequest, _impl_.account_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsResponse, _impl_.money_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsResponse, _impl_.blocked_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsResponse, _impl_.securities_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsResponse, _impl_.limits_loading_in_progress_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsResponse, _impl_.futures_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsResponse, _impl_.options_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsRequest, _impl_.account_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsResponse, _impl_.money_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsResponse, _impl_.blocked_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsResponse, _impl_.blocked_guarantee_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.instrument_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.average_position_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.expected_yield_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.current_nkd_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.average_position_price_pt_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.current_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.average_position_price_fifo_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.quantity_lots_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.blocked_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.blocked_lots_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.position_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.instrument_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.var_margin_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioPosition, _impl_.expected_yield_fifo_),
    ~0u,
    ~0u,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    ~0u,
    8,
    ~0u,
    ~0u,
    9,
    10,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.position_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.instrument_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.instrument_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.average_position_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.expected_yield_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.expected_yield_fifo_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.expire_date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.current_price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.average_position_price_fifo_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _impl_.blocked_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _impl_.balance_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _impl_.position_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _impl_.instrument_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _impl_.exchange_blocked_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSecurities, _impl_.instrument_type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsFutures, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsFutures, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsFutures, _impl_.blocked_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsFutures, _impl_.balance_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsFutures, _impl_.position_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsFutures, _impl_.instrument_uid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsOptions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsOptions, _impl_.position_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsOptions, _impl_.instrument_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsOptions, _impl_.blocked_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsOptions, _impl_.balance_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportRequest, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportResponse, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_.to_),
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse, _impl_.task_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest, _impl_.task_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest, _impl_.page_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse, _impl_.broker_report_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse, _impl_.itemscount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse, _impl_.pagescount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse, _impl_.page_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.trade_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.order_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.execute_sign_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.trade_datetime_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.exchange_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.class_code_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.ticker_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.order_amount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.aci_value_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.total_order_amount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.broker_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.exchange_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.exchange_clearing_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.repo_rate_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.party_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.clear_value_date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.sec_value_date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.broker_status_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.separate_agreement_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.separate_agreement_number_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.separate_agreement_date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReport, _impl_.delivery_type_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    ~0u,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    ~0u,
    9,
    10,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_.to_),
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest, _impl_.task_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest, _impl_.page_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse, _impl_.task_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.dividends_foreign_issuer_report_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.itemscount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.pagescount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.page_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.record_date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.payment_date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.security_name_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.isin_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.issuer_country_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.dividend_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.external_commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.dividend_gross_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.tax_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.dividend_amount_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.currency_),
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    2,
    3,
    4,
    5,
    6,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioStreamRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioStreamRequest, _impl_.accounts_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioStreamResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioStreamResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioStreamResponse, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult, _impl_.accounts_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::AccountSubscriptionStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::AccountSubscriptionStatus, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::AccountSubscriptionStatus, _impl_.subscription_status_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.instrument_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.from_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.to_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.cursor_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.operation_types_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.without_commissions_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.without_trades_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.without_overnights_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorResponse, _impl_.has_next_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorResponse, _impl_.next_cursor_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.cursor_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.broker_account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.parent_operation_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.instrument_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.figi_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.instrument_type_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.instrument_kind_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.position_uid_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.payment_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.commission_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.yield_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.yield_relative_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.accrued_int_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.quantity_rest_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.quantity_done_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.cancel_date_time_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.cancel_reason_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.trades_info_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItem, _impl_.asset_uid_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    2,
    3,
    4,
    5,
    6,
    ~0u,
    ~0u,
    ~0u,
    7,
    ~0u,
    8,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrades, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrades, _impl_.trades_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _impl_.num_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _impl_.date_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _impl_.quantity_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _impl_.yield_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::OperationItemTrade, _impl_.yield_relative_),
    ~0u,
    0,
    ~0u,
    1,
    2,
    3,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsStreamRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsStreamRequest, _impl_.accounts_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsStreamResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsStreamResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsStreamResponse, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult, _impl_.accounts_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionStatus, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionStatus, _impl_.subscription_status_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _impl_.account_id_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _impl_.money_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _impl_.securities_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _impl_.futures_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _impl_.options_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionData, _impl_.date_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsMoney, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsMoney, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsMoney, _impl_.available_value_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsMoney, _impl_.blocked_value_),
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OperationsRequest)},
        {18, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OperationsResponse)},
        {27, 52, -1, sizeof(::tinkoff::public::invest::api::contract::v1::Operation)},
        {69, 81, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OperationTrade)},
        {85, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PortfolioRequest)},
        {95, 115, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PortfolioResponse)},
        {127, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsRequest)},
        {136, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsResponse)},
        {150, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsRequest)},
        {159, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::WithdrawLimitsResponse)},
        {170, 194, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PortfolioPosition)},
        {210, 229, -1, sizeof(::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition)},
        {240, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsSecurities)},
        {255, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsFutures)},
        {268, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsOptions)},
        {280, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::BrokerReportRequest)},
        {291, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::BrokerReportResponse)},
        {302, 313, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest)},
        {316, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse)},
        {325, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest)},
        {335, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse)},
        {347, 382, -1, sizeof(::tinkoff::public::invest::api::contract::v1::BrokerReport)},
        {409, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerRequest)},
        {420, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerResponse)},
        {431, 442, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest)},
        {445, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest)},
        {455, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse)},
        {464, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse)},
        {476, 496, -1, sizeof(::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport)},
        {508, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PortfolioStreamRequest)},
        {517, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PortfolioStreamResponse)},
        {529, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult)},
        {538, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::AccountSubscriptionStatus)},
        {548, 567, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorRequest)},
        {578, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::GetOperationsByCursorResponse)},
        {589, 624, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OperationItem)},
        {651, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OperationItemTrades)},
        {660, 674, -1, sizeof(::tinkoff::public::invest::api::contract::v1::OperationItemTrade)},
        {680, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsStreamRequest)},
        {689, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsStreamResponse)},
        {701, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult)},
        {710, -1, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionStatus)},
        {720, 734, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionData)},
        {740, 750, -1, sizeof(::tinkoff::public::invest::api::contract::v1::PositionsMoney)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::public::invest::api::contract::v1::_OperationsRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OperationsResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_Operation_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OperationTrade_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PortfolioRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PortfolioResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_WithdrawLimitsRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_WithdrawLimitsResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PortfolioPosition_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_VirtualPortfolioPosition_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsSecurities_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsFutures_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsOptions_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_BrokerReportRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_BrokerReportResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GenerateBrokerReportRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GenerateBrokerReportResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetBrokerReportRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetBrokerReportResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_BrokerReport_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetDividendsForeignIssuerRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetDividendsForeignIssuerResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GenerateDividendsForeignIssuerReportRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetDividendsForeignIssuerReportRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GenerateDividendsForeignIssuerReportResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetDividendsForeignIssuerReportResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_DividendsForeignIssuerReport_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PortfolioStreamRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PortfolioStreamResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PortfolioSubscriptionResult_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_AccountSubscriptionStatus_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetOperationsByCursorRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_GetOperationsByCursorResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OperationItem_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OperationItemTrades_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_OperationItemTrade_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsStreamRequest_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsStreamResponse_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsSubscriptionResult_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsSubscriptionStatus_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionData_default_instance_._instance,
    &::tinkoff::public::invest::api::contract::v1::_PositionsMoney_default_instance_._instance,
};
const char descriptor_table_protodef_operations_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020operations.proto\022%tinkoff.public.inves"
    "t.api.contract.v1\032\037google/protobuf/times"
    "tamp.proto\032\014common.proto\"\315\001\n\021OperationsR"
    "equest\022\022\n\naccount_id\030\001 \001(\t\022(\n\004from\030\002 \001(\013"
    "2\032.google.protobuf.Timestamp\022&\n\002to\030\003 \001(\013"
    "2\032.google.protobuf.Timestamp\022D\n\005state\030\004 "
    "\001(\01625.tinkoff.public.invest.api.contract"
    ".v1.OperationState\022\014\n\004figi\030\005 \001(\t\"Z\n\022Oper"
    "ationsResponse\022D\n\noperations\030\001 \003(\01320.tin"
    "koff.public.invest.api.contract.v1.Opera"
    "tion\"\360\004\n\tOperation\022\n\n\002id\030\001 \001(\t\022\033\n\023parent"
    "_operation_id\030\002 \001(\t\022\020\n\010currency\030\003 \001(\t\022B\n"
    "\007payment\030\004 \001(\01321.tinkoff.public.invest.a"
    "pi.contract.v1.MoneyValue\022@\n\005price\030\005 \001(\013"
    "21.tinkoff.public.invest.api.contract.v1"
    ".MoneyValue\022D\n\005state\030\006 \001(\01625.tinkoff.pub"
    "lic.invest.api.contract.v1.OperationStat"
    "e\022\020\n\010quantity\030\007 \001(\003\022\025\n\rquantity_rest\030\010 \001"
    "(\003\022\014\n\004figi\030\t \001(\t\022\027\n\017instrument_type\030\n \001("
    "\t\022(\n\004date\030\013 \001(\0132\032.google.protobuf.Timest"
    "amp\022\014\n\004type\030\014 \001(\t\022L\n\016operation_type\030\r \001("
    "\01624.tinkoff.public.invest.api.contract.v"
    "1.OperationType\022E\n\006trades\030\016 \003(\01325.tinkof"
    "f.public.invest.api.contract.v1.Operatio"
    "nTrade\022\021\n\tasset_uid\030\020 \001(\t\022\024\n\014position_ui"
    "d\030\021 \001(\t\022\026\n\016instrument_uid\030\022 \001(\t\"\245\001\n\016Oper"
    "ationTrade\022\020\n\010trade_id\030\001 \001(\t\022-\n\tdate_tim"
    "e\030\002 \001(\0132\032.google.protobuf.Timestamp\022\020\n\010q"
    "uantity\030\003 \001(\003\022@\n\005price\030\004 \001(\01321.tinkoff.p"
    "ublic.invest.api.contract.v1.MoneyValue\""
    "\257\001\n\020PortfolioRequest\022\022\n\naccount_id\030\001 \001(\t"
    "\022Y\n\010currency\030\002 \001(\0162G.tinkoff.public.inve"
    "st.api.contract.v1.PortfolioRequest.Curr"
    "encyRequest\",\n\017CurrencyRequest\022\007\n\003RUB\020\000\022"
    "\007\n\003USD\020\001\022\007\n\003EUR\020\002\"\233\007\n\021PortfolioResponse\022"
    "N\n\023total_amount_shares\030\001 \001(\01321.tinkoff.p"
    "ublic.invest.api.contract.v1.MoneyValue\022"
    "M\n\022total_amount_bonds\030\002 \001(\01321.tinkoff.pu"
    "blic.invest.api.contract.v1.MoneyValue\022K"
    "\n\020total_amount_etf\030\003 \001(\01321.tinkoff.publi"
    "c.invest.api.contract.v1.MoneyValue\022R\n\027t"
    "otal_amount_currencies\030\004 \001(\01321.tinkoff.p"
    "ublic.invest.api.contract.v1.MoneyValue\022"
    "O\n\024total_amount_futures\030\005 \001(\01321.tinkoff."
    "public.invest.api.contract.v1.MoneyValue"
    "\022H\n\016expected_yield\030\006 \001(\01320.tinkoff.publi"
    "c.invest.api.contract.v1.Quotation\022K\n\tpo"
    "sitions\030\007 \003(\01328.tinkoff.public.invest.ap"
    "i.contract.v1.PortfolioPosition\022\022\n\naccou"
    "nt_id\030\010 \001(\t\022O\n\024total_amount_options\030\t \001("
    "\01321.tinkoff.public.invest.api.contract.v"
    "1.MoneyValue\022J\n\017total_amount_sp\030\n \001(\01321."
    "tinkoff.public.invest.api.contract.v1.Mo"
    "neyValue\022Q\n\026total_amount_portfolio\030\013 \001(\013"
    "21.tinkoff.public.invest.api.contract.v1"
    ".MoneyValue\022Z\n\021virtual_positions\030\014 \003(\0132\?"
    ".tinkoff.public.invest.api.contract.v1.V"
    "irtualPortfolioPosition\"&\n\020PositionsRequ"
    "est\022\022\n\naccount_id\030\001 \001(\t\"\241\003\n\021PositionsRes"
    "ponse\022@\n\005money\030\001 \003(\01321.tinkoff.public.in"
    "vest.api.contract.v1.MoneyValue\022B\n\007block"
    "ed\030\002 \003(\01321.tinkoff.public.invest.api.con"
    "tract.v1.MoneyValue\022N\n\nsecurities\030\003 \003(\0132"
    ":.tinkoff.public.invest.api.contract.v1."
    "PositionsSecurities\022\"\n\032limits_loading_in"
    "_progress\030\004 \001(\010\022H\n\007futures\030\005 \003(\01327.tinko"
    "ff.public.invest.api.contract.v1.Positio"
    "nsFutures\022H\n\007options\030\006 \003(\01327.tinkoff.pub"
    "lic.invest.api.contract.v1.PositionsOpti"
    "ons\"+\n\025WithdrawLimitsRequest\022\022\n\naccount_"
    "id\030\001 \001(\t\"\354\001\n\026WithdrawLimitsResponse\022@\n\005m"
    "oney\030\001 \003(\01321.tinkoff.public.invest.api.c"
    "ontract.v1.MoneyValue\022B\n\007blocked\030\002 \003(\01321"
    ".tinkoff.public.invest.api.contract.v1.M"
    "oneyValue\022L\n\021blocked_guarantee\030\003 \003(\01321.t"
    "inkoff.public.invest.api.contract.v1.Mon"
    "eyValue\"\310\007\n\021PortfolioPosition\022\014\n\004figi\030\001 "
    "\001(\t\022\027\n\017instrument_type\030\002 \001(\t\022B\n\010quantity"
    "\030\003 \001(\01320.tinkoff.public.invest.api.contr"
    "act.v1.Quotation\022Q\n\026average_position_pri"
    "ce\030\004 \001(\01321.tinkoff.public.invest.api.con"
    "tract.v1.MoneyValue\022H\n\016expected_yield\030\005 "
    "\001(\01320.tinkoff.public.invest.api.contract"
    ".v1.Quotation\022F\n\013current_nkd\030\006 \001(\01321.tin"
    "koff.public.invest.api.contract.v1.Money"
    "Value\022W\n\031average_position_price_pt\030\007 \001(\013"
    "20.tinkoff.public.invest.api.contract.v1"
    ".QuotationB\002\030\001\022H\n\rcurrent_price\030\010 \001(\01321."
    "tinkoff.public.invest.api.contract.v1.Mo"
    "neyValue\022V\n\033average_position_price_fifo\030"
    "\t \001(\01321.tinkoff.public.invest.api.contra"
    "ct.v1.MoneyValue\022K\n\rquantity_lots\030\n \001(\0132"
    "0.tinkoff.public.invest.api.contract.v1."
    "QuotationB\002\030\001\022\017\n\007blocked\030\025 \001(\010\022F\n\014blocke"
    "d_lots\030\026 \001(\01320.tinkoff.public.invest.api"
    ".contract.v1.Quotation\022\024\n\014position_uid\030\030"
    " \001(\t\022\026\n\016instrument_uid\030\031 \001(\t\022E\n\nvar_marg"
    "in\030\032 \001(\01321.tinkoff.public.invest.api.con"
    "tract.v1.MoneyValue\022M\n\023expected_yield_fi"
    "fo\030\033 \001(\01320.tinkoff.public.invest.api.con"
    "tract.v1.Quotation\"\362\004\n\030VirtualPortfolioP"
    "osition\022\024\n\014position_uid\030\001 \001(\t\022\026\n\016instrum"
    "ent_uid\030\002 \001(\t\022\014\n\004figi\030\003 \001(\t\022\027\n\017instrumen"
    "t_type\030\004 \001(\t\022B\n\010quantity\030\005 \001(\01320.tinkoff"
    ".public.invest.api.contract.v1.Quotation"
    "\022Q\n\026average_position_price\030\006 \001(\01321.tinko"
    "ff.public.invest.api.contract.v1.MoneyVa"
    "lue\022H\n\016expected_yield\030\007 \001(\01320.tinkoff.pu"
    "blic.invest.api.contract.v1.Quotation\022M\n"
    "\023expected_yield_fifo\030\010 \001(\01320.tinkoff.pub"
    "lic.invest.api.contract.v1.Quotation\022/\n\013"
    "expire_date\030\t \001(\0132\032.google.protobuf.Time"
    "stamp\022H\n\rcurrent_price\030\n \001(\01321.tinkoff.p"
    "ublic.invest.api.contract.v1.MoneyValue\022"
    "V\n\033average_position_price_fifo\030\013 \001(\01321.t"
    "inkoff.public.invest.api.contract.v1.Mon"
    "eyValue\"\246\001\n\023PositionsSecurities\022\014\n\004figi\030"
    "\001 \001(\t\022\017\n\007blocked\030\002 \001(\003\022\017\n\007balance\030\003 \001(\003\022"
    "\024\n\014position_uid\030\004 \001(\t\022\026\n\016instrument_uid\030"
    "\005 \001(\t\022\030\n\020exchange_blocked\030\013 \001(\010\022\027\n\017instr"
    "ument_type\030\020 \001(\t\"p\n\020PositionsFutures\022\014\n\004"
    "figi\030\001 \001(\t\022\017\n\007blocked\030\002 \001(\003\022\017\n\007balance\030\003"
    " \001(\003\022\024\n\014position_uid\030\004 \001(\t\022\026\n\016instrument"
    "_uid\030\005 \001(\t\"b\n\020PositionsOptions\022\024\n\014positi"
    "on_uid\030\001 \001(\t\022\026\n\016instrument_uid\030\002 \001(\t\022\017\n\007"
    "blocked\030\013 \001(\003\022\017\n\007balance\030\025 \001(\003\"\362\001\n\023Broke"
    "rReportRequest\022l\n\036generate_broker_report"
    "_request\030\001 \001(\0132B.tinkoff.public.invest.a"
    "pi.contract.v1.GenerateBrokerReportReque"
    "stH\000\022b\n\031get_broker_report_request\030\002 \001(\0132"
    "=.tinkoff.public.invest.api.contract.v1."
    "GetBrokerReportRequestH\000B\t\n\007payload\"\367\001\n\024"
    "BrokerReportResponse\022n\n\037generate_broker_"
    "report_response\030\001 \001(\0132C.tinkoff.public.i"
    "nvest.api.contract.v1.GenerateBrokerRepo"
    "rtResponseH\000\022d\n\032get_broker_report_respon"
    "se\030\002 \001(\0132>.tinkoff.public.invest.api.con"
    "tract.v1.GetBrokerReportResponseH\000B\t\n\007pa"
    "yload\"\203\001\n\033GenerateBrokerReportRequest\022\022\n"
    "\naccount_id\030\001 \001(\t\022(\n\004from\030\002 \001(\0132\032.google"
    ".protobuf.Timestamp\022&\n\002to\030\003 \001(\0132\032.google"
    ".protobuf.Timestamp\"/\n\034GenerateBrokerRep"
    "ortResponse\022\017\n\007task_id\030\001 \001(\t\"7\n\026GetBroke"
    "rReportRequest\022\017\n\007task_id\030\001 \001(\t\022\014\n\004page\030"
    "\002 \001(\005\"\233\001\n\027GetBrokerReportResponse\022J\n\rbro"
    "ker_report\030\001 \003(\01323.tinkoff.public.invest"
    ".api.contract.v1.BrokerReport\022\022\n\nitemsCo"
    "unt\030\002 \001(\005\022\022\n\npagesCount\030\003 \001(\005\022\014\n\004page\030\004 "
    "\001(\005\"\332\010\n\014BrokerReport\022\020\n\010trade_id\030\001 \001(\t\022\020"
    "\n\010order_id\030\002 \001(\t\022\014\n\004figi\030\003 \001(\t\022\024\n\014execut"
    "e_sign\030\004 \001(\t\0222\n\016trade_datetime\030\005 \001(\0132\032.g"
    "oogle.protobuf.Timestamp\022\020\n\010exchange\030\006 \001"
    "(\t\022\022\n\nclass_code\030\007 \001(\t\022\021\n\tdirection\030\010 \001("
    "\t\022\014\n\004name\030\t \001(\t\022\016\n\006ticker\030\n \001(\t\022@\n\005price"
    "\030\013 \001(\01321.tinkoff.public.invest.api.contr"
    "act.v1.MoneyValue\022\020\n\010quantity\030\014 \001(\003\022G\n\014o"
    "rder_amount\030\r \001(\01321.tinkoff.public.inves"
    "t.api.contract.v1.MoneyValue\022C\n\taci_valu"
    "e\030\016 \001(\01320.tinkoff.public.invest.api.cont"
    "ract.v1.Quotation\022M\n\022total_order_amount\030"
    "\017 \001(\01321.tinkoff.public.invest.api.contra"
    "ct.v1.MoneyValue\022L\n\021broker_commission\030\020 "
    "\001(\01321.tinkoff.public.invest.api.contract"
    ".v1.MoneyValue\022N\n\023exchange_commission\030\021 "
    "\001(\01321.tinkoff.public.invest.api.contract"
    ".v1.MoneyValue\022W\n\034exchange_clearing_comm"
    "ission\030\022 \001(\01321.tinkoff.public.invest.api"
    ".contract.v1.MoneyValue\022C\n\trepo_rate\030\023 \001"
    "(\01320.tinkoff.public.invest.api.contract."
    "v1.Quotation\022\r\n\005party\030\024 \001(\t\0224\n\020clear_val"
    "ue_date\030\025 \001(\0132\032.google.protobuf.Timestam"
    "p\0222\n\016sec_value_date\030\026 \001(\0132\032.google.proto"
    "buf.Timestamp\022\025\n\rbroker_status\030\027 \001(\t\022\037\n\027"
    "separate_agreement_type\030\030 \001(\t\022!\n\031separat"
    "e_agreement_number\030\031 \001(\t\022\037\n\027separate_agr"
    "eement_date\030\032 \001(\t\022\025\n\rdelivery_type\030\033 \001(\t"
    "\"\250\002\n GetDividendsForeignIssuerRequest\022\200\001"
    "\n\"generate_div_foreign_issuer_report\030\001 \001"
    "(\0132R.tinkoff.public.invest.api.contract."
    "v1.GenerateDividendsForeignIssuerReportR"
    "equestH\000\022v\n\035get_div_foreign_issuer_repor"
    "t\030\002 \001(\0132M.tinkoff.public.invest.api.cont"
    "ract.v1.GetDividendsForeignIssuerReportR"
    "equestH\000B\t\n\007payload\"\260\002\n!GetDividendsFore"
    "ignIssuerResponse\022\212\001\n+generate_div_forei"
    "gn_issuer_report_response\030\001 \001(\0132S.tinkof"
    "f.public.invest.api.contract.v1.Generate"
    "DividendsForeignIssuerReportResponseH\000\022s"
    "\n\031div_foreign_issuer_report\030\002 \001(\0132N.tink"
    "off.public.invest.api.contract.v1.GetDiv"
    "idendsForeignIssuerReportResponseH\000B\t\n\007p"
    "ayload\"\223\001\n+GenerateDividendsForeignIssue"
    "rReportRequest\022\022\n\naccount_id\030\001 \001(\t\022(\n\004fr"
    "om\030\002 \001(\0132\032.google.protobuf.Timestamp\022&\n\002"
    "to\030\003 \001(\0132\032.google.protobuf.Timestamp\"G\n&"
    "GetDividendsForeignIssuerReportRequest\022\017"
    "\n\007task_id\030\001 \001(\t\022\014\n\004page\030\002 \001(\005\"\?\n,Generat"
    "eDividendsForeignIssuerReportResponse\022\017\n"
    "\007task_id\030\001 \001(\t\"\315\001\n\'GetDividendsForeignIs"
    "suerReportResponse\022l\n\037dividends_foreign_"
    "issuer_report\030\001 \003(\0132C.tinkoff.public.inv"
    "est.api.contract.v1.DividendsForeignIssu"
    "erReport\022\022\n\nitemsCount\030\002 \001(\005\022\022\n\npagesCou"
    "nt\030\003 \001(\005\022\014\n\004page\030\004 \001(\005\"\311\004\n\034DividendsFore"
    "ignIssuerReport\022/\n\013record_date\030\001 \001(\0132\032.g"
    "oogle.protobuf.Timestamp\0220\n\014payment_date"
    "\030\002 \001(\0132\032.google.protobuf.Timestamp\022\025\n\rse"
    "curity_name\030\003 \001(\t\022\014\n\004isin\030\004 \001(\t\022\026\n\016issue"
    "r_country\030\005 \001(\t\022\020\n\010quantity\030\006 \001(\003\022B\n\010div"
    "idend\030\007 \001(\01320.tinkoff.public.invest.api."
    "contract.v1.Quotation\022M\n\023external_commis"
    "sion\030\010 \001(\01320.tinkoff.public.invest.api.c"
    "ontract.v1.Quotation\022H\n\016dividend_gross\030\t"
    " \001(\01320.tinkoff.public.invest.api.contrac"
    "t.v1.Quotation\022=\n\003tax\030\n \001(\01320.tinkoff.pu"
    "blic.invest.api.contract.v1.Quotation\022I\n"
    "\017dividend_amount\030\013 \001(\01320.tinkoff.public."
    "invest.api.contract.v1.Quotation\022\020\n\010curr"
    "ency\030\014 \001(\t\"*\n\026PortfolioStreamRequest\022\020\n\010"
    "accounts\030\001 \003(\t\"\215\002\n\027PortfolioStreamRespon"
    "se\022[\n\rsubscriptions\030\001 \001(\0132B.tinkoff.publ"
    "ic.invest.api.contract.v1.PortfolioSubsc"
    "riptionResultH\000\022M\n\tportfolio\030\002 \001(\01328.tin"
    "koff.public.invest.api.contract.v1.Portf"
    "olioResponseH\000\022;\n\004ping\030\003 \001(\0132+.tinkoff.p"
    "ublic.invest.api.contract.v1.PingH\000B\t\n\007p"
    "ayload\"q\n\033PortfolioSubscriptionResult\022R\n"
    "\010accounts\030\001 \003(\0132@.tinkoff.public.invest."
    "api.contract.v1.AccountSubscriptionStatu"
    "s\"\220\001\n\031AccountSubscriptionStatus\022\022\n\naccou"
    "nt_id\030\001 \001(\t\022_\n\023subscription_status\030\006 \001(\016"
    "2B.tinkoff.public.invest.api.contract.v1"
    ".PortfolioSubscriptionStatus\"\240\003\n\034GetOper"
    "ationsByCursorRequest\022\022\n\naccount_id\030\001 \001("
    "\t\022\025\n\rinstrument_id\030\002 \001(\t\022(\n\004from\030\006 \001(\0132\032"
    ".google.protobuf.Timestamp\022&\n\002to\030\007 \001(\0132\032"
    ".google.protobuf.Timestamp\022\016\n\006cursor\030\013 \001"
    "(\t\022\r\n\005limit\030\014 \001(\005\022M\n\017operation_types\030\r \003"
    "(\01624.tinkoff.public.invest.api.contract."
    "v1.OperationType\022D\n\005state\030\016 \001(\01625.tinkof"
    "f.public.invest.api.contract.v1.Operatio"
    "nState\022\033\n\023without_commissions\030\017 \001(\010\022\026\n\016w"
    "ithout_trades\030\020 \001(\010\022\032\n\022without_overnight"
    "s\030\021 \001(\010\"\213\001\n\035GetOperationsByCursorRespons"
    "e\022\020\n\010has_next\030\001 \001(\010\022\023\n\013next_cursor\030\002 \001(\t"
    "\022C\n\005items\030\006 \003(\01324.tinkoff.public.invest."
    "api.contract.v1.OperationItem\"\361\010\n\rOperat"
    "ionItem\022\016\n\006cursor\030\001 \001(\t\022\031\n\021broker_accoun"
    "t_id\030\006 \001(\t\022\n\n\002id\030\020 \001(\t\022\033\n\023parent_operati"
    "on_id\030\021 \001(\t\022\014\n\004name\030\022 \001(\t\022(\n\004date\030\025 \001(\0132"
    "\032.google.protobuf.Timestamp\022B\n\004type\030\026 \001("
    "\01624.tinkoff.public.invest.api.contract.v"
    "1.OperationType\022\023\n\013description\030\027 \001(\t\022D\n\005"
    "state\030\030 \001(\01625.tinkoff.public.invest.api."
    "contract.v1.OperationState\022\026\n\016instrument"
    "_uid\030\037 \001(\t\022\014\n\004figi\030  \001(\t\022\027\n\017instrument_t"
    "ype\030! \001(\t\022N\n\017instrument_kind\030\" \001(\01625.tin"
    "koff.public.invest.api.contract.v1.Instr"
    "umentType\022\024\n\014position_uid\030# \001(\t\022B\n\007payme"
    "nt\030) \001(\01321.tinkoff.public.invest.api.con"
    "tract.v1.MoneyValue\022@\n\005price\030* \001(\01321.tin"
    "koff.public.invest.api.contract.v1.Money"
    "Value\022E\n\ncommission\030+ \001(\01321.tinkoff.publ"
    "ic.invest.api.contract.v1.MoneyValue\022@\n\005"
    "yield\030, \001(\01321.tinkoff.public.invest.api."
    "contract.v1.MoneyValue\022H\n\016yield_relative"
    "\030- \001(\01320.tinkoff.public.invest.api.contr"
    "act.v1.Quotation\022F\n\013accrued_int\030. \001(\01321."
    "tinkoff.public.invest.api.contract.v1.Mo"
    "neyValue\022\020\n\010quantity\0303 \001(\003\022\025\n\rquantity_r"
    "est\0304 \001(\003\022\025\n\rquantity_done\0305 \001(\003\0224\n\020canc"
    "el_date_time\0308 \001(\0132\032.google.protobuf.Tim"
    "estamp\022\025\n\rcancel_reason\0309 \001(\t\022O\n\013trades_"
    "info\030= \001(\0132:.tinkoff.public.invest.api.c"
    "ontract.v1.OperationItemTrades\022\021\n\tasset_"
    "uid\030@ \001(\t\"`\n\023OperationItemTrades\022I\n\006trad"
    "es\030\006 \003(\01329.tinkoff.public.invest.api.con"
    "tract.v1.OperationItemTrade\"\253\002\n\022Operatio"
    "nItemTrade\022\013\n\003num\030\001 \001(\t\022(\n\004date\030\006 \001(\0132\032."
    "google.protobuf.Timestamp\022\020\n\010quantity\030\013 "
    "\001(\003\022@\n\005price\030\020 \001(\01321.tinkoff.public.inve"
    "st.api.contract.v1.MoneyValue\022@\n\005yield\030\025"
    " \001(\01321.tinkoff.public.invest.api.contrac"
    "t.v1.MoneyValue\022H\n\016yield_relative\030\026 \001(\0132"
    "0.tinkoff.public.invest.api.contract.v1."
    "Quotation\"*\n\026PositionsStreamRequest\022\020\n\010a"
    "ccounts\030\001 \003(\t\"\207\002\n\027PositionsStreamRespons"
    "e\022[\n\rsubscriptions\030\001 \001(\0132B.tinkoff.publi"
    "c.invest.api.contract.v1.PositionsSubscr"
    "iptionResultH\000\022G\n\010position\030\002 \001(\01323.tinko"
    "ff.public.invest.api.contract.v1.Positio"
    "nDataH\000\022;\n\004ping\030\003 \001(\0132+.tinkoff.public.i"
    "nvest.api.contract.v1.PingH\000B\t\n\007payload\""
    "s\n\033PositionsSubscriptionResult\022T\n\010accoun"
    "ts\030\001 \003(\0132B.tinkoff.public.invest.api.con"
    "tract.v1.PositionsSubscriptionStatus\"\231\001\n"
    "\033PositionsSubscriptionStatus\022\022\n\naccount_"
    "id\030\001 \001(\t\022f\n\023subscription_status\030\006 \001(\0162I."
    "tinkoff.public.invest.api.contract.v1.Po"
    "sitionsAccountSubscriptionStatus\"\366\002\n\014Pos"
    "itionData\022\022\n\naccount_id\030\001 \001(\t\022D\n\005money\030\002"
    " \003(\01325.tinkoff.public.invest.api.contrac"
    "t.v1.PositionsMoney\022N\n\nsecurities\030\003 \003(\0132"
    ":.tinkoff.public.invest.api.contract.v1."
    "PositionsSecurities\022H\n\007futures\030\004 \003(\01327.t"
    "inkoff.public.invest.api.contract.v1.Pos"
    "itionsFutures\022H\n\007options\030\005 \003(\01327.tinkoff"
    ".public.invest.api.contract.v1.Positions"
    "Options\022(\n\004date\030\006 \001(\0132\032.google.protobuf."
    "Timestamp\"\246\001\n\016PositionsMoney\022J\n\017availabl"
    "e_value\030\001 \001(\01321.tinkoff.public.invest.ap"
    "i.contract.v1.MoneyValue\022H\n\rblocked_valu"
    "e\030\002 \001(\01321.tinkoff.public.invest.api.cont"
    "ract.v1.MoneyValue*\213\001\n\016OperationState\022\037\n"
    "\033OPERATION_STATE_UNSPECIFIED\020\000\022\034\n\030OPERAT"
    "ION_STATE_EXECUTED\020\001\022\034\n\030OPERATION_STATE_"
    "CANCELED\020\002\022\034\n\030OPERATION_STATE_PROGRESS\020\003"
    "*\272\020\n\rOperationType\022\036\n\032OPERATION_TYPE_UNS"
    "PECIFIED\020\000\022\030\n\024OPERATION_TYPE_INPUT\020\001\022\033\n\027"
    "OPERATION_TYPE_BOND_TAX\020\002\022$\n OPERATION_T"
    "YPE_OUTPUT_SECURITIES\020\003\022\034\n\030OPERATION_TYP"
    "E_OVERNIGHT\020\004\022\026\n\022OPERATION_TYPE_TAX\020\005\022&\n"
    "\"OPERATION_TYPE_BOND_REPAYMENT_FULL\020\006\022\034\n"
    "\030OPERATION_TYPE_SELL_CARD\020\007\022\037\n\033OPERATION"
    "_TYPE_DIVIDEND_TAX\020\010\022\031\n\025OPERATION_TYPE_O"
    "UTPUT\020\t\022!\n\035OPERATION_TYPE_BOND_REPAYMENT"
    "\020\n\022!\n\035OPERATION_TYPE_TAX_CORRECTION\020\013\022\036\n"
    "\032OPERATION_TYPE_SERVICE_FEE\020\014\022\036\n\032OPERATI"
    "ON_TYPE_BENEFIT_TAX\020\r\022\035\n\031OPERATION_TYPE_"
    "MARGIN_FEE\020\016\022\026\n\022OPERATION_TYPE_BUY\020\017\022\033\n\027"
    "OPERATION_TYPE_BUY_CARD\020\020\022#\n\037OPERATION_T"
    "YPE_INPUT_SECURITIES\020\021\022\036\n\032OPERATION_TYPE"
    "_SELL_MARGIN\020\022\022\035\n\031OPERATION_TYPE_BROKER_"
    "FEE\020\023\022\035\n\031OPERATION_TYPE_BUY_MARGIN\020\024\022\033\n\027"
    "OPERATION_TYPE_DIVIDEND\020\025\022\027\n\023OPERATION_T"
    "YPE_SELL\020\026\022\031\n\025OPERATION_TYPE_COUPON\020\027\022\036\n"
    "\032OPERATION_TYPE_SUCCESS_FEE\020\030\022$\n OPERATI"
    "ON_TYPE_DIVIDEND_TRANSFER\020\031\022%\n!OPERATION"
    "_TYPE_ACCRUING_VARMARGIN\020\032\022(\n$OPERATION_"
    "TYPE_WRITING_OFF_VARMARGIN\020\033\022\037\n\033OPERATIO"
    "N_TYPE_DELIVERY_BUY\020\034\022 \n\034OPERATION_TYPE_"
    "DELIVERY_SELL\020\035\022\035\n\031OPERATION_TYPE_TRACK_"
    "MFEE\020\036\022\035\n\031OPERATION_TYPE_TRACK_PFEE\020\037\022\"\n"
    "\036OPERATION_TYPE_TAX_PROGRESSIVE\020 \022\'\n#OPE"
    "RATION_TYPE_BOND_TAX_PROGRESSIVE\020!\022+\n\'OP"
    "ERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE\020\"\022"
    "*\n&OPERATION_TYPE_BENEFIT_TAX_PROGRESSIV"
    "E\020#\022-\n)OPERATION_TYPE_TAX_CORRECTION_PRO"
    "GRESSIVE\020$\022\'\n#OPERATION_TYPE_TAX_REPO_PR"
    "OGRESSIVE\020%\022\033\n\027OPERATION_TYPE_TAX_REPO\020&"
    "\022 \n\034OPERATION_TYPE_TAX_REPO_HOLD\020\'\022\"\n\036OP"
    "ERATION_TYPE_TAX_REPO_REFUND\020(\022,\n(OPERAT"
    "ION_TYPE_TAX_REPO_HOLD_PROGRESSIVE\020)\022.\n*"
    "OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSI"
    "VE\020*\022\032\n\026OPERATION_TYPE_DIV_EXT\020+\022(\n$OPER"
    "ATION_TYPE_TAX_CORRECTION_COUPON\020,\022\033\n\027OP"
    "ERATION_TYPE_CASH_FEE\020-\022\032\n\026OPERATION_TYP"
    "E_OUT_FEE\020.\022!\n\035OPERATION_TYPE_OUT_STAMP_"
    "DUTY\020/\022\037\n\033OPERATION_TYPE_OUTPUT_SWIFT\0202\022"
    "\036\n\032OPERATION_TYPE_INPUT_SWIFT\0203\022#\n\037OPERA"
    "TION_TYPE_OUTPUT_ACQUIRING\0205\022\"\n\036OPERATIO"
    "N_TYPE_INPUT_ACQUIRING\0206\022!\n\035OPERATION_TY"
    "PE_OUTPUT_PENALTY\0207\022\035\n\031OPERATION_TYPE_AD"
    "VICE_FEE\0208\022\037\n\033OPERATION_TYPE_TRANS_IIS_B"
    "S\0209\022\036\n\032OPERATION_TYPE_TRANS_BS_BS\020:\022\034\n\030O"
    "PERATION_TYPE_OUT_MULTI\020;\022\034\n\030OPERATION_T"
    "YPE_INP_MULTI\020<\022!\n\035OPERATION_TYPE_OVER_P"
    "LACEMENT\020=\022\033\n\027OPERATION_TYPE_OVER_COM\020>\022"
    "\036\n\032OPERATION_TYPE_OVER_INCOME\020\?\022$\n OPERA"
    "TION_TYPE_OPTION_EXPIRATION\020@*\336\001\n\033Portfo"
    "lioSubscriptionStatus\022-\n)PORTFOLIO_SUBSC"
    "RIPTION_STATUS_UNSPECIFIED\020\000\022)\n%PORTFOLI"
    "O_SUBSCRIPTION_STATUS_SUCCESS\020\001\0223\n/PORTF"
    "OLIO_SUBSCRIPTION_STATUS_ACCOUNT_NOT_FOU"
    "ND\020\002\0220\n,PORTFOLIO_SUBSCRIPTION_STATUS_IN"
    "TERNAL_ERROR\020\003*\345\001\n\"PositionsAccountSubsc"
    "riptionStatus\022-\n)POSITIONS_SUBSCRIPTION_"
    "STATUS_UNSPECIFIED\020\000\022)\n%POSITIONS_SUBSCR"
    "IPTION_STATUS_SUCCESS\020\001\0223\n/POSITIONS_SUB"
    "SCRIPTION_STATUS_ACCOUNT_NOT_FOUND\020\002\0220\n,"
    "POSITIONS_SUBSCRIPTION_STATUS_INTERNAL_E"
    "RROR\020\0032\230\010\n\021OperationsService\022\204\001\n\rGetOper"
    "ations\0228.tinkoff.public.invest.api.contr"
    "act.v1.OperationsRequest\0329.tinkoff.publi"
    "c.invest.api.contract.v1.OperationsRespo"
    "nse\022\201\001\n\014GetPortfolio\0227.tinkoff.public.in"
    "vest.api.contract.v1.PortfolioRequest\0328."
    "tinkoff.public.invest.api.contract.v1.Po"
    "rtfolioResponse\022\201\001\n\014GetPositions\0227.tinko"
    "ff.public.invest.api.contract.v1.Positio"
    "nsRequest\0328.tinkoff.public.invest.api.co"
    "ntract.v1.PositionsResponse\022\220\001\n\021GetWithd"
    "rawLimits\022<.tinkoff.public.invest.api.co"
    "ntract.v1.WithdrawLimitsRequest\032=.tinkof"
    "f.public.invest.api.contract.v1.Withdraw"
    "LimitsResponse\022\212\001\n\017GetBrokerReport\022:.tin"
    "koff.public.invest.api.contract.v1.Broke"
    "rReportRequest\032;.tinkoff.public.invest.a"
    "pi.contract.v1.BrokerReportResponse\022\256\001\n\031"
    "GetDividendsForeignIssuer\022G.tinkoff.publ"
    "ic.invest.api.contract.v1.GetDividendsFo"
    "reignIssuerRequest\032H.tinkoff.public.inve"
    "st.api.contract.v1.GetDividendsForeignIs"
    "suerResponse\022\242\001\n\025GetOperationsByCursor\022C"
    ".tinkoff.public.invest.api.contract.v1.G"
    "etOperationsByCursorRequest\032D.tinkoff.pu"
    "blic.invest.api.contract.v1.GetOperation"
    "sByCursorResponse2\303\002\n\027OperationsStreamSe"
    "rvice\022\222\001\n\017PortfolioStream\022=.tinkoff.publ"
    "ic.invest.api.contract.v1.PortfolioStrea"
    "mRequest\032>.tinkoff.public.invest.api.con"
    "tract.v1.PortfolioStreamResponse0\001\022\222\001\n\017P"
    "ositionsStream\022=.tinkoff.public.invest.a"
    "pi.contract.v1.PositionsStreamRequest\032>."
    "tinkoff.public.invest.api.contract.v1.Po"
    "sitionsStreamResponse0\001Ba\n\034ru.tinkoff.pi"
    "api.contract.v1P\001Z\014./;investapi\242\002\005TIAPI\252"
    "\002\024Tinkoff.InvestApi.V1\312\002\021Tinkoff\\Invest\\"
    "V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_operations_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_operations_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_operations_2eproto = {
    false,
    false,
    16730,
    descriptor_table_protodef_operations_2eproto,
    "operations.proto",
    &descriptor_table_operations_2eproto_once,
    descriptor_table_operations_2eproto_deps,
    2,
    44,
    schemas,
    file_default_instances,
    TableStruct_operations_2eproto::offsets,
    file_level_metadata_operations_2eproto,
    file_level_enum_descriptors_operations_2eproto,
    file_level_service_descriptors_operations_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_operations_2eproto_getter() {
  return &descriptor_table_operations_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_operations_2eproto(&descriptor_table_operations_2eproto);
namespace tinkoff {
namespace public {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PortfolioRequest_CurrencyRequest_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PortfolioRequest_CurrencyRequest_internal_data_[] = {
    196608u, 0u, };
bool PortfolioRequest_CurrencyRequest_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::RUB;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::USD;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::EUR;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::CurrencyRequest_MIN;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::CurrencyRequest_MAX;
constexpr int PortfolioRequest::CurrencyRequest_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* OperationState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t OperationState_internal_data_[] = {
    262144u, 0u, };
bool OperationState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* OperationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t OperationType_internal_data_[] = {
    3145728u, 32u, 131052u, };
bool OperationType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, OperationType_internal_data_);
}
const ::google::protobuf::EnumDescriptor* PortfolioSubscriptionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t PortfolioSubscriptionStatus_internal_data_[] = {
    262144u, 0u, };
bool PortfolioSubscriptionStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* PositionsAccountSubscriptionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t PositionsAccountSubscriptionStatus_internal_data_[] = {
    262144u, 0u, };
bool PositionsAccountSubscriptionStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class OperationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<OperationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& from(const OperationsRequest* msg);
  static void set_has_from(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& to(const OperationsRequest* msg);
  static void set_has_to(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& OperationsRequest::_Internal::from(const OperationsRequest* msg) {
  return *msg->_impl_.from_;
}
const ::google::protobuf::Timestamp& OperationsRequest::_Internal::to(const OperationsRequest* msg) {
  return *msg->_impl_.to_;
}
void OperationsRequest::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OperationsRequest::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OperationsRequest::OperationsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OperationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE OperationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        figi_(arena, from.figi_) {}

OperationsRequest::OperationsRequest(
    ::google::protobuf::Arena* arena,
    const OperationsRequest& from)
    : ::google::protobuf::Message(arena) {
  OperationsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.from_)
                : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.to_)
                : nullptr;
  _impl_.state_ = from._impl_.state_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OperationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE OperationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        figi_(arena) {}

inline void OperationsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::state_));
}
OperationsRequest::~OperationsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OperationsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperationsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.figi_.Destroy();
  delete _impl_.from_;
  delete _impl_.to_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OperationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OperationsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_.state_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperationsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 78, 2> OperationsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OperationsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.account_id_)}},
    // .google.protobuf.Timestamp from = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.to_)}},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperationsRequest, _impl_.state_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.state_)}},
    // string figi = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.figi_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 2;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 3;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 4;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string figi = 5;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\67\12\0\0\0\4\0\0"
    "tinkoff.public.invest.api.contract.v1.OperationsRequest"
    "account_id"
    "figi"
  }},
};

::uint8_t* OperationsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OperationsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationsRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp from = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp to = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.OperationState state = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_state(), target);
  }

  // string figi = 5;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationsRequest.figi");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OperationsRequest)
  return target;
}

::size_t OperationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OperationsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string figi = 5;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp from = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.from_);
    }

    // .google.protobuf.Timestamp to = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.to_);
    }

  }
  // .tinkoff.public.invest.api.contract.v1.OperationState state = 4;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperationsRequest::_class_data_ = {
    OperationsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OperationsRequest::GetClassData() const {
  return &_class_data_;
}

void OperationsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperationsRequest*>(&to_msg);
  auto& from = static_cast<const OperationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OperationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_from()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_from());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_to()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_to());
    }
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationsRequest::CopyFrom(const OperationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperationsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OperationsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OperationsRequest::InternalSwap(OperationsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.state_)
      + sizeof(OperationsRequest::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata OperationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[0]);
}
// ===================================================================

class OperationsResponse::_Internal {
 public:
};

OperationsResponse::OperationsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OperationsResponse)
}
inline PROTOBUF_NDEBUG_INLINE OperationsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : operations_{visibility, arena, from.operations_},
        _cached_size_{0} {}

OperationsResponse::OperationsResponse(
    ::google::protobuf::Arena* arena,
    const OperationsResponse& from)
    : ::google::protobuf::Message(arena) {
  OperationsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OperationsResponse)
}
inline PROTOBUF_NDEBUG_INLINE OperationsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : operations_{visibility, arena},
        _cached_size_{0} {}

inline void OperationsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OperationsResponse::~OperationsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OperationsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperationsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OperationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OperationsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operations_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperationsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OperationsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OperationsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.Operation operations = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationsResponse, _impl_.operations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.Operation operations = 1;
    {PROTOBUF_FIELD_OFFSET(OperationsResponse, _impl_.operations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Operation>()},
  }}, {{
  }},
};

::uint8_t* OperationsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OperationsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.Operation operations = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_operations_size()); i < n; i++) {
    const auto& repfield = this->_internal_operations().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OperationsResponse)
  return target;
}

::size_t OperationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OperationsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.Operation operations = 1;
  total_size += 1UL * this->_internal_operations_size();
  for (const auto& msg : this->_internal_operations()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperationsResponse::_class_data_ = {
    OperationsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OperationsResponse::GetClassData() const {
  return &_class_data_;
}

void OperationsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperationsResponse*>(&to_msg);
  auto& from = static_cast<const OperationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OperationsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_operations()->MergeFrom(
      from._internal_operations());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationsResponse::CopyFrom(const OperationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperationsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OperationsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OperationsResponse::InternalSwap(OperationsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.operations_.InternalSwap(&other->_impl_.operations_);
}

::google::protobuf::Metadata OperationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[1]);
}
// ===================================================================

class Operation::_Internal {
 public:
  using HasBits = decltype(std::declval<Operation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Operation, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& payment(const Operation* msg);
  static void set_has_payment(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& price(const Operation* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::google::protobuf::Timestamp& date(const Operation* msg);
  static void set_has_date(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::MoneyValue& Operation::_Internal::payment(const Operation* msg) {
  return *msg->_impl_.payment_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& Operation::_Internal::price(const Operation* msg) {
  return *msg->_impl_.price_;
}
const ::google::protobuf::Timestamp& Operation::_Internal::date(const Operation* msg) {
  return *msg->_impl_.date_;
}
void Operation::clear_payment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.payment_ != nullptr) _impl_.payment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Operation::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Operation::clear_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Operation::Operation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.Operation)
}
inline PROTOBUF_NDEBUG_INLINE Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trades_{visibility, arena, from.trades_},
        id_(arena, from.id_),
        parent_operation_id_(arena, from.parent_operation_id_),
        currency_(arena, from.currency_),
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_),
        type_(arena, from.type_),
        asset_uid_(arena, from.asset_uid_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_) {}

Operation::Operation(
    ::google::protobuf::Arena* arena,
    const Operation& from)
    : ::google::protobuf::Message(arena) {
  Operation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.payment_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.payment_)
                : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_)
                : nullptr;
  _impl_.date_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.date_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, operation_type_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::operation_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.Operation)
}
inline PROTOBUF_NDEBUG_INLINE Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trades_{visibility, arena},
        id_(arena),
        parent_operation_id_(arena),
        currency_(arena),
        figi_(arena),
        instrument_type_(arena),
        type_(arena),
        asset_uid_(arena),
        position_uid_(arena),
        instrument_uid_(arena) {}

inline void Operation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, payment_),
           0,
           offsetof(Impl_, operation_type_) -
               offsetof(Impl_, payment_) +
               sizeof(Impl_::operation_type_));
}
Operation::~Operation() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.Operation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Operation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.parent_operation_id_.Destroy();
  _impl_.currency_.Destroy();
  _impl_.figi_.Destroy();
  _impl_.instrument_type_.Destroy();
  _impl_.type_.Destroy();
  _impl_.asset_uid_.Destroy();
  _impl_.position_uid_.Destroy();
  _impl_.instrument_uid_.Destroy();
  delete _impl_.payment_;
  delete _impl_.price_;
  delete _impl_.date_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.Operation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.parent_operation_id_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.asset_uid_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.payment_ != nullptr);
      _impl_.payment_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.date_ != nullptr);
      _impl_.date_->Clear();
    }
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.operation_type_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.operation_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Operation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 4, 159, 2> Operation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Operation, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294721536,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Operation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.id_)}},
    // string parent_operation_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.parent_operation_id_)}},
    // string currency = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.currency_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.payment_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Operation, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operation, _impl_.state_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.state_)}},
    // int64 quantity = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operation, _impl_.quantity_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_)}},
    // int64 quantity_rest = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operation, _impl_.quantity_rest_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_rest_)}},
    // string figi = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.figi_)}},
    // string instrument_type = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_type_)}},
    // .google.protobuf.Timestamp date = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 2, PROTOBUF_FIELD_OFFSET(Operation, _impl_.date_)}},
    // string type = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.type_)}},
    // .tinkoff.public.invest.api.contract.v1.OperationType operation_type = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operation, _impl_.operation_type_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.operation_type_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.OperationTrade trades = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 3, PROTOBUF_FIELD_OFFSET(Operation, _impl_.trades_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string asset_uid = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.asset_uid_)}},
    // string position_uid = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.position_uid_)}},
    // string instrument_uid = 18;
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent_operation_id = 2;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.parent_operation_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency = 3;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 4;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.payment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 5;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 6;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 quantity = 7;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 quantity_rest = 8;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_rest_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string figi = 9;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 10;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date = 11;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.date_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string type = 12;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OperationType operation_type = 13;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.operation_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tinkoff.public.invest.api.contract.v1.OperationTrade trades = 14;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.trades_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string asset_uid = 16;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.asset_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string position_uid = 17;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 18;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OperationTrade>()},
  }}, {{
    "\57\2\23\10\0\0\0\0\0\4\17\0\4\0\0\11\14\16\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.Operation"
    "id"
    "parent_operation_id"
    "currency"
    "figi"
    "instrument_type"
    "type"
    "asset_uid"
    "position_uid"
    "instrument_uid"
  }},
};

::uint8_t* Operation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.Operation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string parent_operation_id = 2;
  if (!this->_internal_parent_operation_id().empty()) {
    const std::string& _s = this->_internal_parent_operation_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.parent_operation_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string currency = 3;
  if (!this->_internal_currency().empty()) {
    const std::string& _s = this->_internal_currency();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.currency");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::payment(this),
        _Internal::payment(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.OperationState state = 6;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_state(), target);
  }

  // int64 quantity = 7;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_quantity(), target);
  }

  // int64 quantity_rest = 8;
  if (this->_internal_quantity_rest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_quantity_rest(), target);
  }

  // string figi = 9;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.figi");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string instrument_type = 10;
  if (!this->_internal_instrument_type().empty()) {
    const std::string& _s = this->_internal_instrument_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.instrument_type");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // .google.protobuf.Timestamp date = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::date(this),
        _Internal::date(this).GetCachedSize(), target, stream);
  }

  // string type = 12;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.type");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OperationType operation_type = 13;
  if (this->_internal_operation_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        13, this->_internal_operation_type(), target);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.OperationTrade trades = 14;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trades_size()); i < n; i++) {
    const auto& repfield = this->_internal_trades().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string asset_uid = 16;
  if (!this->_internal_asset_uid().empty()) {
    const std::string& _s = this->_internal_asset_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.asset_uid");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // string position_uid = 17;
  if (!this->_internal_position_uid().empty()) {
    const std::string& _s = this->_internal_position_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.position_uid");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // string instrument_uid = 18;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Operation.instrument_uid");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.Operation)
  return target;
}

::size_t Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.Operation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OperationTrade trades = 14;
  total_size += 1UL * this->_internal_trades_size();
  for (const auto& msg : this->_internal_trades()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string parent_operation_id = 2;
  if (!this->_internal_parent_operation_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_parent_operation_id());
  }

  // string currency = 3;
  if (!this->_internal_currency().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currency());
  }

  // string figi = 9;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string instrument_type = 10;
  if (!this->_internal_instrument_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_type());
  }

  // string type = 12;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // string asset_uid = 16;
  if (!this->_internal_asset_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_asset_uid());
  }

  // string position_uid = 17;
  if (!this->_internal_position_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_position_uid());
  }

  // string instrument_uid = 18;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payment_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
    }

    // .google.protobuf.Timestamp date = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.date_);
    }

  }
  // int64 quantity = 7;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  // int64 quantity_rest = 8;
  if (this->_internal_quantity_rest() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity_rest());
  }

  // .tinkoff.public.invest.api.contract.v1.OperationState state = 6;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // .tinkoff.public.invest.api.contract.v1.OperationType operation_type = 13;
  if (this->_internal_operation_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_operation_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Operation::_class_data_ = {
    Operation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Operation::GetClassData() const {
  return &_class_data_;
}

void Operation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Operation*>(&to_msg);
  auto& from = static_cast<const Operation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.Operation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_parent_operation_id().empty()) {
    _this->_internal_set_parent_operation_id(from._internal_parent_operation_id());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_asset_uid().empty()) {
    _this->_internal_set_asset_uid(from._internal_asset_uid());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_payment()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_payment());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_price());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_date());
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  if (from._internal_quantity_rest() != 0) {
    _this->_internal_set_quantity_rest(from._internal_quantity_rest());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_operation_type() != 0) {
    _this->_internal_set_operation_type(from._internal_operation_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Operation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Operation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Operation::InternalSwap(Operation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_operation_id_, &other->_impl_.parent_operation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.asset_uid_, &other->_impl_.asset_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, _impl_.operation_type_)
      + sizeof(Operation::_impl_.operation_type_)
      - PROTOBUF_FIELD_OFFSET(Operation, _impl_.payment_)>(
          reinterpret_cast<char*>(&_impl_.payment_),
          reinterpret_cast<char*>(&other->_impl_.payment_));
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[2]);
}
// ===================================================================

class OperationTrade::_Internal {
 public:
  using HasBits = decltype(std::declval<OperationTrade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& date_time(const OperationTrade* msg);
  static void set_has_date_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& price(const OperationTrade* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& OperationTrade::_Internal::date_time(const OperationTrade* msg) {
  return *msg->_impl_.date_time_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationTrade::_Internal::price(const OperationTrade* msg) {
  return *msg->_impl_.price_;
}
void OperationTrade::clear_date_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.date_time_ != nullptr) _impl_.date_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OperationTrade::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OperationTrade::OperationTrade(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OperationTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_) {}

OperationTrade::OperationTrade(
    ::google::protobuf::Arena* arena,
    const OperationTrade& from)
    : ::google::protobuf::Message(arena) {
  OperationTrade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.date_time_)
                : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_)
                : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OperationTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena) {}

inline void OperationTrade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_time_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, date_time_) +
               sizeof(Impl_::quantity_));
}
OperationTrade::~OperationTrade() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OperationTrade)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperationTrade::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.trade_id_.Destroy();
  delete _impl_.date_time_;
  delete _impl_.price_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OperationTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OperationTrade)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_time_ != nullptr);
      _impl_.date_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperationTrade::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 69, 2> OperationTrade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OperationTrade_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.price_)}},
    // string trade_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.trade_id_)}},
    // .google.protobuf.Timestamp date_time = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.date_time_)}},
    // int64 quantity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OperationTrade, _impl_.quantity_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string trade_id = 1;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date_time = 2;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.date_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 3;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 4;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\64\10\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OperationTrade"
    "trade_id"
  }},
};

::uint8_t* OperationTrade::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OperationTrade)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string trade_id = 1;
  if (!this->_internal_trade_id().empty()) {
    const std::string& _s = this->_internal_trade_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationTrade.trade_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp date_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::date_time(this),
        _Internal::date_time(this).GetCachedSize(), target, stream);
  }

  // int64 quantity = 3;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_quantity(), target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OperationTrade)
  return target;
}

::size_t OperationTrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OperationTrade)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trade_id = 1;
  if (!this->_internal_trade_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp date_time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.date_time_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
    }

  }
  // int64 quantity = 3;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperationTrade::_class_data_ = {
    OperationTrade::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OperationTrade::GetClassData() const {
  return &_class_data_;
}

void OperationTrade::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperationTrade*>(&to_msg);
  auto& from = static_cast<const OperationTrade&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OperationTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_date_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_date_time());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_price());
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationTrade::CopyFrom(const OperationTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OperationTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperationTrade::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OperationTrade::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OperationTrade::InternalSwap(OperationTrade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.quantity_)
      + sizeof(OperationTrade::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.date_time_)>(
          reinterpret_cast<char*>(&_impl_.date_time_),
          reinterpret_cast<char*>(&other->_impl_.date_time_));
}

::google::protobuf::Metadata OperationTrade::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[3]);
}
// ===================================================================

class PortfolioRequest::_Internal {
 public:
};

PortfolioRequest::PortfolioRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

PortfolioRequest::PortfolioRequest(
    ::google::protobuf::Arena* arena,
    const PortfolioRequest& from)
    : ::google::protobuf::Message(arena) {
  PortfolioRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.currency_ = from._impl_.currency_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void PortfolioRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.currency_ = {};
}
PortfolioRequest::~PortfolioRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortfolioRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PortfolioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.currency_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortfolioRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> PortfolioRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PortfolioRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PortfolioRequest, _impl_.currency_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.currency_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.currency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\66\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PortfolioRequest"
    "account_id"
  }},
};

::uint8_t* PortfolioRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PortfolioRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
  if (this->_internal_currency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
  return target;
}

::size_t PortfolioRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // .tinkoff.public.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
  if (this->_internal_currency() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_currency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PortfolioRequest::_class_data_ = {
    PortfolioRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PortfolioRequest::GetClassData() const {
  return &_class_data_;
}

void PortfolioRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PortfolioRequest*>(&to_msg);
  auto& from = static_cast<const PortfolioRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_currency() != 0) {
    _this->_internal_set_currency(from._internal_currency());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioRequest::CopyFrom(const PortfolioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PortfolioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortfolioRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PortfolioRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PortfolioRequest::InternalSwap(PortfolioRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.currency_, other->_impl_.currency_);
}

::google::protobuf::Metadata PortfolioRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[4]);
}
// ===================================================================

class PortfolioResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PortfolioResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_shares(const PortfolioResponse* msg);
  static void set_has_total_amount_shares(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_bonds(const PortfolioResponse* msg);
  static void set_has_total_amount_bonds(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_etf(const PortfolioResponse* msg);
  static void set_has_total_amount_etf(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_currencies(const PortfolioResponse* msg);
  static void set_has_total_amount_currencies(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_futures(const PortfolioResponse* msg);
  static void set_has_total_amount_futures(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& expected_yield(const PortfolioResponse* msg);
  static void set_has_expected_yield(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_options(const PortfolioResponse* msg);
  static void set_has_total_amount_options(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_sp(const PortfolioResponse* msg);
  static void set_has_total_amount_sp(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_amount_portfolio(const PortfolioResponse* msg);
  static void set_has_total_amount_portfolio(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_shares(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_shares_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_bonds(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_bonds_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_etf(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_etf_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_currencies(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_currencies_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_futures(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_futures_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& PortfolioResponse::_Internal::expected_yield(const PortfolioResponse* msg) {
  return *msg->_impl_.expected_yield_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_options(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_options_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_sp(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_sp_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioResponse::_Internal::total_amount_portfolio(const PortfolioResponse* msg) {
  return *msg->_impl_.total_amount_portfolio_;
}
void PortfolioResponse::clear_total_amount_shares() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_shares_ != nullptr) _impl_.total_amount_shares_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PortfolioResponse::clear_total_amount_bonds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_bonds_ != nullptr) _impl_.total_amount_bonds_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PortfolioResponse::clear_total_amount_etf() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_etf_ != nullptr) _impl_.total_amount_etf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void PortfolioResponse::clear_total_amount_currencies() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_currencies_ != nullptr) _impl_.total_amount_currencies_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void PortfolioResponse::clear_total_amount_futures() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_futures_ != nullptr) _impl_.total_amount_futures_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void PortfolioResponse::clear_expected_yield() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expected_yield_ != nullptr) _impl_.expected_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void PortfolioResponse::clear_total_amount_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_options_ != nullptr) _impl_.total_amount_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void PortfolioResponse::clear_total_amount_sp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_sp_ != nullptr) _impl_.total_amount_sp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void PortfolioResponse::clear_total_amount_portfolio() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_amount_portfolio_ != nullptr) _impl_.total_amount_portfolio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
PortfolioResponse::PortfolioResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        positions_{visibility, arena, from.positions_},
        virtual_positions_{visibility, arena, from.virtual_positions_},
        account_id_(arena, from.account_id_) {}

PortfolioResponse::PortfolioResponse(
    ::google::protobuf::Arena* arena,
    const PortfolioResponse& from)
    : ::google::protobuf::Message(arena) {
  PortfolioResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.total_amount_shares_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_shares_)
                : nullptr;
  _impl_.total_amount_bonds_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_bonds_)
                : nullptr;
  _impl_.total_amount_etf_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_etf_)
                : nullptr;
  _impl_.total_amount_currencies_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_currencies_)
                : nullptr;
  _impl_.total_amount_futures_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_futures_)
                : nullptr;
  _impl_.expected_yield_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_)
                : nullptr;
  _impl_.total_amount_options_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_options_)
                : nullptr;
  _impl_.total_amount_sp_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_sp_)
                : nullptr;
  _impl_.total_amount_portfolio_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_portfolio_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        positions_{visibility, arena},
        virtual_positions_{visibility, arena},
        account_id_(arena) {}

inline void PortfolioResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_amount_shares_),
           0,
           offsetof(Impl_, total_amount_portfolio_) -
               offsetof(Impl_, total_amount_shares_) +
               sizeof(Impl_::total_amount_portfolio_));
}
PortfolioResponse::~PortfolioResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortfolioResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  delete _impl_.total_amount_shares_;
  delete _impl_.total_amount_bonds_;
  delete _impl_.total_amount_etf_;
  delete _impl_.total_amount_currencies_;
  delete _impl_.total_amount_futures_;
  delete _impl_.expected_yield_;
  delete _impl_.total_amount_options_;
  delete _impl_.total_amount_sp_;
  delete _impl_.total_amount_portfolio_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PortfolioResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positions_.Clear();
  _impl_.virtual_positions_.Clear();
  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.total_amount_shares_ != nullptr);
      _impl_.total_amount_shares_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.total_amount_bonds_ != nullptr);
      _impl_.total_amount_bonds_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.total_amount_etf_ != nullptr);
      _impl_.total_amount_etf_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.total_amount_currencies_ != nullptr);
      _impl_.total_amount_currencies_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.total_amount_futures_ != nullptr);
      _impl_.total_amount_futures_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.expected_yield_ != nullptr);
      _impl_.expected_yield_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.total_amount_options_ != nullptr);
      _impl_.total_amount_options_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.total_amount_sp_ != nullptr);
      _impl_.total_amount_sp_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.total_amount_portfolio_ != nullptr);
    _impl_.total_amount_portfolio_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortfolioResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 11, 82, 2> PortfolioResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PortfolioResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_shares_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_bonds_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_etf_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_currencies_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_futures_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.expected_yield_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PortfolioPosition positions = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 6, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.positions_)}},
    // string account_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.account_id_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_options = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 7, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_options_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 7, 8, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_sp_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 8, 9, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_portfolio_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 10, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.virtual_positions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_shares_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_bonds_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_etf_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_currencies_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_futures_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 6;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.expected_yield_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.PortfolioPosition positions = 7;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.positions_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string account_id = 8;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_options = 9;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_options_), _Internal::kHasBitsOffset + 6, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_sp_), _Internal::kHasBitsOffset + 7, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_portfolio_), _Internal::kHasBitsOffset + 8, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.virtual_positions_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PortfolioPosition>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::VirtualPortfolioPosition>()},
  }}, {{
    "\67\0\0\0\0\0\0\0\12\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PortfolioResponse"
    "account_id"
  }},
};

::uint8_t* PortfolioResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::total_amount_shares(this),
        _Internal::total_amount_shares(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::total_amount_bonds(this),
        _Internal::total_amount_bonds(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::total_amount_etf(this),
        _Internal::total_amount_etf(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::total_amount_currencies(this),
        _Internal::total_amount_currencies(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::total_amount_futures(this),
        _Internal::total_amount_futures(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::expected_yield(this),
        _Internal::expected_yield(this).GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PortfolioPosition positions = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_positions_size()); i < n; i++) {
    const auto& repfield = this->_internal_positions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string account_id = 8;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PortfolioResponse.account_id");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_options = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::total_amount_options(this),
        _Internal::total_amount_options(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::total_amount_sp(this),
        _Internal::total_amount_sp(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::total_amount_portfolio(this),
        _Internal::total_amount_portfolio(this).GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_virtual_positions_size()); i < n; i++) {
    const auto& repfield = this->_internal_virtual_positions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
  return target;
}

::size_t PortfolioResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.PortfolioPosition positions = 7;
  total_size += 1UL * this->_internal_positions_size();
  for (const auto& msg : this->_internal_positions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
  total_size += 1UL * this->_internal_virtual_positions_size();
  for (const auto& msg : this->_internal_virtual_positions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string account_id = 8;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_shares_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_bonds_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_etf_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_currencies_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_futures_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expected_yield_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_options = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_options_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_sp_);
    }

  }
  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
  if (cached_has_bits & 0x00000100u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_amount_portfolio_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PortfolioResponse::_class_data_ = {
    PortfolioResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PortfolioResponse::GetClassData() const {
  return &_class_data_;
}

void PortfolioResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PortfolioResponse*>(&to_msg);
  auto& from = static_cast<const PortfolioResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  _this->_internal_mutable_virtual_positions()->MergeFrom(
      from._internal_virtual_positions());
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_total_amount_shares()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_amount_shares());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_total_amount_bonds()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_amount_bonds());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_total_amount_etf()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_amount_etf());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_total_amount_currencies()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_amount_currencies());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_total_amount_futures()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_amount_futures());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_expected_yield()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_expected_yield());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_total_amount_options()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_amount_options());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_total_amount_sp()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_amount_sp());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_total_amount_portfolio()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
        from._internal_total_amount_portfolio());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioResponse::CopyFrom(const PortfolioResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PortfolioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortfolioResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PortfolioResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PortfolioResponse::InternalSwap(PortfolioResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
  _impl_.virtual_positions_.InternalSwap(&other->_impl_.virtual_positions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_portfolio_)
      + sizeof(PortfolioResponse::_impl_.total_amount_portfolio_)
      - PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_shares_)>(
          reinterpret_cast<char*>(&_impl_.total_amount_shares_),
          reinterpret_cast<char*>(&other->_impl_.total_amount_shares_));
}

::google::protobuf::Metadata PortfolioResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[5]);
}
// ===================================================================

class PositionsRequest::_Internal {
 public:
};

PositionsRequest::PositionsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

PositionsRequest::PositionsRequest(
    ::google::protobuf::Arena* arena,
    const PositionsRequest& from)
    : ::google::protobuf::Message(arena) {
  PositionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void PositionsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionsRequest::~PositionsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 73, 2> PositionsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PositionsRequest"
    "account_id"
  }},
};

::uint8_t* PositionsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsRequest)
  return target;
}

::size_t PositionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsRequest::_class_data_ = {
    PositionsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsRequest::GetClassData() const {
  return &_class_data_;
}

void PositionsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsRequest*>(&to_msg);
  auto& from = static_cast<const PositionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsRequest::CopyFrom(const PositionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsRequest::InternalSwap(PositionsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata PositionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[6]);
}
// ===================================================================

class PositionsResponse::_Internal {
 public:
};

void PositionsResponse::clear_money() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.money_.Clear();
}
void PositionsResponse::clear_blocked() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blocked_.Clear();
}
PositionsResponse::PositionsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : money_{visibility, arena, from.money_},
        blocked_{visibility, arena, from.blocked_},
        securities_{visibility, arena, from.securities_},
        futures_{visibility, arena, from.futures_},
        options_{visibility, arena, from.options_},
        _cached_size_{0} {}

PositionsResponse::PositionsResponse(
    ::google::protobuf::Arena* arena,
    const PositionsResponse& from)
    : ::google::protobuf::Message(arena) {
  PositionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.limits_loading_in_progress_ = from._impl_.limits_loading_in_progress_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : money_{visibility, arena},
        blocked_{visibility, arena},
        securities_{visibility, arena},
        futures_{visibility, arena},
        options_{visibility, arena},
        _cached_size_{0} {}

inline void PositionsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limits_loading_in_progress_ = {};
}
PositionsResponse::~PositionsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.money_.Clear();
  _impl_.blocked_.Clear();
  _impl_.securities_.Clear();
  _impl_.futures_.Clear();
  _impl_.options_.Clear();
  _impl_.limits_loading_in_progress_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 5, 0, 2> PositionsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PositionsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.money_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.blocked_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.securities_)}},
    // bool limits_loading_in_progress = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PositionsResponse, _impl_.limits_loading_in_progress_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.limits_loading_in_progress_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.futures_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.options_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.money_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.blocked_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.securities_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool limits_loading_in_progress = 4;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.limits_loading_in_progress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 5;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.futures_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 6;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.options_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsSecurities>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsFutures>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsOptions>()},
  }}, {{
  }},
};

::uint8_t* PositionsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_money_size()); i < n; i++) {
    const auto& repfield = this->_internal_money().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blocked_size()); i < n; i++) {
    const auto& repfield = this->_internal_blocked().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_securities_size()); i < n; i++) {
    const auto& repfield = this->_internal_securities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // bool limits_loading_in_progress = 4;
  if (this->_internal_limits_loading_in_progress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_limits_loading_in_progress(), target);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_futures_size()); i < n; i++) {
    const auto& repfield = this->_internal_futures().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_options().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsResponse)
  return target;
}

::size_t PositionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
  total_size += 1UL * this->_internal_money_size();
  for (const auto& msg : this->_internal_money()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
  total_size += 1UL * this->_internal_blocked_size();
  for (const auto& msg : this->_internal_blocked()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
  total_size += 1UL * this->_internal_securities_size();
  for (const auto& msg : this->_internal_securities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 5;
  total_size += 1UL * this->_internal_futures_size();
  for (const auto& msg : this->_internal_futures()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 6;
  total_size += 1UL * this->_internal_options_size();
  for (const auto& msg : this->_internal_options()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bool limits_loading_in_progress = 4;
  if (this->_internal_limits_loading_in_progress() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsResponse::_class_data_ = {
    PositionsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsResponse::GetClassData() const {
  return &_class_data_;
}

void PositionsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsResponse*>(&to_msg);
  auto& from = static_cast<const PositionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_money()->MergeFrom(
      from._internal_money());
  _this->_internal_mutable_blocked()->MergeFrom(
      from._internal_blocked());
  _this->_internal_mutable_securities()->MergeFrom(
      from._internal_securities());
  _this->_internal_mutable_futures()->MergeFrom(
      from._internal_futures());
  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (from._internal_limits_loading_in_progress() != 0) {
    _this->_internal_set_limits_loading_in_progress(from._internal_limits_loading_in_progress());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsResponse::CopyFrom(const PositionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsResponse::InternalSwap(PositionsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.money_.InternalSwap(&other->_impl_.money_);
  _impl_.blocked_.InternalSwap(&other->_impl_.blocked_);
  _impl_.securities_.InternalSwap(&other->_impl_.securities_);
  _impl_.futures_.InternalSwap(&other->_impl_.futures_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
        swap(_impl_.limits_loading_in_progress_, other->_impl_.limits_loading_in_progress_);
}

::google::protobuf::Metadata PositionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[7]);
}
// ===================================================================

class WithdrawLimitsRequest::_Internal {
 public:
};

WithdrawLimitsRequest::WithdrawLimitsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

WithdrawLimitsRequest::WithdrawLimitsRequest(
    ::google::protobuf::Arena* arena,
    const WithdrawLimitsRequest& from)
    : ::google::protobuf::Message(arena) {
  WithdrawLimitsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void WithdrawLimitsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WithdrawLimitsRequest::~WithdrawLimitsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WithdrawLimitsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WithdrawLimitsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WithdrawLimitsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 78, 2> WithdrawLimitsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WithdrawLimitsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WithdrawLimitsRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest"
    "account_id"
  }},
};

::uint8_t* WithdrawLimitsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
  return target;
}

::size_t WithdrawLimitsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WithdrawLimitsRequest::_class_data_ = {
    WithdrawLimitsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WithdrawLimitsRequest::GetClassData() const {
  return &_class_data_;
}

void WithdrawLimitsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WithdrawLimitsRequest*>(&to_msg);
  auto& from = static_cast<const WithdrawLimitsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WithdrawLimitsRequest::CopyFrom(const WithdrawLimitsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WithdrawLimitsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WithdrawLimitsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WithdrawLimitsRequest::InternalSwap(WithdrawLimitsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata WithdrawLimitsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[8]);
}
// ===================================================================

class WithdrawLimitsResponse::_Internal {
 public:
};

void WithdrawLimitsResponse::clear_money() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.money_.Clear();
}
void WithdrawLimitsResponse::clear_blocked() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blocked_.Clear();
}
void WithdrawLimitsResponse::clear_blocked_guarantee() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blocked_guarantee_.Clear();
}
WithdrawLimitsResponse::WithdrawLimitsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : money_{visibility, arena, from.money_},
        blocked_{visibility, arena, from.blocked_},
        blocked_guarantee_{visibility, arena, from.blocked_guarantee_},
        _cached_size_{0} {}

WithdrawLimitsResponse::WithdrawLimitsResponse(
    ::google::protobuf::Arena* arena,
    const WithdrawLimitsResponse& from)
    : ::google::protobuf::Message(arena) {
  WithdrawLimitsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : money_{visibility, arena},
        blocked_{visibility, arena},
        blocked_guarantee_{visibility, arena},
        _cached_size_{0} {}

inline void WithdrawLimitsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WithdrawLimitsResponse::~WithdrawLimitsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WithdrawLimitsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WithdrawLimitsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.money_.Clear();
  _impl_.blocked_.Clear();
  _impl_.blocked_guarantee_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WithdrawLimitsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> WithdrawLimitsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WithdrawLimitsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.money_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_guarantee_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.money_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_guarantee_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
  }}, {{
  }},
};

::uint8_t* WithdrawLimitsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_money_size()); i < n; i++) {
    const auto& repfield = this->_internal_money().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blocked_size()); i < n; i++) {
    const auto& repfield = this->_internal_blocked().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blocked_guarantee_size()); i < n; i++) {
    const auto& repfield = this->_internal_blocked_guarantee().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
  return target;
}

::size_t WithdrawLimitsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue money = 1;
  total_size += 1UL * this->_internal_money_size();
  for (const auto& msg : this->_internal_money()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked = 2;
  total_size += 1UL * this->_internal_blocked_size();
  for (const auto& msg : this->_internal_blocked()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
  total_size += 1UL * this->_internal_blocked_guarantee_size();
  for (const auto& msg : this->_internal_blocked_guarantee()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WithdrawLimitsResponse::_class_data_ = {
    WithdrawLimitsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WithdrawLimitsResponse::GetClassData() const {
  return &_class_data_;
}

void WithdrawLimitsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WithdrawLimitsResponse*>(&to_msg);
  auto& from = static_cast<const WithdrawLimitsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_money()->MergeFrom(
      from._internal_money());
  _this->_internal_mutable_blocked()->MergeFrom(
      from._internal_blocked());
  _this->_internal_mutable_blocked_guarantee()->MergeFrom(
      from._internal_blocked_guarantee());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WithdrawLimitsResponse::CopyFrom(const WithdrawLimitsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.WithdrawLimitsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WithdrawLimitsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WithdrawLimitsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WithdrawLimitsResponse::InternalSwap(WithdrawLimitsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.money_.InternalSwap(&other->_impl_.money_);
  _impl_.blocked_.InternalSwap(&other->_impl_.blocked_);
  _impl_.blocked_guarantee_.InternalSwap(&other->_impl_.blocked_guarantee_);
}

::google::protobuf::Metadata WithdrawLimitsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[9]);
}
// ===================================================================

class PortfolioPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<PortfolioPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& quantity(const PortfolioPosition* msg);
  static void set_has_quantity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& average_position_price(const PortfolioPosition* msg);
  static void set_has_average_position_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& expected_yield(const PortfolioPosition* msg);
  static void set_has_expected_yield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& current_nkd(const PortfolioPosition* msg);
  static void set_has_current_nkd(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& average_position_price_pt(const PortfolioPosition* msg);
  static void set_has_average_position_price_pt(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& current_price(const PortfolioPosition* msg);
  static void set_has_current_price(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& average_position_price_fifo(const PortfolioPosition* msg);
  static void set_has_average_position_price_fifo(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& quantity_lots(const PortfolioPosition* msg);
  static void set_has_quantity_lots(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& blocked_lots(const PortfolioPosition* msg);
  static void set_has_blocked_lots(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& var_margin(const PortfolioPosition* msg);
  static void set_has_var_margin(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& expected_yield_fifo(const PortfolioPosition* msg);
  static void set_has_expected_yield_fifo(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::Quotation& PortfolioPosition::_Internal::quantity(const PortfolioPosition* msg) {
  return *msg->_impl_.quantity_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioPosition::_Internal::average_position_price(const PortfolioPosition* msg) {
  return *msg->_impl_.average_position_price_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& PortfolioPosition::_Internal::expected_yield(const PortfolioPosition* msg) {
  return *msg->_impl_.expected_yield_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioPosition::_Internal::current_nkd(const PortfolioPosition* msg) {
  return *msg->_impl_.current_nkd_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& PortfolioPosition::_Internal::average_position_price_pt(const PortfolioPosition* msg) {
  return *msg->_impl_.average_position_price_pt_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioPosition::_Internal::current_price(const PortfolioPosition* msg) {
  return *msg->_impl_.current_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioPosition::_Internal::average_position_price_fifo(const PortfolioPosition* msg) {
  return *msg->_impl_.average_position_price_fifo_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& PortfolioPosition::_Internal::quantity_lots(const PortfolioPosition* msg) {
  return *msg->_impl_.quantity_lots_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& PortfolioPosition::_Internal::blocked_lots(const PortfolioPosition* msg) {
  return *msg->_impl_.blocked_lots_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PortfolioPosition::_Internal::var_margin(const PortfolioPosition* msg) {
  return *msg->_impl_.var_margin_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& PortfolioPosition::_Internal::expected_yield_fifo(const PortfolioPosition* msg) {
  return *msg->_impl_.expected_yield_fifo_;
}
void PortfolioPosition::clear_quantity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.quantity_ != nullptr) _impl_.quantity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PortfolioPosition::clear_average_position_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.average_position_price_ != nullptr) _impl_.average_position_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PortfolioPosition::clear_expected_yield() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expected_yield_ != nullptr) _impl_.expected_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void PortfolioPosition::clear_current_nkd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.current_nkd_ != nullptr) _impl_.current_nkd_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void PortfolioPosition::clear_average_position_price_pt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.average_position_price_pt_ != nullptr) _impl_.average_position_price_pt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void PortfolioPosition::clear_current_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.current_price_ != nullptr) _impl_.current_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void PortfolioPosition::clear_average_position_price_fifo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.average_position_price_fifo_ != nullptr) _impl_.average_position_price_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void PortfolioPosition::clear_quantity_lots() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.quantity_lots_ != nullptr) _impl_.quantity_lots_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void PortfolioPosition::clear_blocked_lots() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.blocked_lots_ != nullptr) _impl_.blocked_lots_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void PortfolioPosition::clear_var_margin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.var_margin_ != nullptr) _impl_.var_margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void PortfolioPosition::clear_expected_yield_fifo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expected_yield_fifo_ != nullptr) _impl_.expected_yield_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
PortfolioPosition::PortfolioPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_) {}

PortfolioPosition::PortfolioPosition(
    ::google::protobuf::Arena* arena,
    const PortfolioPosition& from)
    : ::google::protobuf::Message(arena) {
  PortfolioPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.quantity_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.quantity_)
                : nullptr;
  _impl_.average_position_price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_)
                : nullptr;
  _impl_.expected_yield_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_)
                : nullptr;
  _impl_.current_nkd_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.current_nkd_)
                : nullptr;
  _impl_.average_position_price_pt_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.average_position_price_pt_)
                : nullptr;
  _impl_.current_price_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.current_price_)
                : nullptr;
  _impl_.average_position_price_fifo_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_fifo_)
                : nullptr;
  _impl_.quantity_lots_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.quantity_lots_)
                : nullptr;
  _impl_.blocked_lots_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.blocked_lots_)
                : nullptr;
  _impl_.var_margin_ = (cached_has_bits & 0x00000200u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.var_margin_)
                : nullptr;
  _impl_.expected_yield_fifo_ = (cached_has_bits & 0x00000400u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_fifo_)
                : nullptr;
  _impl_.blocked_ = from._impl_.blocked_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_type_(arena),
        position_uid_(arena),
        instrument_uid_(arena) {}

inline void PortfolioPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, blocked_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::blocked_));
}
PortfolioPosition::~PortfolioPosition() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortfolioPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.figi_.Destroy();
  _impl_.instrument_type_.Destroy();
  _impl_.position_uid_.Destroy();
  _impl_.instrument_uid_.Destroy();
  delete _impl_.quantity_;
  delete _impl_.average_position_price_;
  delete _impl_.expected_yield_;
  delete _impl_.current_nkd_;
  delete _impl_.average_position_price_pt_;
  delete _impl_.current_price_;
  delete _impl_.average_position_price_fifo_;
  delete _impl_.quantity_lots_;
  delete _impl_.blocked_lots_;
  delete _impl_.var_margin_;
  delete _impl_.expected_yield_fifo_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PortfolioPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.average_position_price_ != nullptr);
      _impl_.average_position_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.expected_yield_ != nullptr);
      _impl_.expected_yield_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.current_nkd_ != nullptr);
      _impl_.current_nkd_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.average_position_price_pt_ != nullptr);
      _impl_.average_position_price_pt_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.current_price_ != nullptr);
      _impl_.current_price_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.average_position_price_fifo_ != nullptr);
      _impl_.average_position_price_fifo_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.quantity_lots_ != nullptr);
      _impl_.quantity_lots_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.blocked_lots_ != nullptr);
      _impl_.blocked_lots_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.var_margin_ != nullptr);
      _impl_.var_margin_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.expected_yield_fifo_ != nullptr);
      _impl_.expected_yield_fifo_->Clear();
    }
  }
  _impl_.blocked_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortfolioPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 16, 11, 125, 2> PortfolioPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._has_bits_),
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4165991424,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PortfolioPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.figi_)}},
    // string instrument_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_type_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_nkd = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_nkd_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 4, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_pt_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 5, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 6, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_fifo_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {82, 7, 7, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_lots_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool blocked = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation blocked_lots = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 8, 8, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_lots_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string position_uid = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.position_uid_)}},
    // string instrument_uid = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_uid_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue var_margin = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 9, 9, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.var_margin_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 10, 10, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_fifo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 3;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 4;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 5;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_nkd = 6;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_nkd_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_pt_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 8;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_price_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_fifo_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_lots_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool blocked = 21;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tinkoff.public.invest.api.contract.v1.Quotation blocked_lots = 22;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_lots_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string position_uid = 24;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 25;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue var_margin = 26;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.var_margin_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_fifo_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\67\4\17\0\0\0\0\0\0\0\0\0\0\14\16\0\0\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PortfolioPosition"
    "figi"
    "instrument_type"
    "position_uid"
    "instrument_uid"
  }},
};

::uint8_t* PortfolioPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string figi = 1;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PortfolioPosition.figi");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string instrument_type = 2;
  if (!this->_internal_instrument_type().empty()) {
    const std::string& _s = this->_internal_instrument_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PortfolioPosition.instrument_type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::quantity(this),
        _Internal::quantity(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::average_position_price(this),
        _Internal::average_position_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::expected_yield(this),
        _Internal::expected_yield(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue current_nkd = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::current_nkd(this),
        _Internal::current_nkd(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::average_position_price_pt(this),
        _Internal::average_position_price_pt(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::current_price(this),
        _Internal::current_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::average_position_price_fifo(this),
        _Internal::average_position_price_fifo(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::quantity_lots(this),
        _Internal::quantity_lots(this).GetCachedSize(), target, stream);
  }

  // bool blocked = 21;
  if (this->_internal_blocked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        21, this->_internal_blocked(), target);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation blocked_lots = 22;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        22, _Internal::blocked_lots(this),
        _Internal::blocked_lots(this).GetCachedSize(), target, stream);
  }

  // string position_uid = 24;
  if (!this->_internal_position_uid().empty()) {
    const std::string& _s = this->_internal_position_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PortfolioPosition.position_uid");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // string instrument_uid = 25;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PortfolioPosition.instrument_uid");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue var_margin = 26;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        26, _Internal::var_margin(this),
        _Internal::var_margin(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, _Internal::expected_yield_fifo(this),
        _Internal::expected_yield_fifo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
  return target;
}

::size_t PortfolioPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string figi = 1;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string instrument_type = 2;
  if (!this->_internal_instrument_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_type());
  }

  // string position_uid = 24;
  if (!this->_internal_position_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_position_uid());
  }

  // string instrument_uid = 25;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.quantity_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.average_position_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expected_yield_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_nkd = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.current_nkd_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.average_position_price_pt_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.current_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.average_position_price_fifo_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.quantity_lots_);
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // .tinkoff.public.invest.api.contract.v1.Quotation blocked_lots = 22;
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.blocked_lots_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue var_margin = 26;
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.var_margin_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expected_yield_fifo_);
    }

  }
  // bool blocked = 21;
  if (this->_internal_blocked() != 0) {
    total_size += 3;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PortfolioPosition::_class_data_ = {
    PortfolioPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PortfolioPosition::GetClassData() const {
  return &_class_data_;
}

void PortfolioPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PortfolioPosition*>(&to_msg);
  auto& from = static_cast<const PortfolioPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_quantity()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_quantity());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_average_position_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_average_position_price());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_expected_yield()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_expected_yield());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_current_nkd()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_current_nkd());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_average_position_price_pt()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_average_position_price_pt());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_current_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_current_price());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_average_position_price_fifo()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_average_position_price_fifo());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_quantity_lots()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_quantity_lots());
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_blocked_lots()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_blocked_lots());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_var_margin()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_var_margin());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_expected_yield_fifo()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_expected_yield_fifo());
    }
  }
  if (from._internal_blocked() != 0) {
    _this->_internal_set_blocked(from._internal_blocked());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioPosition::CopyFrom(const PortfolioPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PortfolioPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortfolioPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PortfolioPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PortfolioPosition::InternalSwap(PortfolioPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_)
      + sizeof(PortfolioPosition::_impl_.blocked_)
      - PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata PortfolioPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[10]);
}
// ===================================================================

class VirtualPortfolioPosition::_Internal {
 public:
  using HasBits = decltype(std::declval<VirtualPortfolioPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& quantity(const VirtualPortfolioPosition* msg);
  static void set_has_quantity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& average_position_price(const VirtualPortfolioPosition* msg);
  static void set_has_average_position_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& expected_yield(const VirtualPortfolioPosition* msg);
  static void set_has_expected_yield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& expected_yield_fifo(const VirtualPortfolioPosition* msg);
  static void set_has_expected_yield_fifo(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::google::protobuf::Timestamp& expire_date(const VirtualPortfolioPosition* msg);
  static void set_has_expire_date(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& current_price(const VirtualPortfolioPosition* msg);
  static void set_has_current_price(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& average_position_price_fifo(const VirtualPortfolioPosition* msg);
  static void set_has_average_position_price_fifo(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::Quotation& VirtualPortfolioPosition::_Internal::quantity(const VirtualPortfolioPosition* msg) {
  return *msg->_impl_.quantity_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& VirtualPortfolioPosition::_Internal::average_position_price(const VirtualPortfolioPosition* msg) {
  return *msg->_impl_.average_position_price_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& VirtualPortfolioPosition::_Internal::expected_yield(const VirtualPortfolioPosition* msg) {
  return *msg->_impl_.expected_yield_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& VirtualPortfolioPosition::_Internal::expected_yield_fifo(const VirtualPortfolioPosition* msg) {
  return *msg->_impl_.expected_yield_fifo_;
}
const ::google::protobuf::Timestamp& VirtualPortfolioPosition::_Internal::expire_date(const VirtualPortfolioPosition* msg) {
  return *msg->_impl_.expire_date_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& VirtualPortfolioPosition::_Internal::current_price(const VirtualPortfolioPosition* msg) {
  return *msg->_impl_.current_price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& VirtualPortfolioPosition::_Internal::average_position_price_fifo(const VirtualPortfolioPosition* msg) {
  return *msg->_impl_.average_position_price_fifo_;
}
void VirtualPortfolioPosition::clear_quantity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.quantity_ != nullptr) _impl_.quantity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VirtualPortfolioPosition::clear_average_position_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.average_position_price_ != nullptr) _impl_.average_position_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void VirtualPortfolioPosition::clear_expected_yield() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expected_yield_ != nullptr) _impl_.expected_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void VirtualPortfolioPosition::clear_expected_yield_fifo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expected_yield_fifo_ != nullptr) _impl_.expected_yield_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void VirtualPortfolioPosition::clear_expire_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expire_date_ != nullptr) _impl_.expire_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void VirtualPortfolioPosition::clear_current_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.current_price_ != nullptr) _impl_.current_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void VirtualPortfolioPosition::clear_average_position_price_fifo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.average_position_price_fifo_ != nullptr) _impl_.average_position_price_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
VirtualPortfolioPosition::VirtualPortfolioPosition(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE VirtualPortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_) {}

VirtualPortfolioPosition::VirtualPortfolioPosition(
    ::google::protobuf::Arena* arena,
    const VirtualPortfolioPosition& from)
    : ::google::protobuf::Message(arena) {
  VirtualPortfolioPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.quantity_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.quantity_)
                : nullptr;
  _impl_.average_position_price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_)
                : nullptr;
  _impl_.expected_yield_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_)
                : nullptr;
  _impl_.expected_yield_fifo_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_fifo_)
                : nullptr;
  _impl_.expire_date_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.expire_date_)
                : nullptr;
  _impl_.current_price_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.current_price_)
                : nullptr;
  _impl_.average_position_price_fifo_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_fifo_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE VirtualPortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        position_uid_(arena),
        instrument_uid_(arena),
        figi_(arena),
        instrument_type_(arena) {}

inline void VirtualPortfolioPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, average_position_price_fifo_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::average_position_price_fifo_));
}
VirtualPortfolioPosition::~VirtualPortfolioPosition() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VirtualPortfolioPosition::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.position_uid_.Destroy();
  _impl_.instrument_uid_.Destroy();
  _impl_.figi_.Destroy();
  _impl_.instrument_type_.Destroy();
  delete _impl_.quantity_;
  delete _impl_.average_position_price_;
  delete _impl_.expected_yield_;
  delete _impl_.expected_yield_fifo_;
  delete _impl_.expire_date_;
  delete _impl_.current_price_;
  delete _impl_.average_position_price_fifo_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VirtualPortfolioPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.average_position_price_ != nullptr);
      _impl_.average_position_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.expected_yield_ != nullptr);
      _impl_.expected_yield_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.expected_yield_fifo_ != nullptr);
      _impl_.expected_yield_fifo_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.expire_date_ != nullptr);
      _impl_.expire_date_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.current_price_ != nullptr);
      _impl_.current_price_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.average_position_price_fifo_ != nullptr);
      _impl_.average_position_price_fifo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VirtualPortfolioPosition::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 7, 124, 2> VirtualPortfolioPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VirtualPortfolioPosition_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string position_uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.position_uid_)}},
    // string instrument_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_uid_)}},
    // string figi = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.figi_)}},
    // string instrument_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_type_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.quantity_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_fifo_)}},
    // .google.protobuf.Timestamp expire_date = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expire_date_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.current_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 6, 6, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_fifo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string position_uid = 1;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 2;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 3;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 4;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 5;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.quantity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 6;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 7;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_fifo_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp expire_date = 9;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expire_date_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 10;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.current_price_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_fifo_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\76\14\16\4\17\0\0\0\0\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition"
    "position_uid"
    "instrument_uid"
    "figi"
    "instrument_type"
  }},
};

::uint8_t* VirtualPortfolioPosition::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string position_uid = 1;
  if (!this->_internal_position_uid().empty()) {
    const std::string& _s = this->_internal_position_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition.position_uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string instrument_uid = 2;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition.instrument_uid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string figi = 3;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition.figi");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string instrument_type = 4;
  if (!this->_internal_instrument_type().empty()) {
    const std::string& _s = this->_internal_instrument_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition.instrument_type");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::quantity(this),
        _Internal::quantity(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::average_position_price(this),
        _Internal::average_position_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::expected_yield(this),
        _Internal::expected_yield(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::expected_yield_fifo(this),
        _Internal::expected_yield_fifo(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp expire_date = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::expire_date(this),
        _Internal::expire_date(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::current_price(this),
        _Internal::current_price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::average_position_price_fifo(this),
        _Internal::average_position_price_fifo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
  return target;
}

::size_t VirtualPortfolioPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string position_uid = 1;
  if (!this->_internal_position_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_position_uid());
  }

  // string instrument_uid = 2;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  // string figi = 3;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string instrument_type = 4;
  if (!this->_internal_instrument_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_type());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // .tinkoff.public.invest.api.contract.v1.Quotation quantity = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.quantity_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.average_position_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expected_yield_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expected_yield_fifo_);
    }

    // .google.protobuf.Timestamp expire_date = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expire_date_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue current_price = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.current_price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.average_position_price_fifo_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VirtualPortfolioPosition::_class_data_ = {
    VirtualPortfolioPosition::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VirtualPortfolioPosition::GetClassData() const {
  return &_class_data_;
}

void VirtualPortfolioPosition::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VirtualPortfolioPosition*>(&to_msg);
  auto& from = static_cast<const VirtualPortfolioPosition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_quantity()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_quantity());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_average_position_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_average_position_price());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_expected_yield()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_expected_yield());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_expected_yield_fifo()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_expected_yield_fifo());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_expire_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_expire_date());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_current_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_current_price());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_average_position_price_fifo()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_average_position_price_fifo());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VirtualPortfolioPosition::CopyFrom(const VirtualPortfolioPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.VirtualPortfolioPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VirtualPortfolioPosition::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VirtualPortfolioPosition::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VirtualPortfolioPosition::InternalSwap(VirtualPortfolioPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_fifo_)
      + sizeof(VirtualPortfolioPosition::_impl_.average_position_price_fifo_)
      - PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata VirtualPortfolioPosition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[11]);
}
// ===================================================================

class PositionsSecurities::_Internal {
 public:
};

PositionsSecurities::PositionsSecurities(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSecurities::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : figi_(arena, from.figi_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        instrument_type_(arena, from.instrument_type_),
        _cached_size_{0} {}

PositionsSecurities::PositionsSecurities(
    ::google::protobuf::Arena* arena,
    const PositionsSecurities& from)
    : ::google::protobuf::Message(arena) {
  PositionsSecurities* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, blocked_),
           offsetof(Impl_, exchange_blocked_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::exchange_blocked_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSecurities::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        position_uid_(arena),
        instrument_uid_(arena),
        instrument_type_(arena),
        _cached_size_{0} {}

inline void PositionsSecurities::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           0,
           offsetof(Impl_, exchange_blocked_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::exchange_blocked_));
}
PositionsSecurities::~PositionsSecurities() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsSecurities::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.figi_.Destroy();
  _impl_.position_uid_.Destroy();
  _impl_.instrument_uid_.Destroy();
  _impl_.instrument_type_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsSecurities::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  ::memset(&_impl_.blocked_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.exchange_blocked_) -
      reinterpret_cast<char*>(&_impl_.blocked_)) + sizeof(_impl_.exchange_blocked_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsSecurities::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 111, 2> PositionsSecurities::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    16, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294933472,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionsSecurities_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string instrument_type = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_type_)}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.figi_)}},
    // int64 blocked = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsSecurities, _impl_.blocked_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.blocked_)}},
    // int64 balance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsSecurities, _impl_.balance_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.balance_)}},
    // string position_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.position_uid_)}},
    // string instrument_uid = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 blocked = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 balance = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string position_uid = 4;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.position_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 5;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool exchange_blocked = 11;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.exchange_blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string instrument_type = 16;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\4\0\0\14\16\0\17"
    "tinkoff.public.invest.api.contract.v1.PositionsSecurities"
    "figi"
    "position_uid"
    "instrument_uid"
    "instrument_type"
  }},
};

::uint8_t* PositionsSecurities::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string figi = 1;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsSecurities.figi");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 blocked = 2;
  if (this->_internal_blocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_blocked(), target);
  }

  // int64 balance = 3;
  if (this->_internal_balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_balance(), target);
  }

  // string position_uid = 4;
  if (!this->_internal_position_uid().empty()) {
    const std::string& _s = this->_internal_position_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsSecurities.position_uid");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string instrument_uid = 5;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsSecurities.instrument_uid");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // bool exchange_blocked = 11;
  if (this->_internal_exchange_blocked() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this->_internal_exchange_blocked(), target);
  }

  // string instrument_type = 16;
  if (!this->_internal_instrument_type().empty()) {
    const std::string& _s = this->_internal_instrument_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsSecurities.instrument_type");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
  return target;
}

::size_t PositionsSecurities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string figi = 1;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string position_uid = 4;
  if (!this->_internal_position_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_position_uid());
  }

  // string instrument_uid = 5;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  // string instrument_type = 16;
  if (!this->_internal_instrument_type().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_type());
  }

  // int64 blocked = 2;
  if (this->_internal_blocked() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_blocked());
  }

  // int64 balance = 3;
  if (this->_internal_balance() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_balance());
  }

  // bool exchange_blocked = 11;
  if (this->_internal_exchange_blocked() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsSecurities::_class_data_ = {
    PositionsSecurities::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsSecurities::GetClassData() const {
  return &_class_data_;
}

void PositionsSecurities::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsSecurities*>(&to_msg);
  auto& from = static_cast<const PositionsSecurities&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (from._internal_blocked() != 0) {
    _this->_internal_set_blocked(from._internal_blocked());
  }
  if (from._internal_balance() != 0) {
    _this->_internal_set_balance(from._internal_balance());
  }
  if (from._internal_exchange_blocked() != 0) {
    _this->_internal_set_exchange_blocked(from._internal_exchange_blocked());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsSecurities::CopyFrom(const PositionsSecurities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsSecurities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsSecurities::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsSecurities::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsSecurities::InternalSwap(PositionsSecurities* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.exchange_blocked_)
      + sizeof(PositionsSecurities::_impl_.exchange_blocked_)
      - PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.blocked_)>(
          reinterpret_cast<char*>(&_impl_.blocked_),
          reinterpret_cast<char*>(&other->_impl_.blocked_));
}

::google::protobuf::Metadata PositionsSecurities::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[12]);
}
// ===================================================================

class PositionsFutures::_Internal {
 public:
};

PositionsFutures::PositionsFutures(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsFutures)
}
inline PROTOBUF_NDEBUG_INLINE PositionsFutures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : figi_(arena, from.figi_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        _cached_size_{0} {}

PositionsFutures::PositionsFutures(
    ::google::protobuf::Arena* arena,
    const PositionsFutures& from)
    : ::google::protobuf::Message(arena) {
  PositionsFutures* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, blocked_),
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsFutures)
}
inline PROTOBUF_NDEBUG_INLINE PositionsFutures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        position_uid_(arena),
        instrument_uid_(arena),
        _cached_size_{0} {}

inline void PositionsFutures::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           0,
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));
}
PositionsFutures::~PositionsFutures() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsFutures)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsFutures::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.figi_.Destroy();
  _impl_.position_uid_.Destroy();
  _impl_.instrument_uid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsFutures::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsFutures)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  ::memset(&_impl_.blocked_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.balance_) -
      reinterpret_cast<char*>(&_impl_.blocked_)) + sizeof(_impl_.balance_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsFutures::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 93, 2> PositionsFutures::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionsFutures_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.figi_)}},
    // int64 blocked = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsFutures, _impl_.blocked_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.blocked_)}},
    // int64 balance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsFutures, _impl_.balance_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.balance_)}},
    // string position_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.position_uid_)}},
    // string instrument_uid = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 blocked = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 balance = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string position_uid = 4;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.position_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 5;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\4\0\0\14\16\0\0"
    "tinkoff.public.invest.api.contract.v1.PositionsFutures"
    "figi"
    "position_uid"
    "instrument_uid"
  }},
};

::uint8_t* PositionsFutures::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsFutures)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string figi = 1;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsFutures.figi");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 blocked = 2;
  if (this->_internal_blocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_blocked(), target);
  }

  // int64 balance = 3;
  if (this->_internal_balance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_balance(), target);
  }

  // string position_uid = 4;
  if (!this->_internal_position_uid().empty()) {
    const std::string& _s = this->_internal_position_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsFutures.position_uid");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string instrument_uid = 5;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsFutures.instrument_uid");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsFutures)
  return target;
}

::size_t PositionsFutures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsFutures)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string figi = 1;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string position_uid = 4;
  if (!this->_internal_position_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_position_uid());
  }

  // string instrument_uid = 5;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  // int64 blocked = 2;
  if (this->_internal_blocked() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_blocked());
  }

  // int64 balance = 3;
  if (this->_internal_balance() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_balance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsFutures::_class_data_ = {
    PositionsFutures::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsFutures::GetClassData() const {
  return &_class_data_;
}

void PositionsFutures::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsFutures*>(&to_msg);
  auto& from = static_cast<const PositionsFutures&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsFutures)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (from._internal_blocked() != 0) {
    _this->_internal_set_blocked(from._internal_blocked());
  }
  if (from._internal_balance() != 0) {
    _this->_internal_set_balance(from._internal_balance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsFutures::CopyFrom(const PositionsFutures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsFutures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsFutures::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsFutures::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsFutures::InternalSwap(PositionsFutures* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.balance_)
      + sizeof(PositionsFutures::_impl_.balance_)
      - PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.blocked_)>(
          reinterpret_cast<char*>(&_impl_.blocked_),
          reinterpret_cast<char*>(&other->_impl_.blocked_));
}

::google::protobuf::Metadata PositionsFutures::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[13]);
}
// ===================================================================

class PositionsOptions::_Internal {
 public:
};

PositionsOptions::PositionsOptions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsOptions)
}
inline PROTOBUF_NDEBUG_INLINE PositionsOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        _cached_size_{0} {}

PositionsOptions::PositionsOptions(
    ::google::protobuf::Arena* arena,
    const PositionsOptions& from)
    : ::google::protobuf::Message(arena) {
  PositionsOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, blocked_),
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsOptions)
}
inline PROTOBUF_NDEBUG_INLINE PositionsOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : position_uid_(arena),
        instrument_uid_(arena),
        _cached_size_{0} {}

inline void PositionsOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           0,
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));
}
PositionsOptions::~PositionsOptions() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsOptions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsOptions::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.position_uid_.Destroy();
  _impl_.instrument_uid_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsOptions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  ::memset(&_impl_.blocked_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.balance_) -
      reinterpret_cast<char*>(&_impl_.blocked_)) + sizeof(_impl_.balance_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsOptions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 89, 2> PositionsOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    21, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293917692,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionsOptions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string position_uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.position_uid_)}},
    // string instrument_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.instrument_uid_)}},
    // int64 blocked = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsOptions, _impl_.blocked_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.blocked_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 balance = 21;
    {::_pbi::TcParser::FastV64S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.balance_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string position_uid = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.position_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 blocked = 11;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 balance = 21;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\66\14\16\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PositionsOptions"
    "position_uid"
    "instrument_uid"
  }},
};

::uint8_t* PositionsOptions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string position_uid = 1;
  if (!this->_internal_position_uid().empty()) {
    const std::string& _s = this->_internal_position_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsOptions.position_uid");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string instrument_uid = 2;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsOptions.instrument_uid");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 blocked = 11;
  if (this->_internal_blocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_blocked(), target);
  }

  // int64 balance = 21;
  if (this->_internal_balance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        21, this->_internal_balance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsOptions)
  return target;
}

::size_t PositionsOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string position_uid = 1;
  if (!this->_internal_position_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_position_uid());
  }

  // string instrument_uid = 2;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  // int64 blocked = 11;
  if (this->_internal_blocked() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_blocked());
  }

  // int64 balance = 21;
  if (this->_internal_balance() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_balance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsOptions::_class_data_ = {
    PositionsOptions::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsOptions::GetClassData() const {
  return &_class_data_;
}

void PositionsOptions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsOptions*>(&to_msg);
  auto& from = static_cast<const PositionsOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (from._internal_blocked() != 0) {
    _this->_internal_set_blocked(from._internal_blocked());
  }
  if (from._internal_balance() != 0) {
    _this->_internal_set_balance(from._internal_balance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsOptions::CopyFrom(const PositionsOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsOptions::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsOptions::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsOptions::InternalSwap(PositionsOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.balance_)
      + sizeof(PositionsOptions::_impl_.balance_)
      - PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.blocked_)>(
          reinterpret_cast<char*>(&_impl_.blocked_),
          reinterpret_cast<char*>(&other->_impl_.blocked_));
}

::google::protobuf::Metadata PositionsOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[14]);
}
// ===================================================================

class BrokerReportRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportRequest, _impl_._oneof_case_);
  static const ::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest& generate_broker_report_request(const BrokerReportRequest* msg);
  static const ::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest& get_broker_report_request(const BrokerReportRequest* msg);
};

const ::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest& BrokerReportRequest::_Internal::generate_broker_report_request(const BrokerReportRequest* msg) {
  return *msg->_impl_.payload_.generate_broker_report_request_;
}
const ::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest& BrokerReportRequest::_Internal::get_broker_report_request(const BrokerReportRequest* msg) {
  return *msg->_impl_.payload_.get_broker_report_request_;
}
void BrokerReportRequest::set_allocated_generate_broker_report_request(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest* generate_broker_report_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_broker_report_request) {
    ::google::protobuf::Arena* submessage_arena = generate_broker_report_request->GetArena();
    if (message_arena != submessage_arena) {
      generate_broker_report_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_broker_report_request, submessage_arena);
    }
    set_has_generate_broker_report_request();
    _impl_.payload_.generate_broker_report_request_ = generate_broker_report_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.BrokerReportRequest.generate_broker_report_request)
}
void BrokerReportRequest::set_allocated_get_broker_report_request(::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest* get_broker_report_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_broker_report_request) {
    ::google::protobuf::Arena* submessage_arena = get_broker_report_request->GetArena();
    if (message_arena != submessage_arena) {
      get_broker_report_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_broker_report_request, submessage_arena);
    }
    set_has_get_broker_report_request();
    _impl_.payload_.get_broker_report_request_ = get_broker_report_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.BrokerReportRequest.get_broker_report_request)
}
BrokerReportRequest::BrokerReportRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BrokerReportRequest::BrokerReportRequest(
    ::google::protobuf::Arena* arena,
    const BrokerReportRequest& from)
    : ::google::protobuf::Message(arena) {
  BrokerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateBrokerReportRequest:
        _impl_.payload_.generate_broker_report_request_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest>(arena, *from._impl_.payload_.generate_broker_report_request_);
        break;
      case kGetBrokerReportRequest:
        _impl_.payload_.get_broker_report_request_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest>(arena, *from._impl_.payload_.get_broker_report_request_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BrokerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrokerReportRequest::~BrokerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BrokerReportRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void BrokerReportRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kGenerateBrokerReportRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_broker_report_request_;
      }
      break;
    }
    case kGetBrokerReportRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_broker_report_request_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void BrokerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BrokerReportRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> BrokerReportRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BrokerReportRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest generate_broker_report_request = 1;
    {PROTOBUF_FIELD_OFFSET(BrokerReportRequest, _impl_.payload_.generate_broker_report_request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest get_broker_report_request = 2;
    {PROTOBUF_FIELD_OFFSET(BrokerReportRequest, _impl_.payload_.get_broker_report_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest>()},
  }}, {{
  }},
};

::uint8_t* BrokerReportRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (payload_case()) {
    case kGenerateBrokerReportRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::generate_broker_report_request(this),
          _Internal::generate_broker_report_request(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetBrokerReportRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::get_broker_report_request(this),
          _Internal::get_broker_report_request(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  return target;
}

::size_t BrokerReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest generate_broker_report_request = 1;
    case kGenerateBrokerReportRequest: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.generate_broker_report_request_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest get_broker_report_request = 2;
    case kGetBrokerReportRequest: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.get_broker_report_request_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BrokerReportRequest::_class_data_ = {
    BrokerReportRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BrokerReportRequest::GetClassData() const {
  return &_class_data_;
}

void BrokerReportRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BrokerReportRequest*>(&to_msg);
  auto& from = static_cast<const BrokerReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kGenerateBrokerReportRequest: {
      _this->_internal_mutable_generate_broker_report_request()->::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportRequest::MergeFrom(
          from._internal_generate_broker_report_request());
      break;
    }
    case kGetBrokerReportRequest: {
      _this->_internal_mutable_get_broker_report_request()->::tinkoff::public::invest::api::contract::v1::GetBrokerReportRequest::MergeFrom(
          from._internal_get_broker_report_request());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrokerReportRequest::CopyFrom(const BrokerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.BrokerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BrokerReportRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BrokerReportRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BrokerReportRequest::InternalSwap(BrokerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BrokerReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[15]);
}
// ===================================================================

class BrokerReportResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::BrokerReportResponse, _impl_._oneof_case_);
  static const ::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse& generate_broker_report_response(const BrokerReportResponse* msg);
  static const ::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse& get_broker_report_response(const BrokerReportResponse* msg);
};

const ::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse& BrokerReportResponse::_Internal::generate_broker_report_response(const BrokerReportResponse* msg) {
  return *msg->_impl_.payload_.generate_broker_report_response_;
}
const ::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse& BrokerReportResponse::_Internal::get_broker_report_response(const BrokerReportResponse* msg) {
  return *msg->_impl_.payload_.get_broker_report_response_;
}
void BrokerReportResponse::set_allocated_generate_broker_report_response(::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse* generate_broker_report_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_broker_report_response) {
    ::google::protobuf::Arena* submessage_arena = generate_broker_report_response->GetArena();
    if (message_arena != submessage_arena) {
      generate_broker_report_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_broker_report_response, submessage_arena);
    }
    set_has_generate_broker_report_response();
    _impl_.payload_.generate_broker_report_response_ = generate_broker_report_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.BrokerReportResponse.generate_broker_report_response)
}
void BrokerReportResponse::set_allocated_get_broker_report_response(::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse* get_broker_report_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_broker_report_response) {
    ::google::protobuf::Arena* submessage_arena = get_broker_report_response->GetArena();
    if (message_arena != submessage_arena) {
      get_broker_report_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_broker_report_response, submessage_arena);
    }
    set_has_get_broker_report_response();
    _impl_.payload_.get_broker_report_response_ = get_broker_report_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.BrokerReportResponse.get_broker_report_response)
}
BrokerReportResponse::BrokerReportResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BrokerReportResponse::BrokerReportResponse(
    ::google::protobuf::Arena* arena,
    const BrokerReportResponse& from)
    : ::google::protobuf::Message(arena) {
  BrokerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateBrokerReportResponse:
        _impl_.payload_.generate_broker_report_response_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse>(arena, *from._impl_.payload_.generate_broker_report_response_);
        break;
      case kGetBrokerReportResponse:
        _impl_.payload_.get_broker_report_response_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse>(arena, *from._impl_.payload_.get_broker_report_response_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BrokerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrokerReportResponse::~BrokerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BrokerReportResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void BrokerReportResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kGenerateBrokerReportResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_broker_report_response_;
      }
      break;
    }
    case kGetBrokerReportResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_broker_report_response_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void BrokerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BrokerReportResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> BrokerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BrokerReportResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse generate_broker_report_response = 1;
    {PROTOBUF_FIELD_OFFSET(BrokerReportResponse, _impl_.payload_.generate_broker_report_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse get_broker_report_response = 2;
    {PROTOBUF_FIELD_OFFSET(BrokerReportResponse, _impl_.payload_.get_broker_report_response_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse>()},
  }}, {{
  }},
};

::uint8_t* BrokerReportResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (payload_case()) {
    case kGenerateBrokerReportResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::generate_broker_report_response(this),
          _Internal::generate_broker_report_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetBrokerReportResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::get_broker_report_response(this),
          _Internal::get_broker_report_response(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  return target;
}

::size_t BrokerReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse generate_broker_report_response = 1;
    case kGenerateBrokerReportResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.generate_broker_report_response_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse get_broker_report_response = 2;
    case kGetBrokerReportResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.get_broker_report_response_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BrokerReportResponse::_class_data_ = {
    BrokerReportResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BrokerReportResponse::GetClassData() const {
  return &_class_data_;
}

void BrokerReportResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BrokerReportResponse*>(&to_msg);
  auto& from = static_cast<const BrokerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kGenerateBrokerReportResponse: {
      _this->_internal_mutable_generate_broker_report_response()->::tinkoff::public::invest::api::contract::v1::GenerateBrokerReportResponse::MergeFrom(
          from._internal_generate_broker_report_response());
      break;
    }
    case kGetBrokerReportResponse: {
      _this->_internal_mutable_get_broker_report_response()->::tinkoff::public::invest::api::contract::v1::GetBrokerReportResponse::MergeFrom(
          from._internal_get_broker_report_response());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrokerReportResponse::CopyFrom(const BrokerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.BrokerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BrokerReportResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BrokerReportResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BrokerReportResponse::InternalSwap(BrokerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BrokerReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[16]);
}
// ===================================================================

class GenerateBrokerReportRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateBrokerReportRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& from(const GenerateBrokerReportRequest* msg);
  static void set_has_from(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& to(const GenerateBrokerReportRequest* msg);
  static void set_has_to(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& GenerateBrokerReportRequest::_Internal::from(const GenerateBrokerReportRequest* msg) {
  return *msg->_impl_.from_;
}
const ::google::protobuf::Timestamp& GenerateBrokerReportRequest::_Internal::to(const GenerateBrokerReportRequest* msg) {
  return *msg->_impl_.to_;
}
void GenerateBrokerReportRequest::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GenerateBrokerReportRequest::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GenerateBrokerReportRequest::GenerateBrokerReportRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_) {}

GenerateBrokerReportRequest::GenerateBrokerReportRequest(
    ::google::protobuf::Arena* arena,
    const GenerateBrokerReportRequest& from)
    : ::google::protobuf::Message(arena) {
  GenerateBrokerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.from_)
                : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.to_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena) {}

inline void GenerateBrokerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, to_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::to_));
}
GenerateBrokerReportRequest::~GenerateBrokerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateBrokerReportRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  delete _impl_.from_;
  delete _impl_.to_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateBrokerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateBrokerReportRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 84, 2> GenerateBrokerReportRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GenerateBrokerReportRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.account_id_)}},
    // .google.protobuf.Timestamp from = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.to_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 2;
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 3;
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\101\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest"
    "account_id"
  }},
};

::uint8_t* GenerateBrokerReportRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp from = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp to = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
  return target;
}

::size_t GenerateBrokerReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp from = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.from_);
    }

    // .google.protobuf.Timestamp to = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.to_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateBrokerReportRequest::_class_data_ = {
    GenerateBrokerReportRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateBrokerReportRequest::GetClassData() const {
  return &_class_data_;
}

void GenerateBrokerReportRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateBrokerReportRequest*>(&to_msg);
  auto& from = static_cast<const GenerateBrokerReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_from()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_from());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_to()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_to());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateBrokerReportRequest::CopyFrom(const GenerateBrokerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateBrokerReportRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateBrokerReportRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateBrokerReportRequest::InternalSwap(GenerateBrokerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.to_)
      + sizeof(GenerateBrokerReportRequest::_impl_.to_)
      - PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GenerateBrokerReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[17]);
}
// ===================================================================

class GenerateBrokerReportResponse::_Internal {
 public:
};

GenerateBrokerReportResponse::GenerateBrokerReportResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GenerateBrokerReportResponse::GenerateBrokerReportResponse(
    ::google::protobuf::Arena* arena,
    const GenerateBrokerReportResponse& from)
    : ::google::protobuf::Message(arena) {
  GenerateBrokerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GenerateBrokerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenerateBrokerReportResponse::~GenerateBrokerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateBrokerReportResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.task_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateBrokerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateBrokerReportResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 82, 2> GenerateBrokerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenerateBrokerReportResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportResponse, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportResponse, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\102\7\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse"
    "task_id"
  }},
};

::uint8_t* GenerateBrokerReportResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    const std::string& _s = this->_internal_task_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse.task_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
  return target;
}

::size_t GenerateBrokerReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateBrokerReportResponse::_class_data_ = {
    GenerateBrokerReportResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateBrokerReportResponse::GetClassData() const {
  return &_class_data_;
}

void GenerateBrokerReportResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateBrokerReportResponse*>(&to_msg);
  auto& from = static_cast<const GenerateBrokerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateBrokerReportResponse::CopyFrom(const GenerateBrokerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GenerateBrokerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateBrokerReportResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateBrokerReportResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateBrokerReportResponse::InternalSwap(GenerateBrokerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
}

::google::protobuf::Metadata GenerateBrokerReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[18]);
}
// ===================================================================

class GetBrokerReportRequest::_Internal {
 public:
};

GetBrokerReportRequest::GetBrokerReportRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GetBrokerReportRequest::GetBrokerReportRequest(
    ::google::protobuf::Arena* arena,
    const GetBrokerReportRequest& from)
    : ::google::protobuf::Message(arena) {
  GetBrokerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.page_ = from._impl_.page_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GetBrokerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_ = {};
}
GetBrokerReportRequest::~GetBrokerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetBrokerReportRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.task_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetBrokerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.page_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetBrokerReportRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 76, 2> GetBrokerReportRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetBrokerReportRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 page = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportRequest, _impl_.page_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.page_)}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page = 2;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\74\7\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest"
    "task_id"
  }},
};

::uint8_t* GetBrokerReportRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    const std::string& _s = this->_internal_task_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest.task_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_page(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
  return target;
}

::size_t GetBrokerReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task_id());
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetBrokerReportRequest::_class_data_ = {
    GetBrokerReportRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetBrokerReportRequest::GetClassData() const {
  return &_class_data_;
}

void GetBrokerReportRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetBrokerReportRequest*>(&to_msg);
  auto& from = static_cast<const GetBrokerReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_page() != 0) {
    _this->_internal_set_page(from._internal_page());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBrokerReportRequest::CopyFrom(const GetBrokerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetBrokerReportRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetBrokerReportRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetBrokerReportRequest::InternalSwap(GetBrokerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
        swap(_impl_.page_, other->_impl_.page_);
}

::google::protobuf::Metadata GetBrokerReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[19]);
}
// ===================================================================

class GetBrokerReportResponse::_Internal {
 public:
};

GetBrokerReportResponse::GetBrokerReportResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : broker_report_{visibility, arena, from.broker_report_},
        _cached_size_{0} {}

GetBrokerReportResponse::GetBrokerReportResponse(
    ::google::protobuf::Arena* arena,
    const GetBrokerReportResponse& from)
    : ::google::protobuf::Message(arena) {
  GetBrokerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, itemscount_),
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : broker_report_{visibility, arena},
        _cached_size_{0} {}

inline void GetBrokerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           0,
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));
}
GetBrokerReportResponse::~GetBrokerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetBrokerReportResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetBrokerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.broker_report_.Clear();
  ::memset(&_impl_.itemscount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_) -
      reinterpret_cast<char*>(&_impl_.itemscount_)) + sizeof(_impl_.page_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetBrokerReportResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> GetBrokerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetBrokerReportResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 page = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportResponse, _impl_.page_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.page_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.BrokerReport broker_report = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.broker_report_)}},
    // int32 itemsCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportResponse, _impl_.itemscount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.itemscount_)}},
    // int32 pagesCount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportResponse, _impl_.pagescount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.pagescount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.BrokerReport broker_report = 1;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.broker_report_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 itemsCount = 2;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.itemscount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 pagesCount = 3;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.pagescount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page = 4;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::BrokerReport>()},
  }}, {{
  }},
};

::uint8_t* GetBrokerReportResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.BrokerReport broker_report = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_broker_report_size()); i < n; i++) {
    const auto& repfield = this->_internal_broker_report().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 itemsCount = 2;
  if (this->_internal_itemscount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_itemscount(), target);
  }

  // int32 pagesCount = 3;
  if (this->_internal_pagescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_pagescount(), target);
  }

  // int32 page = 4;
  if (this->_internal_page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_page(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
  return target;
}

::size_t GetBrokerReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.BrokerReport broker_report = 1;
  total_size += 1UL * this->_internal_broker_report_size();
  for (const auto& msg : this->_internal_broker_report()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 itemsCount = 2;
  if (this->_internal_itemscount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_itemscount());
  }

  // int32 pagesCount = 3;
  if (this->_internal_pagescount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_pagescount());
  }

  // int32 page = 4;
  if (this->_internal_page() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetBrokerReportResponse::_class_data_ = {
    GetBrokerReportResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetBrokerReportResponse::GetClassData() const {
  return &_class_data_;
}

void GetBrokerReportResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetBrokerReportResponse*>(&to_msg);
  auto& from = static_cast<const GetBrokerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_broker_report()->MergeFrom(
      from._internal_broker_report());
  if (from._internal_itemscount() != 0) {
    _this->_internal_set_itemscount(from._internal_itemscount());
  }
  if (from._internal_pagescount() != 0) {
    _this->_internal_set_pagescount(from._internal_pagescount());
  }
  if (from._internal_page() != 0) {
    _this->_internal_set_page(from._internal_page());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBrokerReportResponse::CopyFrom(const GetBrokerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetBrokerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetBrokerReportResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetBrokerReportResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetBrokerReportResponse::InternalSwap(GetBrokerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.broker_report_.InternalSwap(&other->_impl_.broker_report_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.page_)
      + sizeof(GetBrokerReportResponse::_impl_.page_)
      - PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.itemscount_)>(
          reinterpret_cast<char*>(&_impl_.itemscount_),
          reinterpret_cast<char*>(&other->_impl_.itemscount_));
}

::google::protobuf::Metadata GetBrokerReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[20]);
}
// ===================================================================

class BrokerReport::_Internal {
 public:
  using HasBits = decltype(std::declval<BrokerReport>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& trade_datetime(const BrokerReport* msg);
  static void set_has_trade_datetime(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& price(const BrokerReport* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& order_amount(const BrokerReport* msg);
  static void set_has_order_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& aci_value(const BrokerReport* msg);
  static void set_has_aci_value(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& total_order_amount(const BrokerReport* msg);
  static void set_has_total_order_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& broker_commission(const BrokerReport* msg);
  static void set_has_broker_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& exchange_commission(const BrokerReport* msg);
  static void set_has_exchange_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& exchange_clearing_commission(const BrokerReport* msg);
  static void set_has_exchange_clearing_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& repo_rate(const BrokerReport* msg);
  static void set_has_repo_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::google::protobuf::Timestamp& clear_value_date(const BrokerReport* msg);
  static void set_has_clear_value_date(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::google::protobuf::Timestamp& sec_value_date(const BrokerReport* msg);
  static void set_has_sec_value_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

const ::google::protobuf::Timestamp& BrokerReport::_Internal::trade_datetime(const BrokerReport* msg) {
  return *msg->_impl_.trade_datetime_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& BrokerReport::_Internal::price(const BrokerReport* msg) {
  return *msg->_impl_.price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& BrokerReport::_Internal::order_amount(const BrokerReport* msg) {
  return *msg->_impl_.order_amount_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& BrokerReport::_Internal::aci_value(const BrokerReport* msg) {
  return *msg->_impl_.aci_value_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& BrokerReport::_Internal::total_order_amount(const BrokerReport* msg) {
  return *msg->_impl_.total_order_amount_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& BrokerReport::_Internal::broker_commission(const BrokerReport* msg) {
  return *msg->_impl_.broker_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& BrokerReport::_Internal::exchange_commission(const BrokerReport* msg) {
  return *msg->_impl_.exchange_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& BrokerReport::_Internal::exchange_clearing_commission(const BrokerReport* msg) {
  return *msg->_impl_.exchange_clearing_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& BrokerReport::_Internal::repo_rate(const BrokerReport* msg) {
  return *msg->_impl_.repo_rate_;
}
const ::google::protobuf::Timestamp& BrokerReport::_Internal::clear_value_date(const BrokerReport* msg) {
  return *msg->_impl_.clear_value_date_;
}
const ::google::protobuf::Timestamp& BrokerReport::_Internal::sec_value_date(const BrokerReport* msg) {
  return *msg->_impl_.sec_value_date_;
}
void BrokerReport::clear_trade_datetime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.trade_datetime_ != nullptr) _impl_.trade_datetime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BrokerReport::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void BrokerReport::clear_order_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.order_amount_ != nullptr) _impl_.order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void BrokerReport::clear_aci_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.aci_value_ != nullptr) _impl_.aci_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void BrokerReport::clear_total_order_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.total_order_amount_ != nullptr) _impl_.total_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void BrokerReport::clear_broker_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.broker_commission_ != nullptr) _impl_.broker_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void BrokerReport::clear_exchange_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.exchange_commission_ != nullptr) _impl_.exchange_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void BrokerReport::clear_exchange_clearing_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.exchange_clearing_commission_ != nullptr) _impl_.exchange_clearing_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void BrokerReport::clear_repo_rate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.repo_rate_ != nullptr) _impl_.repo_rate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void BrokerReport::clear_clear_value_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.clear_value_date_ != nullptr) _impl_.clear_value_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void BrokerReport::clear_sec_value_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.sec_value_date_ != nullptr) _impl_.sec_value_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
BrokerReport::BrokerReport(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.BrokerReport)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_),
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        execute_sign_(arena, from.execute_sign_),
        exchange_(arena, from.exchange_),
        class_code_(arena, from.class_code_),
        direction_(arena, from.direction_),
        name_(arena, from.name_),
        ticker_(arena, from.ticker_),
        party_(arena, from.party_),
        broker_status_(arena, from.broker_status_),
        separate_agreement_type_(arena, from.separate_agreement_type_),
        separate_agreement_number_(arena, from.separate_agreement_number_),
        separate_agreement_date_(arena, from.separate_agreement_date_),
        delivery_type_(arena, from.delivery_type_) {}

BrokerReport::BrokerReport(
    ::google::protobuf::Arena* arena,
    const BrokerReport& from)
    : ::google::protobuf::Message(arena) {
  BrokerReport* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trade_datetime_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.trade_datetime_)
                : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_)
                : nullptr;
  _impl_.order_amount_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.order_amount_)
                : nullptr;
  _impl_.aci_value_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.aci_value_)
                : nullptr;
  _impl_.total_order_amount_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_order_amount_)
                : nullptr;
  _impl_.broker_commission_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.broker_commission_)
                : nullptr;
  _impl_.exchange_commission_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.exchange_commission_)
                : nullptr;
  _impl_.exchange_clearing_commission_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.exchange_clearing_commission_)
                : nullptr;
  _impl_.repo_rate_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.repo_rate_)
                : nullptr;
  _impl_.clear_value_date_ = (cached_has_bits & 0x00000200u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.clear_value_date_)
                : nullptr;
  _impl_.sec_value_date_ = (cached_has_bits & 0x00000400u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.sec_value_date_)
                : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.BrokerReport)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena),
        order_id_(arena),
        figi_(arena),
        execute_sign_(arena),
        exchange_(arena),
        class_code_(arena),
        direction_(arena),
        name_(arena),
        ticker_(arena),
        party_(arena),
        broker_status_(arena),
        separate_agreement_type_(arena),
        separate_agreement_number_(arena),
        separate_agreement_date_(arena),
        delivery_type_(arena) {}

inline void BrokerReport::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trade_datetime_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, trade_datetime_) +
               sizeof(Impl_::quantity_));
}
BrokerReport::~BrokerReport() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.BrokerReport)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BrokerReport::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.trade_id_.Destroy();
  _impl_.order_id_.Destroy();
  _impl_.figi_.Destroy();
  _impl_.execute_sign_.Destroy();
  _impl_.exchange_.Destroy();
  _impl_.class_code_.Destroy();
  _impl_.direction_.Destroy();
  _impl_.name_.Destroy();
  _impl_.ticker_.Destroy();
  _impl_.party_.Destroy();
  _impl_.broker_status_.Destroy();
  _impl_.separate_agreement_type_.Destroy();
  _impl_.separate_agreement_number_.Destroy();
  _impl_.separate_agreement_date_.Destroy();
  _impl_.delivery_type_.Destroy();
  delete _impl_.trade_datetime_;
  delete _impl_.price_;
  delete _impl_.order_amount_;
  delete _impl_.aci_value_;
  delete _impl_.total_order_amount_;
  delete _impl_.broker_commission_;
  delete _impl_.exchange_commission_;
  delete _impl_.exchange_clearing_commission_;
  delete _impl_.repo_rate_;
  delete _impl_.clear_value_date_;
  delete _impl_.sec_value_date_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BrokerReport::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.BrokerReport)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.execute_sign_.ClearToEmpty();
  _impl_.exchange_.ClearToEmpty();
  _impl_.class_code_.ClearToEmpty();
  _impl_.direction_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.ticker_.ClearToEmpty();
  _impl_.party_.ClearToEmpty();
  _impl_.broker_status_.ClearToEmpty();
  _impl_.separate_agreement_type_.ClearToEmpty();
  _impl_.separate_agreement_number_.ClearToEmpty();
  _impl_.separate_agreement_date_.ClearToEmpty();
  _impl_.delivery_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.trade_datetime_ != nullptr);
      _impl_.trade_datetime_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.order_amount_ != nullptr);
      _impl_.order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.aci_value_ != nullptr);
      _impl_.aci_value_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.total_order_amount_ != nullptr);
      _impl_.total_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.broker_commission_ != nullptr);
      _impl_.broker_commission_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.exchange_commission_ != nullptr);
      _impl_.exchange_commission_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.exchange_clearing_commission_ != nullptr);
      _impl_.exchange_clearing_commission_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.repo_rate_ != nullptr);
      _impl_.repo_rate_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.clear_value_date_ != nullptr);
      _impl_.clear_value_date_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.sec_value_date_ != nullptr);
      _impl_.sec_value_date_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BrokerReport::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 11, 254, 2> BrokerReport::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_._has_bits_),
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4160749568,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BrokerReport_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string trade_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_id_)}},
    // string order_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_id_)}},
    // string figi = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.figi_)}},
    // string execute_sign = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.execute_sign_)}},
    // .google.protobuf.Timestamp trade_datetime = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_datetime_)}},
    // string exchange = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_)}},
    // string class_code = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.class_code_)}},
    // string direction = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.direction_)}},
    // string name = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.name_)}},
    // string ticker = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.ticker_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 1, 1, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.price_)}},
    // int64 quantity = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BrokerReport, _impl_.quantity_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.quantity_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue order_amount = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 2, 2, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_amount_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation aci_value = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 3, 3, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.aci_value_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 4, 4, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.total_order_amount_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue broker_commission = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 5, 5, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_commission = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 6, 6, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 7, 7, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_clearing_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation repo_rate = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 8, 8, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.repo_rate_)}},
    // string party = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.party_)}},
    // .google.protobuf.Timestamp clear_value_date = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 9, 9, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.clear_value_date_)}},
    // .google.protobuf.Timestamp sec_value_date = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 10, 10, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.sec_value_date_)}},
    // string broker_status = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_status_)}},
    // string separate_agreement_type = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_type_)}},
    // string separate_agreement_number = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_number_)}},
    // string separate_agreement_date = 26;
    {::_pbi::TcParser::FastUS2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_date_)}},
    // string delivery_type = 27;
    {::_pbi::TcParser::FastUS2,
     {474, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.delivery_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string trade_id = 1;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 2;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 3;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string execute_sign = 4;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.execute_sign_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp trade_datetime = 5;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_datetime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string exchange = 6;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string class_code = 7;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.class_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string direction = 8;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 9;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ticker = 10;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.ticker_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 11;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 12;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue order_amount = 13;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_amount_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation aci_value = 14;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.aci_value_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 15;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.total_order_amount_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue broker_commission = 16;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_commission_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_commission = 17;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_commission_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_clearing_commission_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation repo_rate = 19;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.repo_rate_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string party = 20;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.party_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp clear_value_date = 21;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.clear_value_date_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp sec_value_date = 22;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.sec_value_date_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string broker_status = 23;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string separate_agreement_type = 24;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string separate_agreement_number = 25;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string separate_agreement_date = 26;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_date_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string delivery_type = 27;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.delivery_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\62\10\10\4\14\0\10\12\11\4\6\0\0\0\0\0\0\0\0\0\5\0\0\15\27\31\27\15\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.BrokerReport"
    "trade_id"
    "order_id"
    "figi"
    "execute_sign"
    "exchange"
    "class_code"
    "direction"
    "name"
    "ticker"
    "party"
    "broker_status"
    "separate_agreement_type"
    "separate_agreement_number"
    "separate_agreement_date"
    "delivery_type"
  }},
};

::uint8_t* BrokerReport::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.BrokerReport)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string trade_id = 1;
  if (!this->_internal_trade_id().empty()) {
    const std::string& _s = this->_internal_trade_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.trade_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string order_id = 2;
  if (!this->_internal_order_id().empty()) {
    const std::string& _s = this->_internal_order_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.order_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string figi = 3;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.figi");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string execute_sign = 4;
  if (!this->_internal_execute_sign().empty()) {
    const std::string& _s = this->_internal_execute_sign();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.execute_sign");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp trade_datetime = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::trade_datetime(this),
        _Internal::trade_datetime(this).GetCachedSize(), target, stream);
  }

  // string exchange = 6;
  if (!this->_internal_exchange().empty()) {
    const std::string& _s = this->_internal_exchange();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.exchange");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string class_code = 7;
  if (!this->_internal_class_code().empty()) {
    const std::string& _s = this->_internal_class_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.class_code");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string direction = 8;
  if (!this->_internal_direction().empty()) {
    const std::string& _s = this->_internal_direction();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.direction");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string name = 9;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.name");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string ticker = 10;
  if (!this->_internal_ticker().empty()) {
    const std::string& _s = this->_internal_ticker();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.ticker");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 11;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // int64 quantity = 12;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<12>(
            stream, this->_internal_quantity(), target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue order_amount = 13;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, _Internal::order_amount(this),
        _Internal::order_amount(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation aci_value = 14;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, _Internal::aci_value(this),
        _Internal::aci_value(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 15;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        15, _Internal::total_order_amount(this),
        _Internal::total_order_amount(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue broker_commission = 16;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, _Internal::broker_commission(this),
        _Internal::broker_commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_commission = 17;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        17, _Internal::exchange_commission(this),
        _Internal::exchange_commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        18, _Internal::exchange_clearing_commission(this),
        _Internal::exchange_clearing_commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation repo_rate = 19;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, _Internal::repo_rate(this),
        _Internal::repo_rate(this).GetCachedSize(), target, stream);
  }

  // string party = 20;
  if (!this->_internal_party().empty()) {
    const std::string& _s = this->_internal_party();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.party");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // .google.protobuf.Timestamp clear_value_date = 21;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, _Internal::clear_value_date(this),
        _Internal::clear_value_date(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp sec_value_date = 22;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        22, _Internal::sec_value_date(this),
        _Internal::sec_value_date(this).GetCachedSize(), target, stream);
  }

  // string broker_status = 23;
  if (!this->_internal_broker_status().empty()) {
    const std::string& _s = this->_internal_broker_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.broker_status");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // string separate_agreement_type = 24;
  if (!this->_internal_separate_agreement_type().empty()) {
    const std::string& _s = this->_internal_separate_agreement_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.separate_agreement_type");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // string separate_agreement_number = 25;
  if (!this->_internal_separate_agreement_number().empty()) {
    const std::string& _s = this->_internal_separate_agreement_number();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.separate_agreement_number");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // string separate_agreement_date = 26;
  if (!this->_internal_separate_agreement_date().empty()) {
    const std::string& _s = this->_internal_separate_agreement_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.separate_agreement_date");
    target = stream->WriteStringMaybeAliased(26, _s, target);
  }

  // string delivery_type = 27;
  if (!this->_internal_delivery_type().empty()) {
    const std::string& _s = this->_internal_delivery_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.BrokerReport.delivery_type");
    target = stream->WriteStringMaybeAliased(27, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.BrokerReport)
  return target;
}

::size_t BrokerReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.BrokerReport)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trade_id = 1;
  if (!this->_internal_trade_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_id());
  }

  // string order_id = 2;
  if (!this->_internal_order_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_order_id());
  }

  // string figi = 3;
  if (!this->_internal_figi().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string execute_sign = 4;
  if (!this->_internal_execute_sign().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_execute_sign());
  }

  // string exchange = 6;
  if (!this->_internal_exchange().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_exchange());
  }

  // string class_code = 7;
  if (!this->_internal_class_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_class_code());
  }

  // string direction = 8;
  if (!this->_internal_direction().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_direction());
  }

  // string name = 9;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string ticker = 10;
  if (!this->_internal_ticker().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ticker());
  }

  // string party = 20;
  if (!this->_internal_party().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_party());
  }

  // string broker_status = 23;
  if (!this->_internal_broker_status().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_broker_status());
  }

  // string separate_agreement_type = 24;
  if (!this->_internal_separate_agreement_type().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_separate_agreement_type());
  }

  // string separate_agreement_number = 25;
  if (!this->_internal_separate_agreement_number().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_separate_agreement_number());
  }

  // string separate_agreement_date = 26;
  if (!this->_internal_separate_agreement_date().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_separate_agreement_date());
  }

  // string delivery_type = 27;
  if (!this->_internal_delivery_type().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_delivery_type());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .google.protobuf.Timestamp trade_datetime = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trade_datetime_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 11;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue order_amount = 13;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.order_amount_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation aci_value = 14;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.aci_value_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 15;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_order_amount_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue broker_commission = 16;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.broker_commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_commission = 17;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.exchange_commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.exchange_clearing_commission_);
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // .tinkoff.public.invest.api.contract.v1.Quotation repo_rate = 19;
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.repo_rate_);
    }

    // .google.protobuf.Timestamp clear_value_date = 21;
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.clear_value_date_);
    }

    // .google.protobuf.Timestamp sec_value_date = 22;
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sec_value_date_);
    }

  }
  // int64 quantity = 12;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BrokerReport::_class_data_ = {
    BrokerReport::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BrokerReport::GetClassData() const {
  return &_class_data_;
}

void BrokerReport::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BrokerReport*>(&to_msg);
  auto& from = static_cast<const BrokerReport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.BrokerReport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_execute_sign().empty()) {
    _this->_internal_set_execute_sign(from._internal_execute_sign());
  }
  if (!from._internal_exchange().empty()) {
    _this->_internal_set_exchange(from._internal_exchange());
  }
  if (!from._internal_class_code().empty()) {
    _this->_internal_set_class_code(from._internal_class_code());
  }
  if (!from._internal_direction().empty()) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_ticker().empty()) {
    _this->_internal_set_ticker(from._internal_ticker());
  }
  if (!from._internal_party().empty()) {
    _this->_internal_set_party(from._internal_party());
  }
  if (!from._internal_broker_status().empty()) {
    _this->_internal_set_broker_status(from._internal_broker_status());
  }
  if (!from._internal_separate_agreement_type().empty()) {
    _this->_internal_set_separate_agreement_type(from._internal_separate_agreement_type());
  }
  if (!from._internal_separate_agreement_number().empty()) {
    _this->_internal_set_separate_agreement_number(from._internal_separate_agreement_number());
  }
  if (!from._internal_separate_agreement_date().empty()) {
    _this->_internal_set_separate_agreement_date(from._internal_separate_agreement_date());
  }
  if (!from._internal_delivery_type().empty()) {
    _this->_internal_set_delivery_type(from._internal_delivery_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_trade_datetime()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_trade_datetime());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_price());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_order_amount()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_order_amount());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_aci_value()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_aci_value());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_total_order_amount()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_total_order_amount());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_broker_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_broker_commission());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_exchange_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_exchange_commission());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_exchange_clearing_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_exchange_clearing_commission());
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_repo_rate()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_repo_rate());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_clear_value_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_clear_value_date());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_sec_value_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_sec_value_date());
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrokerReport::CopyFrom(const BrokerReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.BrokerReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BrokerReport::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BrokerReport::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BrokerReport::InternalSwap(BrokerReport* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.execute_sign_, &other->_impl_.execute_sign_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_code_, &other->_impl_.class_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, &other->_impl_.direction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ticker_, &other->_impl_.ticker_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.party_, &other->_impl_.party_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.broker_status_, &other->_impl_.broker_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.separate_agreement_type_, &other->_impl_.separate_agreement_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.separate_agreement_number_, &other->_impl_.separate_agreement_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.separate_agreement_date_, &other->_impl_.separate_agreement_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delivery_type_, &other->_impl_.delivery_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.quantity_)
      + sizeof(BrokerReport::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_datetime_)>(
          reinterpret_cast<char*>(&_impl_.trade_datetime_),
          reinterpret_cast<char*>(&other->_impl_.trade_datetime_));
}

::google::protobuf::Metadata BrokerReport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[21]);
}
// ===================================================================

class GetDividendsForeignIssuerRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _impl_._oneof_case_);
  static const ::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest& generate_div_foreign_issuer_report(const GetDividendsForeignIssuerRequest* msg);
  static const ::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest& get_div_foreign_issuer_report(const GetDividendsForeignIssuerRequest* msg);
};

const ::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest& GetDividendsForeignIssuerRequest::_Internal::generate_div_foreign_issuer_report(const GetDividendsForeignIssuerRequest* msg) {
  return *msg->_impl_.payload_.generate_div_foreign_issuer_report_;
}
const ::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest& GetDividendsForeignIssuerRequest::_Internal::get_div_foreign_issuer_report(const GetDividendsForeignIssuerRequest* msg) {
  return *msg->_impl_.payload_.get_div_foreign_issuer_report_;
}
void GetDividendsForeignIssuerRequest::set_allocated_generate_div_foreign_issuer_report(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest* generate_div_foreign_issuer_report) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_div_foreign_issuer_report) {
    ::google::protobuf::Arena* submessage_arena = generate_div_foreign_issuer_report->GetArena();
    if (message_arena != submessage_arena) {
      generate_div_foreign_issuer_report = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_div_foreign_issuer_report, submessage_arena);
    }
    set_has_generate_div_foreign_issuer_report();
    _impl_.payload_.generate_div_foreign_issuer_report_ = generate_div_foreign_issuer_report;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest.generate_div_foreign_issuer_report)
}
void GetDividendsForeignIssuerRequest::set_allocated_get_div_foreign_issuer_report(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest* get_div_foreign_issuer_report) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_div_foreign_issuer_report) {
    ::google::protobuf::Arena* submessage_arena = get_div_foreign_issuer_report->GetArena();
    if (message_arena != submessage_arena) {
      get_div_foreign_issuer_report = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_div_foreign_issuer_report, submessage_arena);
    }
    set_has_get_div_foreign_issuer_report();
    _impl_.payload_.get_div_foreign_issuer_report_ = get_div_foreign_issuer_report;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest.get_div_foreign_issuer_report)
}
GetDividendsForeignIssuerRequest::GetDividendsForeignIssuerRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GetDividendsForeignIssuerRequest::GetDividendsForeignIssuerRequest(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerRequest& from)
    : ::google::protobuf::Message(arena) {
  GetDividendsForeignIssuerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateDivForeignIssuerReport:
        _impl_.payload_.generate_div_foreign_issuer_report_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest>(arena, *from._impl_.payload_.generate_div_foreign_issuer_report_);
        break;
      case kGetDivForeignIssuerReport:
        _impl_.payload_.get_div_foreign_issuer_report_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest>(arena, *from._impl_.payload_.get_div_foreign_issuer_report_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GetDividendsForeignIssuerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetDividendsForeignIssuerRequest::~GetDividendsForeignIssuerRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetDividendsForeignIssuerRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void GetDividendsForeignIssuerRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kGenerateDivForeignIssuerReport: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_div_foreign_issuer_report_;
      }
      break;
    }
    case kGetDivForeignIssuerReport: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_div_foreign_issuer_report_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void GetDividendsForeignIssuerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetDividendsForeignIssuerRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> GetDividendsForeignIssuerRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetDividendsForeignIssuerRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest generate_div_foreign_issuer_report = 1;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerRequest, _impl_.payload_.generate_div_foreign_issuer_report_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest get_div_foreign_issuer_report = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerRequest, _impl_.payload_.get_div_foreign_issuer_report_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest>()},
  }}, {{
  }},
};

::uint8_t* GetDividendsForeignIssuerRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (payload_case()) {
    case kGenerateDivForeignIssuerReport: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::generate_div_foreign_issuer_report(this),
          _Internal::generate_div_foreign_issuer_report(this).GetCachedSize(), target, stream);
      break;
    }
    case kGetDivForeignIssuerReport: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::get_div_foreign_issuer_report(this),
          _Internal::get_div_foreign_issuer_report(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  return target;
}

::size_t GetDividendsForeignIssuerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest generate_div_foreign_issuer_report = 1;
    case kGenerateDivForeignIssuerReport: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.generate_div_foreign_issuer_report_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest get_div_foreign_issuer_report = 2;
    case kGetDivForeignIssuerReport: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.get_div_foreign_issuer_report_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetDividendsForeignIssuerRequest::_class_data_ = {
    GetDividendsForeignIssuerRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetDividendsForeignIssuerRequest::GetClassData() const {
  return &_class_data_;
}

void GetDividendsForeignIssuerRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerRequest*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kGenerateDivForeignIssuerReport: {
      _this->_internal_mutable_generate_div_foreign_issuer_report()->::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest::MergeFrom(
          from._internal_generate_div_foreign_issuer_report());
      break;
    }
    case kGetDivForeignIssuerReport: {
      _this->_internal_mutable_get_div_foreign_issuer_report()->::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest::MergeFrom(
          from._internal_get_div_foreign_issuer_report());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerRequest::CopyFrom(const GetDividendsForeignIssuerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetDividendsForeignIssuerRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetDividendsForeignIssuerRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetDividendsForeignIssuerRequest::InternalSwap(GetDividendsForeignIssuerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetDividendsForeignIssuerRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[22]);
}
// ===================================================================

class GetDividendsForeignIssuerResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _impl_._oneof_case_);
  static const ::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse& generate_div_foreign_issuer_report_response(const GetDividendsForeignIssuerResponse* msg);
  static const ::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse& div_foreign_issuer_report(const GetDividendsForeignIssuerResponse* msg);
};

const ::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse& GetDividendsForeignIssuerResponse::_Internal::generate_div_foreign_issuer_report_response(const GetDividendsForeignIssuerResponse* msg) {
  return *msg->_impl_.payload_.generate_div_foreign_issuer_report_response_;
}
const ::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse& GetDividendsForeignIssuerResponse::_Internal::div_foreign_issuer_report(const GetDividendsForeignIssuerResponse* msg) {
  return *msg->_impl_.payload_.div_foreign_issuer_report_;
}
void GetDividendsForeignIssuerResponse::set_allocated_generate_div_foreign_issuer_report_response(::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse* generate_div_foreign_issuer_report_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_div_foreign_issuer_report_response) {
    ::google::protobuf::Arena* submessage_arena = generate_div_foreign_issuer_report_response->GetArena();
    if (message_arena != submessage_arena) {
      generate_div_foreign_issuer_report_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_div_foreign_issuer_report_response, submessage_arena);
    }
    set_has_generate_div_foreign_issuer_report_response();
    _impl_.payload_.generate_div_foreign_issuer_report_response_ = generate_div_foreign_issuer_report_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse.generate_div_foreign_issuer_report_response)
}
void GetDividendsForeignIssuerResponse::set_allocated_div_foreign_issuer_report(::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse* div_foreign_issuer_report) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (div_foreign_issuer_report) {
    ::google::protobuf::Arena* submessage_arena = div_foreign_issuer_report->GetArena();
    if (message_arena != submessage_arena) {
      div_foreign_issuer_report = ::google::protobuf::internal::GetOwnedMessage(message_arena, div_foreign_issuer_report, submessage_arena);
    }
    set_has_div_foreign_issuer_report();
    _impl_.payload_.div_foreign_issuer_report_ = div_foreign_issuer_report;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse.div_foreign_issuer_report)
}
GetDividendsForeignIssuerResponse::GetDividendsForeignIssuerResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GetDividendsForeignIssuerResponse::GetDividendsForeignIssuerResponse(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerResponse& from)
    : ::google::protobuf::Message(arena) {
  GetDividendsForeignIssuerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateDivForeignIssuerReportResponse:
        _impl_.payload_.generate_div_foreign_issuer_report_response_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse>(arena, *from._impl_.payload_.generate_div_foreign_issuer_report_response_);
        break;
      case kDivForeignIssuerReport:
        _impl_.payload_.div_foreign_issuer_report_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse>(arena, *from._impl_.payload_.div_foreign_issuer_report_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GetDividendsForeignIssuerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetDividendsForeignIssuerResponse::~GetDividendsForeignIssuerResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetDividendsForeignIssuerResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void GetDividendsForeignIssuerResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kGenerateDivForeignIssuerReportResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_div_foreign_issuer_report_response_;
      }
      break;
    }
    case kDivForeignIssuerReport: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.div_foreign_issuer_report_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void GetDividendsForeignIssuerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetDividendsForeignIssuerResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> GetDividendsForeignIssuerResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetDividendsForeignIssuerResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse generate_div_foreign_issuer_report_response = 1;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerResponse, _impl_.payload_.generate_div_foreign_issuer_report_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse div_foreign_issuer_report = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerResponse, _impl_.payload_.div_foreign_issuer_report_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse>()},
  }}, {{
  }},
};

::uint8_t* GetDividendsForeignIssuerResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (payload_case()) {
    case kGenerateDivForeignIssuerReportResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::generate_div_foreign_issuer_report_response(this),
          _Internal::generate_div_foreign_issuer_report_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kDivForeignIssuerReport: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::div_foreign_issuer_report(this),
          _Internal::div_foreign_issuer_report(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  return target;
}

::size_t GetDividendsForeignIssuerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse generate_div_foreign_issuer_report_response = 1;
    case kGenerateDivForeignIssuerReportResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.generate_div_foreign_issuer_report_response_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse div_foreign_issuer_report = 2;
    case kDivForeignIssuerReport: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.div_foreign_issuer_report_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetDividendsForeignIssuerResponse::_class_data_ = {
    GetDividendsForeignIssuerResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetDividendsForeignIssuerResponse::GetClassData() const {
  return &_class_data_;
}

void GetDividendsForeignIssuerResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerResponse*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kGenerateDivForeignIssuerReportResponse: {
      _this->_internal_mutable_generate_div_foreign_issuer_report_response()->::tinkoff::public::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse::MergeFrom(
          from._internal_generate_div_foreign_issuer_report_response());
      break;
    }
    case kDivForeignIssuerReport: {
      _this->_internal_mutable_div_foreign_issuer_report()->::tinkoff::public::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse::MergeFrom(
          from._internal_div_foreign_issuer_report());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerResponse::CopyFrom(const GetDividendsForeignIssuerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetDividendsForeignIssuerResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetDividendsForeignIssuerResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetDividendsForeignIssuerResponse::InternalSwap(GetDividendsForeignIssuerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetDividendsForeignIssuerResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[23]);
}
// ===================================================================

class GenerateDividendsForeignIssuerReportRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GenerateDividendsForeignIssuerReportRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& from(const GenerateDividendsForeignIssuerReportRequest* msg);
  static void set_has_from(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& to(const GenerateDividendsForeignIssuerReportRequest* msg);
  static void set_has_to(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& GenerateDividendsForeignIssuerReportRequest::_Internal::from(const GenerateDividendsForeignIssuerReportRequest* msg) {
  return *msg->_impl_.from_;
}
const ::google::protobuf::Timestamp& GenerateDividendsForeignIssuerReportRequest::_Internal::to(const GenerateDividendsForeignIssuerReportRequest* msg) {
  return *msg->_impl_.to_;
}
void GenerateDividendsForeignIssuerReportRequest::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GenerateDividendsForeignIssuerReportRequest::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GenerateDividendsForeignIssuerReportRequest::GenerateDividendsForeignIssuerReportRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_) {}

GenerateDividendsForeignIssuerReportRequest::GenerateDividendsForeignIssuerReportRequest(
    ::google::protobuf::Arena* arena,
    const GenerateDividendsForeignIssuerReportRequest& from)
    : ::google::protobuf::Message(arena) {
  GenerateDividendsForeignIssuerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.from_)
                : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.to_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena) {}

inline void GenerateDividendsForeignIssuerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, to_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::to_));
}
GenerateDividendsForeignIssuerReportRequest::~GenerateDividendsForeignIssuerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateDividendsForeignIssuerReportRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  delete _impl_.from_;
  delete _impl_.to_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateDividendsForeignIssuerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateDividendsForeignIssuerReportRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 100, 2> GenerateDividendsForeignIssuerReportRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GenerateDividendsForeignIssuerReportRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.account_id_)}},
    // .google.protobuf.Timestamp from = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.to_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 2;
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 3;
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\121\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest"
    "account_id"
  }},
};

::uint8_t* GenerateDividendsForeignIssuerReportRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp from = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp to = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  return target;
}

::size_t GenerateDividendsForeignIssuerReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp from = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.from_);
    }

    // .google.protobuf.Timestamp to = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.to_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateDividendsForeignIssuerReportRequest::_class_data_ = {
    GenerateDividendsForeignIssuerReportRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateDividendsForeignIssuerReportRequest::GetClassData() const {
  return &_class_data_;
}

void GenerateDividendsForeignIssuerReportRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateDividendsForeignIssuerReportRequest*>(&to_msg);
  auto& from = static_cast<const GenerateDividendsForeignIssuerReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_from()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_from());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_to()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_to());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateDividendsForeignIssuerReportRequest::CopyFrom(const GenerateDividendsForeignIssuerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateDividendsForeignIssuerReportRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateDividendsForeignIssuerReportRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateDividendsForeignIssuerReportRequest::InternalSwap(GenerateDividendsForeignIssuerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.to_)
      + sizeof(GenerateDividendsForeignIssuerReportRequest::_impl_.to_)
      - PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GenerateDividendsForeignIssuerReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[24]);
}
// ===================================================================

class GetDividendsForeignIssuerReportRequest::_Internal {
 public:
};

GetDividendsForeignIssuerReportRequest::GetDividendsForeignIssuerReportRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GetDividendsForeignIssuerReportRequest::GetDividendsForeignIssuerReportRequest(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerReportRequest& from)
    : ::google::protobuf::Message(arena) {
  GetDividendsForeignIssuerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.page_ = from._impl_.page_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GetDividendsForeignIssuerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_ = {};
}
GetDividendsForeignIssuerReportRequest::~GetDividendsForeignIssuerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetDividendsForeignIssuerReportRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.task_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetDividendsForeignIssuerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.page_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetDividendsForeignIssuerReportRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 92, 2> GetDividendsForeignIssuerReportRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetDividendsForeignIssuerReportRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 page = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportRequest, _impl_.page_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.page_)}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\114\7\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest"
    "task_id"
  }},
};

::uint8_t* GetDividendsForeignIssuerReportRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    const std::string& _s = this->_internal_task_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest.task_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_page(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  return target;
}

::size_t GetDividendsForeignIssuerReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task_id());
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetDividendsForeignIssuerReportRequest::_class_data_ = {
    GetDividendsForeignIssuerReportRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetDividendsForeignIssuerReportRequest::GetClassData() const {
  return &_class_data_;
}

void GetDividendsForeignIssuerReportRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerReportRequest*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (from._internal_page() != 0) {
    _this->_internal_set_page(from._internal_page());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerReportRequest::CopyFrom(const GetDividendsForeignIssuerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetDividendsForeignIssuerReportRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetDividendsForeignIssuerReportRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetDividendsForeignIssuerReportRequest::InternalSwap(GetDividendsForeignIssuerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
        swap(_impl_.page_, other->_impl_.page_);
}

::google::protobuf::Metadata GetDividendsForeignIssuerReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[25]);
}
// ===================================================================

class GenerateDividendsForeignIssuerReportResponse::_Internal {
 public:
};

GenerateDividendsForeignIssuerReportResponse::GenerateDividendsForeignIssuerReportResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GenerateDividendsForeignIssuerReportResponse::GenerateDividendsForeignIssuerReportResponse(
    ::google::protobuf::Arena* arena,
    const GenerateDividendsForeignIssuerReportResponse& from)
    : ::google::protobuf::Message(arena) {
  GenerateDividendsForeignIssuerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GenerateDividendsForeignIssuerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenerateDividendsForeignIssuerReportResponse::~GenerateDividendsForeignIssuerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateDividendsForeignIssuerReportResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.task_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateDividendsForeignIssuerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateDividendsForeignIssuerReportResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 98, 2> GenerateDividendsForeignIssuerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenerateDividendsForeignIssuerReportResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportResponse, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportResponse, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\122\7\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse"
    "task_id"
  }},
};

::uint8_t* GenerateDividendsForeignIssuerReportResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    const std::string& _s = this->_internal_task_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse.task_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  return target;
}

::size_t GenerateDividendsForeignIssuerReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string task_id = 1;
  if (!this->_internal_task_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_task_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateDividendsForeignIssuerReportResponse::_class_data_ = {
    GenerateDividendsForeignIssuerReportResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateDividendsForeignIssuerReportResponse::GetClassData() const {
  return &_class_data_;
}

void GenerateDividendsForeignIssuerReportResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateDividendsForeignIssuerReportResponse*>(&to_msg);
  auto& from = static_cast<const GenerateDividendsForeignIssuerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateDividendsForeignIssuerReportResponse::CopyFrom(const GenerateDividendsForeignIssuerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateDividendsForeignIssuerReportResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateDividendsForeignIssuerReportResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateDividendsForeignIssuerReportResponse::InternalSwap(GenerateDividendsForeignIssuerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
}

::google::protobuf::Metadata GenerateDividendsForeignIssuerReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[26]);
}
// ===================================================================

class GetDividendsForeignIssuerReportResponse::_Internal {
 public:
};

GetDividendsForeignIssuerReportResponse::GetDividendsForeignIssuerReportResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : dividends_foreign_issuer_report_{visibility, arena, from.dividends_foreign_issuer_report_},
        _cached_size_{0} {}

GetDividendsForeignIssuerReportResponse::GetDividendsForeignIssuerReportResponse(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerReportResponse& from)
    : ::google::protobuf::Message(arena) {
  GetDividendsForeignIssuerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, itemscount_),
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dividends_foreign_issuer_report_{visibility, arena},
        _cached_size_{0} {}

inline void GetDividendsForeignIssuerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           0,
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));
}
GetDividendsForeignIssuerReportResponse::~GetDividendsForeignIssuerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetDividendsForeignIssuerReportResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetDividendsForeignIssuerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dividends_foreign_issuer_report_.Clear();
  ::memset(&_impl_.itemscount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_) -
      reinterpret_cast<char*>(&_impl_.itemscount_)) + sizeof(_impl_.page_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetDividendsForeignIssuerReportResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> GetDividendsForeignIssuerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetDividendsForeignIssuerReportResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 page = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportResponse, _impl_.page_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.page_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.dividends_foreign_issuer_report_)}},
    // int32 itemsCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_)}},
    // int32 pagesCount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportResponse, _impl_.pagescount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.pagescount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.dividends_foreign_issuer_report_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 itemsCount = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 pagesCount = 3;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.pagescount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page = 4;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::DividendsForeignIssuerReport>()},
  }}, {{
  }},
};

::uint8_t* GetDividendsForeignIssuerReportResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dividends_foreign_issuer_report_size()); i < n; i++) {
    const auto& repfield = this->_internal_dividends_foreign_issuer_report().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 itemsCount = 2;
  if (this->_internal_itemscount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_itemscount(), target);
  }

  // int32 pagesCount = 3;
  if (this->_internal_pagescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_pagescount(), target);
  }

  // int32 page = 4;
  if (this->_internal_page() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_page(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  return target;
}

::size_t GetDividendsForeignIssuerReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
  total_size += 1UL * this->_internal_dividends_foreign_issuer_report_size();
  for (const auto& msg : this->_internal_dividends_foreign_issuer_report()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 itemsCount = 2;
  if (this->_internal_itemscount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_itemscount());
  }

  // int32 pagesCount = 3;
  if (this->_internal_pagescount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_pagescount());
  }

  // int32 page = 4;
  if (this->_internal_page() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetDividendsForeignIssuerReportResponse::_class_data_ = {
    GetDividendsForeignIssuerReportResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetDividendsForeignIssuerReportResponse::GetClassData() const {
  return &_class_data_;
}

void GetDividendsForeignIssuerReportResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerReportResponse*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dividends_foreign_issuer_report()->MergeFrom(
      from._internal_dividends_foreign_issuer_report());
  if (from._internal_itemscount() != 0) {
    _this->_internal_set_itemscount(from._internal_itemscount());
  }
  if (from._internal_pagescount() != 0) {
    _this->_internal_set_pagescount(from._internal_pagescount());
  }
  if (from._internal_page() != 0) {
    _this->_internal_set_page(from._internal_page());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerReportResponse::CopyFrom(const GetDividendsForeignIssuerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetDividendsForeignIssuerReportResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetDividendsForeignIssuerReportResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetDividendsForeignIssuerReportResponse::InternalSwap(GetDividendsForeignIssuerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dividends_foreign_issuer_report_.InternalSwap(&other->_impl_.dividends_foreign_issuer_report_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.page_)
      + sizeof(GetDividendsForeignIssuerReportResponse::_impl_.page_)
      - PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_)>(
          reinterpret_cast<char*>(&_impl_.itemscount_),
          reinterpret_cast<char*>(&other->_impl_.itemscount_));
}

::google::protobuf::Metadata GetDividendsForeignIssuerReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[27]);
}
// ===================================================================

class DividendsForeignIssuerReport::_Internal {
 public:
  using HasBits = decltype(std::declval<DividendsForeignIssuerReport>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& record_date(const DividendsForeignIssuerReport* msg);
  static void set_has_record_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& payment_date(const DividendsForeignIssuerReport* msg);
  static void set_has_payment_date(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& dividend(const DividendsForeignIssuerReport* msg);
  static void set_has_dividend(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& external_commission(const DividendsForeignIssuerReport* msg);
  static void set_has_external_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& dividend_gross(const DividendsForeignIssuerReport* msg);
  static void set_has_dividend_gross(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& tax(const DividendsForeignIssuerReport* msg);
  static void set_has_tax(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& dividend_amount(const DividendsForeignIssuerReport* msg);
  static void set_has_dividend_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::google::protobuf::Timestamp& DividendsForeignIssuerReport::_Internal::record_date(const DividendsForeignIssuerReport* msg) {
  return *msg->_impl_.record_date_;
}
const ::google::protobuf::Timestamp& DividendsForeignIssuerReport::_Internal::payment_date(const DividendsForeignIssuerReport* msg) {
  return *msg->_impl_.payment_date_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& DividendsForeignIssuerReport::_Internal::dividend(const DividendsForeignIssuerReport* msg) {
  return *msg->_impl_.dividend_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& DividendsForeignIssuerReport::_Internal::external_commission(const DividendsForeignIssuerReport* msg) {
  return *msg->_impl_.external_commission_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& DividendsForeignIssuerReport::_Internal::dividend_gross(const DividendsForeignIssuerReport* msg) {
  return *msg->_impl_.dividend_gross_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& DividendsForeignIssuerReport::_Internal::tax(const DividendsForeignIssuerReport* msg) {
  return *msg->_impl_.tax_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& DividendsForeignIssuerReport::_Internal::dividend_amount(const DividendsForeignIssuerReport* msg) {
  return *msg->_impl_.dividend_amount_;
}
void DividendsForeignIssuerReport::clear_record_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.record_date_ != nullptr) _impl_.record_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DividendsForeignIssuerReport::clear_payment_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.payment_date_ != nullptr) _impl_.payment_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void DividendsForeignIssuerReport::clear_dividend() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.dividend_ != nullptr) _impl_.dividend_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void DividendsForeignIssuerReport::clear_external_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.external_commission_ != nullptr) _impl_.external_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void DividendsForeignIssuerReport::clear_dividend_gross() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.dividend_gross_ != nullptr) _impl_.dividend_gross_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void DividendsForeignIssuerReport::clear_tax() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.tax_ != nullptr) _impl_.tax_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void DividendsForeignIssuerReport::clear_dividend_amount() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.dividend_amount_ != nullptr) _impl_.dividend_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
DividendsForeignIssuerReport::DividendsForeignIssuerReport(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
}
inline PROTOBUF_NDEBUG_INLINE DividendsForeignIssuerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        security_name_(arena, from.security_name_),
        isin_(arena, from.isin_),
        issuer_country_(arena, from.issuer_country_),
        currency_(arena, from.currency_) {}

DividendsForeignIssuerReport::DividendsForeignIssuerReport(
    ::google::protobuf::Arena* arena,
    const DividendsForeignIssuerReport& from)
    : ::google::protobuf::Message(arena) {
  DividendsForeignIssuerReport* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.record_date_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.record_date_)
                : nullptr;
  _impl_.payment_date_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.payment_date_)
                : nullptr;
  _impl_.dividend_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.dividend_)
                : nullptr;
  _impl_.external_commission_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.external_commission_)
                : nullptr;
  _impl_.dividend_gross_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.dividend_gross_)
                : nullptr;
  _impl_.tax_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.tax_)
                : nullptr;
  _impl_.dividend_amount_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.dividend_amount_)
                : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
}
inline PROTOBUF_NDEBUG_INLINE DividendsForeignIssuerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        security_name_(arena),
        isin_(arena),
        issuer_country_(arena),
        currency_(arena) {}

inline void DividendsForeignIssuerReport::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, record_date_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, record_date_) +
               sizeof(Impl_::quantity_));
}
DividendsForeignIssuerReport::~DividendsForeignIssuerReport() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DividendsForeignIssuerReport::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.security_name_.Destroy();
  _impl_.isin_.Destroy();
  _impl_.issuer_country_.Destroy();
  _impl_.currency_.Destroy();
  delete _impl_.record_date_;
  delete _impl_.payment_date_;
  delete _impl_.dividend_;
  delete _impl_.external_commission_;
  delete _impl_.dividend_gross_;
  delete _impl_.tax_;
  delete _impl_.dividend_amount_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DividendsForeignIssuerReport::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.security_name_.ClearToEmpty();
  _impl_.isin_.ClearToEmpty();
  _impl_.issuer_country_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.record_date_ != nullptr);
      _impl_.record_date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payment_date_ != nullptr);
      _impl_.payment_date_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.dividend_ != nullptr);
      _impl_.dividend_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.external_commission_ != nullptr);
      _impl_.external_commission_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.dividend_gross_ != nullptr);
      _impl_.dividend_gross_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.tax_ != nullptr);
      _impl_.tax_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.dividend_amount_ != nullptr);
      _impl_.dividend_amount_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DividendsForeignIssuerReport::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 7, 122, 2> DividendsForeignIssuerReport::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DividendsForeignIssuerReport_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp record_date = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.record_date_)}},
    // .google.protobuf.Timestamp payment_date = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.payment_date_)}},
    // string security_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.security_name_)}},
    // string isin = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.isin_)}},
    // string issuer_country = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.issuer_country_)}},
    // int64 quantity = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DividendsForeignIssuerReport, _impl_.quantity_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.quantity_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation dividend = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation external_commission = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.external_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation dividend_gross = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_gross_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation tax = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.tax_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation dividend_amount = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 6, 6, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_amount_)}},
    // string currency = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.currency_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp record_date = 1;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.record_date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp payment_date = 2;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.payment_date_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string security_name = 3;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.security_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string isin = 4;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.isin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string issuer_country = 5;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.issuer_country_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 quantity = 6;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.Quotation dividend = 7;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation external_commission = 8;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.external_commission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation dividend_gross = 9;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_gross_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation tax = 10;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.tax_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation dividend_amount = 11;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_amount_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string currency = 12;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\102\0\0\15\4\16\0\0\0\0\0\0\10\0\0\0"
    "tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport"
    "security_name"
    "isin"
    "issuer_country"
    "currency"
  }},
};

::uint8_t* DividendsForeignIssuerReport::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp record_date = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::record_date(this),
        _Internal::record_date(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp payment_date = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::payment_date(this),
        _Internal::payment_date(this).GetCachedSize(), target, stream);
  }

  // string security_name = 3;
  if (!this->_internal_security_name().empty()) {
    const std::string& _s = this->_internal_security_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport.security_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string isin = 4;
  if (!this->_internal_isin().empty()) {
    const std::string& _s = this->_internal_isin();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport.isin");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string issuer_country = 5;
  if (!this->_internal_issuer_country().empty()) {
    const std::string& _s = this->_internal_issuer_country();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport.issuer_country");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // int64 quantity = 6;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_quantity(), target);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation dividend = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::dividend(this),
        _Internal::dividend(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation external_commission = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::external_commission(this),
        _Internal::external_commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation dividend_gross = 9;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, _Internal::dividend_gross(this),
        _Internal::dividend_gross(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation tax = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::tax(this),
        _Internal::tax(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation dividend_amount = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::dividend_amount(this),
        _Internal::dividend_amount(this).GetCachedSize(), target, stream);
  }

  // string currency = 12;
  if (!this->_internal_currency().empty()) {
    const std::string& _s = this->_internal_currency();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport.currency");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
  return target;
}

::size_t DividendsForeignIssuerReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string security_name = 3;
  if (!this->_internal_security_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_security_name());
  }

  // string isin = 4;
  if (!this->_internal_isin().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_isin());
  }

  // string issuer_country = 5;
  if (!this->_internal_issuer_country().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_issuer_country());
  }

  // string currency = 12;
  if (!this->_internal_currency().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currency());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // .google.protobuf.Timestamp record_date = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.record_date_);
    }

    // .google.protobuf.Timestamp payment_date = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payment_date_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation dividend = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dividend_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation external_commission = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.external_commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation dividend_gross = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dividend_gross_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation tax = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tax_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation dividend_amount = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dividend_amount_);
    }

  }
  // int64 quantity = 6;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DividendsForeignIssuerReport::_class_data_ = {
    DividendsForeignIssuerReport::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DividendsForeignIssuerReport::GetClassData() const {
  return &_class_data_;
}

void DividendsForeignIssuerReport::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DividendsForeignIssuerReport*>(&to_msg);
  auto& from = static_cast<const DividendsForeignIssuerReport&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_security_name().empty()) {
    _this->_internal_set_security_name(from._internal_security_name());
  }
  if (!from._internal_isin().empty()) {
    _this->_internal_set_isin(from._internal_isin());
  }
  if (!from._internal_issuer_country().empty()) {
    _this->_internal_set_issuer_country(from._internal_issuer_country());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_record_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_record_date());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_payment_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_payment_date());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_dividend()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_dividend());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_external_commission()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_external_commission());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_dividend_gross()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_dividend_gross());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_tax()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_tax());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_dividend_amount()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_dividend_amount());
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DividendsForeignIssuerReport::CopyFrom(const DividendsForeignIssuerReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.DividendsForeignIssuerReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DividendsForeignIssuerReport::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DividendsForeignIssuerReport::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DividendsForeignIssuerReport::InternalSwap(DividendsForeignIssuerReport* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.security_name_, &other->_impl_.security_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.isin_, &other->_impl_.isin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.issuer_country_, &other->_impl_.issuer_country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.quantity_)
      + sizeof(DividendsForeignIssuerReport::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.record_date_)>(
          reinterpret_cast<char*>(&_impl_.record_date_),
          reinterpret_cast<char*>(&other->_impl_.record_date_));
}

::google::protobuf::Metadata DividendsForeignIssuerReport::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[28]);
}
// ===================================================================

class PortfolioStreamRequest::_Internal {
 public:
};

PortfolioStreamRequest::PortfolioStreamRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : accounts_{visibility, arena, from.accounts_},
        _cached_size_{0} {}

PortfolioStreamRequest::PortfolioStreamRequest(
    ::google::protobuf::Arena* arena,
    const PortfolioStreamRequest& from)
    : ::google::protobuf::Message(arena) {
  PortfolioStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        _cached_size_{0} {}

inline void PortfolioStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PortfolioStreamRequest::~PortfolioStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortfolioStreamRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PortfolioStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortfolioStreamRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 77, 2> PortfolioStreamRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PortfolioStreamRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string accounts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_.accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\74\10\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest"
    "accounts"
  }},
};

::uint8_t* PortfolioStreamRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string accounts = 1;
  for (int i = 0, n = this->_internal_accounts_size(); i < n; ++i) {
    const auto& s = this->_internal_accounts().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest.accounts");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
  return target;
}

::size_t PortfolioStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accounts = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_accounts().size());
  for (int i = 0, n = _internal_accounts().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_accounts().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PortfolioStreamRequest::_class_data_ = {
    PortfolioStreamRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PortfolioStreamRequest::GetClassData() const {
  return &_class_data_;
}

void PortfolioStreamRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PortfolioStreamRequest*>(&to_msg);
  auto& from = static_cast<const PortfolioStreamRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioStreamRequest::CopyFrom(const PortfolioStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortfolioStreamRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PortfolioStreamRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PortfolioStreamRequest::InternalSwap(PortfolioStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
}

::google::protobuf::Metadata PortfolioStreamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[29]);
}
// ===================================================================

class PortfolioStreamResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PortfolioStreamResponse, _impl_._oneof_case_);
  static const ::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult& subscriptions(const PortfolioStreamResponse* msg);
  static const ::tinkoff::public::invest::api::contract::v1::PortfolioResponse& portfolio(const PortfolioStreamResponse* msg);
  static const ::tinkoff::public::invest::api::contract::v1::Ping& ping(const PortfolioStreamResponse* msg);
};

const ::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult& PortfolioStreamResponse::_Internal::subscriptions(const PortfolioStreamResponse* msg) {
  return *msg->_impl_.payload_.subscriptions_;
}
const ::tinkoff::public::invest::api::contract::v1::PortfolioResponse& PortfolioStreamResponse::_Internal::portfolio(const PortfolioStreamResponse* msg) {
  return *msg->_impl_.payload_.portfolio_;
}
const ::tinkoff::public::invest::api::contract::v1::Ping& PortfolioStreamResponse::_Internal::ping(const PortfolioStreamResponse* msg) {
  return *msg->_impl_.payload_.ping_;
}
void PortfolioStreamResponse::set_allocated_subscriptions(::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult* subscriptions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscriptions) {
    ::google::protobuf::Arena* submessage_arena = subscriptions->GetArena();
    if (message_arena != submessage_arena) {
      subscriptions = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscriptions, submessage_arena);
    }
    set_has_subscriptions();
    _impl_.payload_.subscriptions_ = subscriptions;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse.subscriptions)
}
void PortfolioStreamResponse::set_allocated_portfolio(::tinkoff::public::invest::api::contract::v1::PortfolioResponse* portfolio) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (portfolio) {
    ::google::protobuf::Arena* submessage_arena = portfolio->GetArena();
    if (message_arena != submessage_arena) {
      portfolio = ::google::protobuf::internal::GetOwnedMessage(message_arena, portfolio, submessage_arena);
    }
    set_has_portfolio();
    _impl_.payload_.portfolio_ = portfolio;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse.portfolio)
}
void PortfolioStreamResponse::set_allocated_ping(::tinkoff::public::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse.ping)
}
void PortfolioStreamResponse::clear_ping() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    }
    clear_has_payload();
  }
}
PortfolioStreamResponse::PortfolioStreamResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PortfolioStreamResponse::PortfolioStreamResponse(
    ::google::protobuf::Arena* arena,
    const PortfolioStreamResponse& from)
    : ::google::protobuf::Message(arena) {
  PortfolioStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kSubscriptions:
        _impl_.payload_.subscriptions_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult>(arena, *from._impl_.payload_.subscriptions_);
        break;
      case kPortfolio:
        _impl_.payload_.portfolio_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::PortfolioResponse>(arena, *from._impl_.payload_.portfolio_);
        break;
      case kPing:
        _impl_.payload_.ping_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PortfolioStreamResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PortfolioStreamResponse::~PortfolioStreamResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortfolioStreamResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void PortfolioStreamResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kSubscriptions: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscriptions_;
      }
      break;
    }
    case kPortfolio: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.portfolio_;
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void PortfolioStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortfolioStreamResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> PortfolioStreamResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PortfolioStreamResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult subscriptions = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamResponse, _impl_.payload_.subscriptions_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.PortfolioResponse portfolio = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamResponse, _impl_.payload_.portfolio_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 3;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PortfolioResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Ping>()},
  }}, {{
  }},
};

::uint8_t* PortfolioStreamResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (payload_case()) {
    case kSubscriptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::subscriptions(this),
          _Internal::subscriptions(this).GetCachedSize(), target, stream);
      break;
    }
    case kPortfolio: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::portfolio(this),
          _Internal::portfolio(this).GetCachedSize(), target, stream);
      break;
    }
    case kPing: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::ping(this),
          _Internal::ping(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  return target;
}

::size_t PortfolioStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult subscriptions = 1;
    case kSubscriptions: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.subscriptions_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.PortfolioResponse portfolio = 2;
    case kPortfolio: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.portfolio_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 3;
    case kPing: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.ping_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PortfolioStreamResponse::_class_data_ = {
    PortfolioStreamResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PortfolioStreamResponse::GetClassData() const {
  return &_class_data_;
}

void PortfolioStreamResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PortfolioStreamResponse*>(&to_msg);
  auto& from = static_cast<const PortfolioStreamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kSubscriptions: {
      _this->_internal_mutable_subscriptions()->::tinkoff::public::invest::api::contract::v1::PortfolioSubscriptionResult::MergeFrom(
          from._internal_subscriptions());
      break;
    }
    case kPortfolio: {
      _this->_internal_mutable_portfolio()->::tinkoff::public::invest::api::contract::v1::PortfolioResponse::MergeFrom(
          from._internal_portfolio());
      break;
    }
    case kPing: {
      _this->_internal_mutable_ping()->::tinkoff::public::invest::api::contract::v1::Ping::MergeFrom(
          from._internal_ping());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioStreamResponse::CopyFrom(const PortfolioStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PortfolioStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortfolioStreamResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PortfolioStreamResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PortfolioStreamResponse::InternalSwap(PortfolioStreamResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PortfolioStreamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[30]);
}
// ===================================================================

class PortfolioSubscriptionResult::_Internal {
 public:
};

PortfolioSubscriptionResult::PortfolioSubscriptionResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : accounts_{visibility, arena, from.accounts_},
        _cached_size_{0} {}

PortfolioSubscriptionResult::PortfolioSubscriptionResult(
    ::google::protobuf::Arena* arena,
    const PortfolioSubscriptionResult& from)
    : ::google::protobuf::Message(arena) {
  PortfolioSubscriptionResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        _cached_size_{0} {}

inline void PortfolioSubscriptionResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PortfolioSubscriptionResult::~PortfolioSubscriptionResult() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PortfolioSubscriptionResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PortfolioSubscriptionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PortfolioSubscriptionResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PortfolioSubscriptionResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PortfolioSubscriptionResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::AccountSubscriptionStatus>()},
  }}, {{
  }},
};

::uint8_t* PortfolioSubscriptionResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_accounts_size()); i < n; i++) {
    const auto& repfield = this->_internal_accounts().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
  return target;
}

::size_t PortfolioSubscriptionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->_internal_accounts()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PortfolioSubscriptionResult::_class_data_ = {
    PortfolioSubscriptionResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PortfolioSubscriptionResult::GetClassData() const {
  return &_class_data_;
}

void PortfolioSubscriptionResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PortfolioSubscriptionResult*>(&to_msg);
  auto& from = static_cast<const PortfolioSubscriptionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(
      from._internal_accounts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioSubscriptionResult::CopyFrom(const PortfolioSubscriptionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PortfolioSubscriptionResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PortfolioSubscriptionResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PortfolioSubscriptionResult::InternalSwap(PortfolioSubscriptionResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
}

::google::protobuf::Metadata PortfolioSubscriptionResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[31]);
}
// ===================================================================

class AccountSubscriptionStatus::_Internal {
 public:
};

AccountSubscriptionStatus::AccountSubscriptionStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE AccountSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

AccountSubscriptionStatus::AccountSubscriptionStatus(
    ::google::protobuf::Arena* arena,
    const AccountSubscriptionStatus& from)
    : ::google::protobuf::Message(arena) {
  AccountSubscriptionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.subscription_status_ = from._impl_.subscription_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE AccountSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void AccountSubscriptionStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_status_ = {};
}
AccountSubscriptionStatus::~AccountSubscriptionStatus() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AccountSubscriptionStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AccountSubscriptionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.subscription_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AccountSubscriptionStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 82, 2> AccountSubscriptionStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967262,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AccountSubscriptionStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountSubscriptionStatus, _impl_.subscription_status_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.subscription_status_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
    {PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\77\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus"
    "account_id"
  }},
};

::uint8_t* AccountSubscriptionStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
  if (this->_internal_subscription_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_subscription_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
  return target;
}

::size_t AccountSubscriptionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // .tinkoff.public.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
  if (this->_internal_subscription_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_subscription_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AccountSubscriptionStatus::_class_data_ = {
    AccountSubscriptionStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AccountSubscriptionStatus::GetClassData() const {
  return &_class_data_;
}

void AccountSubscriptionStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AccountSubscriptionStatus*>(&to_msg);
  auto& from = static_cast<const AccountSubscriptionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_subscription_status() != 0) {
    _this->_internal_set_subscription_status(from._internal_subscription_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountSubscriptionStatus::CopyFrom(const AccountSubscriptionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.AccountSubscriptionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AccountSubscriptionStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AccountSubscriptionStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AccountSubscriptionStatus::InternalSwap(AccountSubscriptionStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.subscription_status_, other->_impl_.subscription_status_);
}

::google::protobuf::Metadata AccountSubscriptionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[32]);
}
// ===================================================================

class GetOperationsByCursorRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetOperationsByCursorRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& from(const GetOperationsByCursorRequest* msg);
  static void set_has_from(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& to(const GetOperationsByCursorRequest* msg);
  static void set_has_to(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& GetOperationsByCursorRequest::_Internal::from(const GetOperationsByCursorRequest* msg) {
  return *msg->_impl_.from_;
}
const ::google::protobuf::Timestamp& GetOperationsByCursorRequest::_Internal::to(const GetOperationsByCursorRequest* msg) {
  return *msg->_impl_.to_;
}
void GetOperationsByCursorRequest::clear_from() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetOperationsByCursorRequest::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetOperationsByCursorRequest::GetOperationsByCursorRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        operation_types_{visibility, arena, from.operation_types_},
        _operation_types_cached_byte_size_{0},
        account_id_(arena, from.account_id_),
        instrument_id_(arena, from.instrument_id_),
        cursor_(arena, from.cursor_) {}

GetOperationsByCursorRequest::GetOperationsByCursorRequest(
    ::google::protobuf::Arena* arena,
    const GetOperationsByCursorRequest& from)
    : ::google::protobuf::Message(arena) {
  GetOperationsByCursorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.from_)
                : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.to_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, without_overnights_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::without_overnights_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        operation_types_{visibility, arena},
        _operation_types_cached_byte_size_{0},
        account_id_(arena),
        instrument_id_(arena),
        cursor_(arena) {}

inline void GetOperationsByCursorRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, without_overnights_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::without_overnights_));
}
GetOperationsByCursorRequest::~GetOperationsByCursorRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetOperationsByCursorRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.instrument_id_.Destroy();
  _impl_.cursor_.Destroy();
  delete _impl_.from_;
  delete _impl_.to_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetOperationsByCursorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operation_types_.Clear();
  _impl_.account_id_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  _impl_.cursor_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.without_overnights_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.without_overnights_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetOperationsByCursorRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 112, 2> GetOperationsByCursorRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_._has_bits_),
    0, // no _extensions_
    17, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294837148,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetOperationsByCursorRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool without_trades = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_trades_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.account_id_)}},
    // string instrument_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.instrument_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp from = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.to_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string cursor = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.cursor_)}},
    // int32 limit = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOperationsByCursorRequest, _impl_.limit_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.limit_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.OperationType operation_types = 13;
    {::_pbi::TcParser::FastV32P1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.operation_types_)}},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOperationsByCursorRequest, _impl_.state_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.state_)}},
    // bool without_commissions = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetOperationsByCursorRequest, _impl_.without_commissions_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_commissions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.instrument_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 6;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 7;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string cursor = 11;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.cursor_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 limit = 12;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.limit_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .tinkoff.public.invest.api.contract.v1.OperationType operation_types = 13;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.operation_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 14;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool without_commissions = 15;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_commissions_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool without_trades = 16;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_trades_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool without_overnights = 17;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_overnights_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\102\12\15\0\0\6\0\0\0\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest"
    "account_id"
    "instrument_id"
    "cursor"
  }},
};

::uint8_t* GetOperationsByCursorRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string instrument_id = 2;
  if (!this->_internal_instrument_id().empty()) {
    const std::string& _s = this->_internal_instrument_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest.instrument_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp from = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::from(this),
        _Internal::from(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp to = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::to(this),
        _Internal::to(this).GetCachedSize(), target, stream);
  }

  // string cursor = 11;
  if (!this->_internal_cursor().empty()) {
    const std::string& _s = this->_internal_cursor();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest.cursor");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // int32 limit = 12;
  if (this->_internal_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_limit(), target);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.OperationType operation_types = 13;
  {
    std::size_t byte_size = _impl_._operation_types_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(13, _internal_operation_types(),
                                       byte_size, target);
    }
  }

  // .tinkoff.public.invest.api.contract.v1.OperationState state = 14;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        14, this->_internal_state(), target);
  }

  // bool without_commissions = 15;
  if (this->_internal_without_commissions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        15, this->_internal_without_commissions(), target);
  }

  // bool without_trades = 16;
  if (this->_internal_without_trades() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_without_trades(), target);
  }

  // bool without_overnights = 17;
  if (this->_internal_without_overnights() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        17, this->_internal_without_overnights(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
  return target;
}

::size_t GetOperationsByCursorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OperationType operation_types = 13;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_operation_types_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_operation_types().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._operation_types_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string instrument_id = 2;
  if (!this->_internal_instrument_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_id());
  }

  // string cursor = 11;
  if (!this->_internal_cursor().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cursor());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp from = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.from_);
    }

    // .google.protobuf.Timestamp to = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.to_);
    }

  }
  // int32 limit = 12;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_limit());
  }

  // .tinkoff.public.invest.api.contract.v1.OperationState state = 14;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // bool without_commissions = 15;
  if (this->_internal_without_commissions() != 0) {
    total_size += 2;
  }

  // bool without_trades = 16;
  if (this->_internal_without_trades() != 0) {
    total_size += 3;
  }

  // bool without_overnights = 17;
  if (this->_internal_without_overnights() != 0) {
    total_size += 3;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetOperationsByCursorRequest::_class_data_ = {
    GetOperationsByCursorRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetOperationsByCursorRequest::GetClassData() const {
  return &_class_data_;
}

void GetOperationsByCursorRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetOperationsByCursorRequest*>(&to_msg);
  auto& from = static_cast<const GetOperationsByCursorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_operation_types()->MergeFrom(from._internal_operation_types());
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  if (!from._internal_cursor().empty()) {
    _this->_internal_set_cursor(from._internal_cursor());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_from()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_from());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_to()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_to());
    }
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_without_commissions() != 0) {
    _this->_internal_set_without_commissions(from._internal_without_commissions());
  }
  if (from._internal_without_trades() != 0) {
    _this->_internal_set_without_trades(from._internal_without_trades());
  }
  if (from._internal_without_overnights() != 0) {
    _this->_internal_set_without_overnights(from._internal_without_overnights());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOperationsByCursorRequest::CopyFrom(const GetOperationsByCursorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetOperationsByCursorRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetOperationsByCursorRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetOperationsByCursorRequest::InternalSwap(GetOperationsByCursorRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.operation_types_.InternalSwap(&other->_impl_.operation_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cursor_, &other->_impl_.cursor_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_overnights_)
      + sizeof(GetOperationsByCursorRequest::_impl_.without_overnights_)
      - PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GetOperationsByCursorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[33]);
}
// ===================================================================

class GetOperationsByCursorResponse::_Internal {
 public:
};

GetOperationsByCursorResponse::GetOperationsByCursorResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : items_{visibility, arena, from.items_},
        next_cursor_(arena, from.next_cursor_),
        _cached_size_{0} {}

GetOperationsByCursorResponse::GetOperationsByCursorResponse(
    ::google::protobuf::Arena* arena,
    const GetOperationsByCursorResponse& from)
    : ::google::protobuf::Message(arena) {
  GetOperationsByCursorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.has_next_ = from._impl_.has_next_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        next_cursor_(arena),
        _cached_size_{0} {}

inline void GetOperationsByCursorResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.has_next_ = {};
}
GetOperationsByCursorResponse::~GetOperationsByCursorResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetOperationsByCursorResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_cursor_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetOperationsByCursorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.next_cursor_.ClearToEmpty();
  _impl_.has_next_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetOperationsByCursorResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 87, 2> GetOperationsByCursorResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967260,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetOperationsByCursorResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string next_cursor = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.next_cursor_)}},
    // bool has_next = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetOperationsByCursorResponse, _impl_.has_next_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.has_next_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_next = 1;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.has_next_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string next_cursor = 2;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.next_cursor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.OperationItem items = 6;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OperationItem>()},
  }}, {{
    "\103\0\13\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse"
    "next_cursor"
  }},
};

::uint8_t* GetOperationsByCursorResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool has_next = 1;
  if (this->_internal_has_next() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_has_next(), target);
  }

  // string next_cursor = 2;
  if (!this->_internal_next_cursor().empty()) {
    const std::string& _s = this->_internal_next_cursor();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse.next_cursor");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.OperationItem items = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
  return target;
}

::size_t GetOperationsByCursorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OperationItem items = 6;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string next_cursor = 2;
  if (!this->_internal_next_cursor().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_cursor());
  }

  // bool has_next = 1;
  if (this->_internal_has_next() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetOperationsByCursorResponse::_class_data_ = {
    GetOperationsByCursorResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetOperationsByCursorResponse::GetClassData() const {
  return &_class_data_;
}

void GetOperationsByCursorResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetOperationsByCursorResponse*>(&to_msg);
  auto& from = static_cast<const GetOperationsByCursorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  if (!from._internal_next_cursor().empty()) {
    _this->_internal_set_next_cursor(from._internal_next_cursor());
  }
  if (from._internal_has_next() != 0) {
    _this->_internal_set_has_next(from._internal_has_next());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOperationsByCursorResponse::CopyFrom(const GetOperationsByCursorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOperationsByCursorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetOperationsByCursorResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetOperationsByCursorResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetOperationsByCursorResponse::InternalSwap(GetOperationsByCursorResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_cursor_, &other->_impl_.next_cursor_, arena);
        swap(_impl_.has_next_, other->_impl_.has_next_);
}

::google::protobuf::Metadata GetOperationsByCursorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[34]);
}
// ===================================================================

class OperationItem::_Internal {
 public:
  using HasBits = decltype(std::declval<OperationItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OperationItem, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& date(const OperationItem* msg);
  static void set_has_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& payment(const OperationItem* msg);
  static void set_has_payment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& price(const OperationItem* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& commission(const OperationItem* msg);
  static void set_has_commission(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& yield(const OperationItem* msg);
  static void set_has_yield(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& yield_relative(const OperationItem* msg);
  static void set_has_yield_relative(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& accrued_int(const OperationItem* msg);
  static void set_has_accrued_int(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::google::protobuf::Timestamp& cancel_date_time(const OperationItem* msg);
  static void set_has_cancel_date_time(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::OperationItemTrades& trades_info(const OperationItem* msg);
  static void set_has_trades_info(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::google::protobuf::Timestamp& OperationItem::_Internal::date(const OperationItem* msg) {
  return *msg->_impl_.date_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationItem::_Internal::payment(const OperationItem* msg) {
  return *msg->_impl_.payment_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationItem::_Internal::price(const OperationItem* msg) {
  return *msg->_impl_.price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationItem::_Internal::commission(const OperationItem* msg) {
  return *msg->_impl_.commission_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationItem::_Internal::yield(const OperationItem* msg) {
  return *msg->_impl_.yield_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& OperationItem::_Internal::yield_relative(const OperationItem* msg) {
  return *msg->_impl_.yield_relative_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationItem::_Internal::accrued_int(const OperationItem* msg) {
  return *msg->_impl_.accrued_int_;
}
const ::google::protobuf::Timestamp& OperationItem::_Internal::cancel_date_time(const OperationItem* msg) {
  return *msg->_impl_.cancel_date_time_;
}
const ::tinkoff::public::invest::api::contract::v1::OperationItemTrades& OperationItem::_Internal::trades_info(const OperationItem* msg) {
  return *msg->_impl_.trades_info_;
}
void OperationItem::clear_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OperationItem::clear_payment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.payment_ != nullptr) _impl_.payment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OperationItem::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OperationItem::clear_commission() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.commission_ != nullptr) _impl_.commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OperationItem::clear_yield() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.yield_ != nullptr) _impl_.yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OperationItem::clear_yield_relative() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.yield_relative_ != nullptr) _impl_.yield_relative_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void OperationItem::clear_accrued_int() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.accrued_int_ != nullptr) _impl_.accrued_int_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void OperationItem::clear_cancel_date_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.cancel_date_time_ != nullptr) _impl_.cancel_date_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
OperationItem::OperationItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OperationItem)
}
inline PROTOBUF_NDEBUG_INLINE OperationItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cursor_(arena, from.cursor_),
        broker_account_id_(arena, from.broker_account_id_),
        id_(arena, from.id_),
        parent_operation_id_(arena, from.parent_operation_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        instrument_uid_(arena, from.instrument_uid_),
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_),
        position_uid_(arena, from.position_uid_),
        cancel_reason_(arena, from.cancel_reason_),
        asset_uid_(arena, from.asset_uid_) {}

OperationItem::OperationItem(
    ::google::protobuf::Arena* arena,
    const OperationItem& from)
    : ::google::protobuf::Message(arena) {
  OperationItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.date_)
                : nullptr;
  _impl_.payment_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.payment_)
                : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_)
                : nullptr;
  _impl_.commission_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.commission_)
                : nullptr;
  _impl_.yield_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.yield_)
                : nullptr;
  _impl_.yield_relative_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.yield_relative_)
                : nullptr;
  _impl_.accrued_int_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.accrued_int_)
                : nullptr;
  _impl_.cancel_date_time_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.cancel_date_time_)
                : nullptr;
  _impl_.trades_info_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::OperationItemTrades>(arena, *from._impl_.trades_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, instrument_kind_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::instrument_kind_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OperationItem)
}
inline PROTOBUF_NDEBUG_INLINE OperationItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        cursor_(arena),
        broker_account_id_(arena),
        id_(arena),
        parent_operation_id_(arena),
        name_(arena),
        description_(arena),
        instrument_uid_(arena),
        figi_(arena),
        instrument_type_(arena),
        position_uid_(arena),
        cancel_reason_(arena),
        asset_uid_(arena) {}

inline void OperationItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_),
           0,
           offsetof(Impl_, instrument_kind_) -
               offsetof(Impl_, date_) +
               sizeof(Impl_::instrument_kind_));
}
OperationItem::~OperationItem() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OperationItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperationItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.cursor_.Destroy();
  _impl_.broker_account_id_.Destroy();
  _impl_.id_.Destroy();
  _impl_.parent_operation_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.instrument_uid_.Destroy();
  _impl_.figi_.Destroy();
  _impl_.instrument_type_.Destroy();
  _impl_.position_uid_.Destroy();
  _impl_.cancel_reason_.Destroy();
  _impl_.asset_uid_.Destroy();
  delete _impl_.date_;
  delete _impl_.payment_;
  delete _impl_.price_;
  delete _impl_.commission_;
  delete _impl_.yield_;
  delete _impl_.yield_relative_;
  delete _impl_.accrued_int_;
  delete _impl_.cancel_date_time_;
  delete _impl_.trades_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OperationItem::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OperationItem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cursor_.ClearToEmpty();
  _impl_.broker_account_id_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.parent_operation_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.cancel_reason_.ClearToEmpty();
  _impl_.asset_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_ != nullptr);
      _impl_.date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payment_ != nullptr);
      _impl_.payment_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.commission_ != nullptr);
      _impl_.commission_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.yield_ != nullptr);
      _impl_.yield_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.yield_relative_ != nullptr);
      _impl_.yield_relative_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.accrued_int_ != nullptr);
      _impl_.accrued_int_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.cancel_date_time_ != nullptr);
      _impl_.cancel_date_time_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.trades_info_ != nullptr);
    _impl_.trades_info_->Clear();
  }
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.instrument_kind_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.instrument_kind_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperationItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 9, 210, 9> OperationItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationItem, _impl_._has_bits_),
    0, // no _extensions_
    64, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    1057783774,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OperationItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string cursor = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cursor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string broker_account_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.broker_account_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.id_)}},
    // string parent_operation_id = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.parent_operation_id_)}},
    // string name = 18;
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.name_)}},
    // string position_uid = 35;
    {::_pbi::TcParser::FastUS2,
     {666, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.position_uid_)}},
    // int64 quantity_rest = 52;
    {::_pbi::TcParser::FastV64S2,
     {928, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_rest_)}},
    // .google.protobuf.Timestamp date = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.date_)}},
    // .tinkoff.public.invest.api.contract.v1.OperationType type = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.type_)}},
    // string description = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.description_)}},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.state_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 41;
    {::_pbi::TcParser::FastMtS2,
     {714, 1, 1, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.payment_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 42;
    {::_pbi::TcParser::FastMtS2,
     {722, 2, 2, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue commission = 43;
    {::_pbi::TcParser::FastMtS2,
     {730, 3, 3, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 44;
    {::_pbi::TcParser::FastMtS2,
     {738, 4, 4, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation yield_relative = 45;
    {::_pbi::TcParser::FastMtS2,
     {746, 5, 5, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_relative_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue accrued_int = 46;
    {::_pbi::TcParser::FastMtS2,
     {754, 6, 6, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.accrued_int_)}},
    // string instrument_uid = 31;
    {::_pbi::TcParser::FastUS2,
     {506, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_uid_)}},
  }}, {{
    33, 0, 2,
    49400, 11, 28259, 20,
    65535, 65535
  }}, {{
    // string cursor = 1;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cursor_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string broker_account_id = 6;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.broker_account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 16;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent_operation_id = 17;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.parent_operation_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 18;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date = 21;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OperationType type = 22;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string description = 23;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OperationState state = 24;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 31;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 32;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 33;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.InstrumentType instrument_kind = 34;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_kind_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string position_uid = 35;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 41;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.payment_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 42;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.price_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue commission = 43;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.commission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 44;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation yield_relative = 45;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_relative_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue accrued_int = 46;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.accrued_int_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 51;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 quantity_rest = 52;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_rest_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 quantity_done = 53;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_done_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp cancel_date_time = 56;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cancel_date_time_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string cancel_reason = 57;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cancel_reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OperationItemTrades trades_info = 61;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.trades_info_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string asset_uid = 64;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.asset_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OperationItemTrades>()},
  }}, {{
    "\63\6\21\2\23\4\0\0\13\0\16\4\17\0\14\0\0\0\0\0\0\0\0\0\0\15\0\11\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OperationItem"
    "cursor"
    "broker_account_id"
    "id"
    "parent_operation_id"
    "name"
    "description"
    "instrument_uid"
    "figi"
    "instrument_type"
    "position_uid"
    "cancel_reason"
    "asset_uid"
  }},
};

::uint8_t* OperationItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OperationItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string cursor = 1;
  if (!this->_internal_cursor().empty()) {
    const std::string& _s = this->_internal_cursor();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.cursor");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string broker_account_id = 6;
  if (!this->_internal_broker_account_id().empty()) {
    const std::string& _s = this->_internal_broker_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.broker_account_id");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string id = 16;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.id");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // string parent_operation_id = 17;
  if (!this->_internal_parent_operation_id().empty()) {
    const std::string& _s = this->_internal_parent_operation_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.parent_operation_id");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // string name = 18;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.name");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp date = 21;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, _Internal::date(this),
        _Internal::date(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.OperationType type = 22;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        22, this->_internal_type(), target);
  }

  // string description = 23;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.description");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OperationState state = 24;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        24, this->_internal_state(), target);
  }

  // string instrument_uid = 31;
  if (!this->_internal_instrument_uid().empty()) {
    const std::string& _s = this->_internal_instrument_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.instrument_uid");
    target = stream->WriteStringMaybeAliased(31, _s, target);
  }

  // string figi = 32;
  if (!this->_internal_figi().empty()) {
    const std::string& _s = this->_internal_figi();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.figi");
    target = stream->WriteStringMaybeAliased(32, _s, target);
  }

  // string instrument_type = 33;
  if (!this->_internal_instrument_type().empty()) {
    const std::string& _s = this->_internal_instrument_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.instrument_type");
    target = stream->WriteStringMaybeAliased(33, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.InstrumentType instrument_kind = 34;
  if (this->_internal_instrument_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        34, this->_internal_instrument_kind(), target);
  }

  // string position_uid = 35;
  if (!this->_internal_position_uid().empty()) {
    const std::string& _s = this->_internal_position_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.position_uid");
    target = stream->WriteStringMaybeAliased(35, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 41;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        41, _Internal::payment(this),
        _Internal::payment(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 42;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        42, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue commission = 43;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        43, _Internal::commission(this),
        _Internal::commission(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 44;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        44, _Internal::yield(this),
        _Internal::yield(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation yield_relative = 45;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        45, _Internal::yield_relative(this),
        _Internal::yield_relative(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue accrued_int = 46;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        46, _Internal::accrued_int(this),
        _Internal::accrued_int(this).GetCachedSize(), target, stream);
  }

  // int64 quantity = 51;
  if (this->_internal_quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        51, this->_internal_quantity(), target);
  }

  // int64 quantity_rest = 52;
  if (this->_internal_quantity_rest() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        52, this->_internal_quantity_rest(), target);
  }

  // int64 quantity_done = 53;
  if (this->_internal_quantity_done() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        53, this->_internal_quantity_done(), target);
  }

  // .google.protobuf.Timestamp cancel_date_time = 56;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        56, _Internal::cancel_date_time(this),
        _Internal::cancel_date_time(this).GetCachedSize(), target, stream);
  }

  // string cancel_reason = 57;
  if (!this->_internal_cancel_reason().empty()) {
    const std::string& _s = this->_internal_cancel_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.cancel_reason");
    target = stream->WriteStringMaybeAliased(57, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.OperationItemTrades trades_info = 61;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        61, _Internal::trades_info(this),
        _Internal::trades_info(this).GetCachedSize(), target, stream);
  }

  // string asset_uid = 64;
  if (!this->_internal_asset_uid().empty()) {
    const std::string& _s = this->_internal_asset_uid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItem.asset_uid");
    target = stream->WriteStringMaybeAliased(64, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OperationItem)
  return target;
}

::size_t OperationItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OperationItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cursor = 1;
  if (!this->_internal_cursor().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cursor());
  }

  // string broker_account_id = 6;
  if (!this->_internal_broker_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_broker_account_id());
  }

  // string id = 16;
  if (!this->_internal_id().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string parent_operation_id = 17;
  if (!this->_internal_parent_operation_id().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_parent_operation_id());
  }

  // string name = 18;
  if (!this->_internal_name().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string description = 23;
  if (!this->_internal_description().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // string instrument_uid = 31;
  if (!this->_internal_instrument_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_uid());
  }

  // string figi = 32;
  if (!this->_internal_figi().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_figi());
  }

  // string instrument_type = 33;
  if (!this->_internal_instrument_type().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_instrument_type());
  }

  // string position_uid = 35;
  if (!this->_internal_position_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_position_uid());
  }

  // string cancel_reason = 57;
  if (!this->_internal_cancel_reason().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_cancel_reason());
  }

  // string asset_uid = 64;
  if (!this->_internal_asset_uid().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_asset_uid());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .google.protobuf.Timestamp date = 21;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.date_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue payment = 41;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payment_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 42;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue commission = 43;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.commission_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 44;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.yield_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation yield_relative = 45;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.yield_relative_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue accrued_int = 46;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.accrued_int_);
    }

    // .google.protobuf.Timestamp cancel_date_time = 56;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cancel_date_time_);
    }

  }
  // .tinkoff.public.invest.api.contract.v1.OperationItemTrades trades_info = 61;
  if (cached_has_bits & 0x00000100u) {
    total_size +=
        2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trades_info_);
  }

  // .tinkoff.public.invest.api.contract.v1.OperationType type = 22;
  if (this->_internal_type() != 0) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .tinkoff.public.invest.api.contract.v1.OperationState state = 24;
  if (this->_internal_state() != 0) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  // int64 quantity = 51;
  if (this->_internal_quantity() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_quantity());
  }

  // int64 quantity_rest = 52;
  if (this->_internal_quantity_rest() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_quantity_rest());
  }

  // int64 quantity_done = 53;
  if (this->_internal_quantity_done() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_quantity_done());
  }

  // .tinkoff.public.invest.api.contract.v1.InstrumentType instrument_kind = 34;
  if (this->_internal_instrument_kind() != 0) {
    total_size += 2 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_instrument_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperationItem::_class_data_ = {
    OperationItem::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OperationItem::GetClassData() const {
  return &_class_data_;
}

void OperationItem::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperationItem*>(&to_msg);
  auto& from = static_cast<const OperationItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OperationItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cursor().empty()) {
    _this->_internal_set_cursor(from._internal_cursor());
  }
  if (!from._internal_broker_account_id().empty()) {
    _this->_internal_set_broker_account_id(from._internal_broker_account_id());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_parent_operation_id().empty()) {
    _this->_internal_set_parent_operation_id(from._internal_parent_operation_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_cancel_reason().empty()) {
    _this->_internal_set_cancel_reason(from._internal_cancel_reason());
  }
  if (!from._internal_asset_uid().empty()) {
    _this->_internal_set_asset_uid(from._internal_asset_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_date());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_payment()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_payment());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_price());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_commission()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_commission());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_yield()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_yield());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_yield_relative()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_yield_relative());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_accrued_int()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_accrued_int());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_cancel_date_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_cancel_date_time());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_trades_info()->::tinkoff::public::invest::api::contract::v1::OperationItemTrades::MergeFrom(
        from._internal_trades_info());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  if (from._internal_quantity_rest() != 0) {
    _this->_internal_set_quantity_rest(from._internal_quantity_rest());
  }
  if (from._internal_quantity_done() != 0) {
    _this->_internal_set_quantity_done(from._internal_quantity_done());
  }
  if (from._internal_instrument_kind() != 0) {
    _this->_internal_set_instrument_kind(from._internal_instrument_kind());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationItem::CopyFrom(const OperationItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OperationItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperationItem::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OperationItem::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OperationItem::InternalSwap(OperationItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cursor_, &other->_impl_.cursor_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.broker_account_id_, &other->_impl_.broker_account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_operation_id_, &other->_impl_.parent_operation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cancel_reason_, &other->_impl_.cancel_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.asset_uid_, &other->_impl_.asset_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_kind_)
      + sizeof(OperationItem::_impl_.instrument_kind_)
      - PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.date_)>(
          reinterpret_cast<char*>(&_impl_.date_),
          reinterpret_cast<char*>(&other->_impl_.date_));
}

::google::protobuf::Metadata OperationItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[35]);
}
// ===================================================================

class OperationItemTrades::_Internal {
 public:
};

OperationItemTrades::OperationItemTrades(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : trades_{visibility, arena, from.trades_},
        _cached_size_{0} {}

OperationItemTrades::OperationItemTrades(
    ::google::protobuf::Arena* arena,
    const OperationItemTrades& from)
    : ::google::protobuf::Message(arena) {
  OperationItemTrades* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trades_{visibility, arena},
        _cached_size_{0} {}

inline void OperationItemTrades::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OperationItemTrades::~OperationItemTrades() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperationItemTrades::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OperationItemTrades::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperationItemTrades::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OperationItemTrades::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967263,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OperationItemTrades_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OperationItemTrade trades = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrades, _impl_.trades_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OperationItemTrade trades = 6;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrades, _impl_.trades_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::OperationItemTrade>()},
  }}, {{
  }},
};

::uint8_t* OperationItemTrades::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OperationItemTrade trades = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trades_size()); i < n; i++) {
    const auto& repfield = this->_internal_trades().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
  return target;
}

::size_t OperationItemTrades::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.OperationItemTrade trades = 6;
  total_size += 1UL * this->_internal_trades_size();
  for (const auto& msg : this->_internal_trades()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperationItemTrades::_class_data_ = {
    OperationItemTrades::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OperationItemTrades::GetClassData() const {
  return &_class_data_;
}

void OperationItemTrades::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperationItemTrades*>(&to_msg);
  auto& from = static_cast<const OperationItemTrades&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationItemTrades::CopyFrom(const OperationItemTrades& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OperationItemTrades)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperationItemTrades::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OperationItemTrades::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OperationItemTrades::InternalSwap(OperationItemTrades* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
}

::google::protobuf::Metadata OperationItemTrades::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[36]);
}
// ===================================================================

class OperationItemTrade::_Internal {
 public:
  using HasBits = decltype(std::declval<OperationItemTrade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& date(const OperationItemTrade* msg);
  static void set_has_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& price(const OperationItemTrade* msg);
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& yield(const OperationItemTrade* msg);
  static void set_has_yield(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::Quotation& yield_relative(const OperationItemTrade* msg);
  static void set_has_yield_relative(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::google::protobuf::Timestamp& OperationItemTrade::_Internal::date(const OperationItemTrade* msg) {
  return *msg->_impl_.date_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationItemTrade::_Internal::price(const OperationItemTrade* msg) {
  return *msg->_impl_.price_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& OperationItemTrade::_Internal::yield(const OperationItemTrade* msg) {
  return *msg->_impl_.yield_;
}
const ::tinkoff::public::invest::api::contract::v1::Quotation& OperationItemTrade::_Internal::yield_relative(const OperationItemTrade* msg) {
  return *msg->_impl_.yield_relative_;
}
void OperationItemTrade::clear_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OperationItemTrade::clear_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OperationItemTrade::clear_yield() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.yield_ != nullptr) _impl_.yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OperationItemTrade::clear_yield_relative() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.yield_relative_ != nullptr) _impl_.yield_relative_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
OperationItemTrade::OperationItemTrade(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        num_(arena, from.num_) {}

OperationItemTrade::OperationItemTrade(
    ::google::protobuf::Arena* arena,
    const OperationItemTrade& from)
    : ::google::protobuf::Message(arena) {
  OperationItemTrade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.date_)
                : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_)
                : nullptr;
  _impl_.yield_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.yield_)
                : nullptr;
  _impl_.yield_relative_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Quotation>(arena, *from._impl_.yield_relative_)
                : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        num_(arena) {}

inline void OperationItemTrade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, date_) +
               sizeof(Impl_::quantity_));
}
OperationItemTrade::~OperationItemTrade() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OperationItemTrade::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.num_.Destroy();
  delete _impl_.date_;
  delete _impl_.price_;
  delete _impl_.yield_;
  delete _impl_.yield_relative_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OperationItemTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_ != nullptr);
      _impl_.date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.yield_ != nullptr);
      _impl_.yield_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.yield_relative_ != nullptr);
      _impl_.yield_relative_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OperationItemTrade::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 68, 2> OperationItemTrade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_._has_bits_),
    0, // no _extensions_
    22, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4291787742,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OperationItemTrade_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 1, 1, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.price_)}},
    // string num = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.num_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 quantity = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OperationItemTrade, _impl_.quantity_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.quantity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 2, 2, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.yield_)}},
    // .google.protobuf.Timestamp date = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.date_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string num = 1;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date = 6;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 11;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 16;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 21;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.yield_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation yield_relative = 22;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.yield_relative_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\70\3\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OperationItemTrade"
    "num"
  }},
};

::uint8_t* OperationItemTrade::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string num = 1;
  if (!this->_internal_num().empty()) {
    const std::string& _s = this->_internal_num();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OperationItemTrade.num");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp date = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::date(this),
        _Internal::date(this).GetCachedSize(), target, stream);
  }

  // int64 quantity = 11;
  if (this->_internal_quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_quantity(), target);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 16;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 21;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, _Internal::yield(this),
        _Internal::yield(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation yield_relative = 22;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        22, _Internal::yield_relative(this),
        _Internal::yield_relative(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
  return target;
}

::size_t OperationItemTrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string num = 1;
  if (!this->_internal_num().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_num());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // .google.protobuf.Timestamp date = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.date_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 16;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.price_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue yield = 21;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.yield_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation yield_relative = 22;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.yield_relative_);
    }

  }
  // int64 quantity = 11;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OperationItemTrade::_class_data_ = {
    OperationItemTrade::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OperationItemTrade::GetClassData() const {
  return &_class_data_;
}

void OperationItemTrade::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OperationItemTrade*>(&to_msg);
  auto& from = static_cast<const OperationItemTrade&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_num().empty()) {
    _this->_internal_set_num(from._internal_num());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_date()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_date());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_price()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_price());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_yield()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_yield());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_yield_relative()->::tinkoff::public::invest::api::contract::v1::Quotation::MergeFrom(
          from._internal_yield_relative());
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_internal_set_quantity(from._internal_quantity());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationItemTrade::CopyFrom(const OperationItemTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OperationItemTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OperationItemTrade::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OperationItemTrade::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OperationItemTrade::InternalSwap(OperationItemTrade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.num_, &other->_impl_.num_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.quantity_)
      + sizeof(OperationItemTrade::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.date_)>(
          reinterpret_cast<char*>(&_impl_.date_),
          reinterpret_cast<char*>(&other->_impl_.date_));
}

::google::protobuf::Metadata OperationItemTrade::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[37]);
}
// ===================================================================

class PositionsStreamRequest::_Internal {
 public:
};

PositionsStreamRequest::PositionsStreamRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : accounts_{visibility, arena, from.accounts_},
        _cached_size_{0} {}

PositionsStreamRequest::PositionsStreamRequest(
    ::google::protobuf::Arena* arena,
    const PositionsStreamRequest& from)
    : ::google::protobuf::Message(arena) {
  PositionsStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        _cached_size_{0} {}

inline void PositionsStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionsStreamRequest::~PositionsStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsStreamRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsStreamRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 77, 2> PositionsStreamRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionsStreamRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string accounts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\74\10\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PositionsStreamRequest"
    "accounts"
  }},
};

::uint8_t* PositionsStreamRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string accounts = 1;
  for (int i = 0, n = this->_internal_accounts_size(); i < n; ++i) {
    const auto& s = this->_internal_accounts().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsStreamRequest.accounts");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
  return target;
}

::size_t PositionsStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string accounts = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_accounts().size());
  for (int i = 0, n = _internal_accounts().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_accounts().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsStreamRequest::_class_data_ = {
    PositionsStreamRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsStreamRequest::GetClassData() const {
  return &_class_data_;
}

void PositionsStreamRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsStreamRequest*>(&to_msg);
  auto& from = static_cast<const PositionsStreamRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsStreamRequest::CopyFrom(const PositionsStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsStreamRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsStreamRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsStreamRequest::InternalSwap(PositionsStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
}

::google::protobuf::Metadata PositionsStreamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[38]);
}
// ===================================================================

class PositionsStreamResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::tinkoff::public::invest::api::contract::v1::PositionsStreamResponse, _impl_._oneof_case_);
  static const ::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult& subscriptions(const PositionsStreamResponse* msg);
  static const ::tinkoff::public::invest::api::contract::v1::PositionData& position(const PositionsStreamResponse* msg);
  static const ::tinkoff::public::invest::api::contract::v1::Ping& ping(const PositionsStreamResponse* msg);
};

const ::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult& PositionsStreamResponse::_Internal::subscriptions(const PositionsStreamResponse* msg) {
  return *msg->_impl_.payload_.subscriptions_;
}
const ::tinkoff::public::invest::api::contract::v1::PositionData& PositionsStreamResponse::_Internal::position(const PositionsStreamResponse* msg) {
  return *msg->_impl_.payload_.position_;
}
const ::tinkoff::public::invest::api::contract::v1::Ping& PositionsStreamResponse::_Internal::ping(const PositionsStreamResponse* msg) {
  return *msg->_impl_.payload_.ping_;
}
void PositionsStreamResponse::set_allocated_subscriptions(::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult* subscriptions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscriptions) {
    ::google::protobuf::Arena* submessage_arena = subscriptions->GetArena();
    if (message_arena != submessage_arena) {
      subscriptions = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscriptions, submessage_arena);
    }
    set_has_subscriptions();
    _impl_.payload_.subscriptions_ = subscriptions;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse.subscriptions)
}
void PositionsStreamResponse::set_allocated_position(::tinkoff::public::invest::api::contract::v1::PositionData* position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (position) {
    ::google::protobuf::Arena* submessage_arena = position->GetArena();
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(message_arena, position, submessage_arena);
    }
    set_has_position();
    _impl_.payload_.position_ = position;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse.position)
}
void PositionsStreamResponse::set_allocated_ping(::tinkoff::public::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse.ping)
}
void PositionsStreamResponse::clear_ping() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    }
    clear_has_payload();
  }
}
PositionsStreamResponse::PositionsStreamResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PositionsStreamResponse::PositionsStreamResponse(
    ::google::protobuf::Arena* arena,
    const PositionsStreamResponse& from)
    : ::google::protobuf::Message(arena) {
  PositionsStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kSubscriptions:
        _impl_.payload_.subscriptions_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult>(arena, *from._impl_.payload_.subscriptions_);
        break;
      case kPosition:
        _impl_.payload_.position_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::PositionData>(arena, *from._impl_.payload_.position_);
        break;
      case kPing:
        _impl_.payload_.ping_ = CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PositionsStreamResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionsStreamResponse::~PositionsStreamResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsStreamResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void PositionsStreamResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kSubscriptions: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscriptions_;
      }
      break;
    }
    case kPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.position_;
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void PositionsStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsStreamResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> PositionsStreamResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PositionsStreamResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult subscriptions = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_.payload_.subscriptions_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.PositionData position = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_.payload_.position_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionData>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::Ping>()},
  }}, {{
  }},
};

::uint8_t* PositionsStreamResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (payload_case()) {
    case kSubscriptions: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::subscriptions(this),
          _Internal::subscriptions(this).GetCachedSize(), target, stream);
      break;
    }
    case kPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::position(this),
          _Internal::position(this).GetCachedSize(), target, stream);
      break;
    }
    case kPing: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::ping(this),
          _Internal::ping(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  return target;
}

::size_t PositionsStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult subscriptions = 1;
    case kSubscriptions: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.subscriptions_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.PositionData position = 2;
    case kPosition: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.position_);
      break;
    }
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 3;
    case kPing: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.ping_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsStreamResponse::_class_data_ = {
    PositionsStreamResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsStreamResponse::GetClassData() const {
  return &_class_data_;
}

void PositionsStreamResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsStreamResponse*>(&to_msg);
  auto& from = static_cast<const PositionsStreamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kSubscriptions: {
      _this->_internal_mutable_subscriptions()->::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionResult::MergeFrom(
          from._internal_subscriptions());
      break;
    }
    case kPosition: {
      _this->_internal_mutable_position()->::tinkoff::public::invest::api::contract::v1::PositionData::MergeFrom(
          from._internal_position());
      break;
    }
    case kPing: {
      _this->_internal_mutable_ping()->::tinkoff::public::invest::api::contract::v1::Ping::MergeFrom(
          from._internal_ping());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsStreamResponse::CopyFrom(const PositionsStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsStreamResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsStreamResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsStreamResponse::InternalSwap(PositionsStreamResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PositionsStreamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[39]);
}
// ===================================================================

class PositionsSubscriptionResult::_Internal {
 public:
};

PositionsSubscriptionResult::PositionsSubscriptionResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : accounts_{visibility, arena, from.accounts_},
        _cached_size_{0} {}

PositionsSubscriptionResult::PositionsSubscriptionResult(
    ::google::protobuf::Arena* arena,
    const PositionsSubscriptionResult& from)
    : ::google::protobuf::Message(arena) {
  PositionsSubscriptionResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        _cached_size_{0} {}

inline void PositionsSubscriptionResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionsSubscriptionResult::~PositionsSubscriptionResult() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsSubscriptionResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsSubscriptionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsSubscriptionResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PositionsSubscriptionResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PositionsSubscriptionResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsSubscriptionStatus>()},
  }}, {{
  }},
};

::uint8_t* PositionsSubscriptionResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_accounts_size()); i < n; i++) {
    const auto& repfield = this->_internal_accounts().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
  return target;
}

::size_t PositionsSubscriptionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->_internal_accounts()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsSubscriptionResult::_class_data_ = {
    PositionsSubscriptionResult::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsSubscriptionResult::GetClassData() const {
  return &_class_data_;
}

void PositionsSubscriptionResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsSubscriptionResult*>(&to_msg);
  auto& from = static_cast<const PositionsSubscriptionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(
      from._internal_accounts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsSubscriptionResult::CopyFrom(const PositionsSubscriptionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsSubscriptionResult::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsSubscriptionResult::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsSubscriptionResult::InternalSwap(PositionsSubscriptionResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
}

::google::protobuf::Metadata PositionsSubscriptionResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[40]);
}
// ===================================================================

class PositionsSubscriptionStatus::_Internal {
 public:
};

PositionsSubscriptionStatus::PositionsSubscriptionStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

PositionsSubscriptionStatus::PositionsSubscriptionStatus(
    ::google::protobuf::Arena* arena,
    const PositionsSubscriptionStatus& from)
    : ::google::protobuf::Message(arena) {
  PositionsSubscriptionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.subscription_status_ = from._impl_.subscription_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void PositionsSubscriptionStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_status_ = {};
}
PositionsSubscriptionStatus::~PositionsSubscriptionStatus() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsSubscriptionStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsSubscriptionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.subscription_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsSubscriptionStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 84, 2> PositionsSubscriptionStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967262,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PositionsSubscriptionStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PositionsSubscriptionStatus, _impl_.subscription_status_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.subscription_status_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\101\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus"
    "account_id"
  }},
};

::uint8_t* PositionsSubscriptionStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
  if (this->_internal_subscription_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_subscription_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
  return target;
}

::size_t PositionsSubscriptionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // .tinkoff.public.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
  if (this->_internal_subscription_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_subscription_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsSubscriptionStatus::_class_data_ = {
    PositionsSubscriptionStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsSubscriptionStatus::GetClassData() const {
  return &_class_data_;
}

void PositionsSubscriptionStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsSubscriptionStatus*>(&to_msg);
  auto& from = static_cast<const PositionsSubscriptionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_subscription_status() != 0) {
    _this->_internal_set_subscription_status(from._internal_subscription_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsSubscriptionStatus::CopyFrom(const PositionsSubscriptionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsSubscriptionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsSubscriptionStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsSubscriptionStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsSubscriptionStatus::InternalSwap(PositionsSubscriptionStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.subscription_status_, other->_impl_.subscription_status_);
}

::google::protobuf::Metadata PositionsSubscriptionStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[41]);
}
// ===================================================================

class PositionData::_Internal {
 public:
  using HasBits = decltype(std::declval<PositionData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PositionData, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& date(const PositionData* msg);
  static void set_has_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& PositionData::_Internal::date(const PositionData* msg) {
  return *msg->_impl_.date_;
}
void PositionData::clear_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PositionData::PositionData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionData)
}
inline PROTOBUF_NDEBUG_INLINE PositionData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        money_{visibility, arena, from.money_},
        securities_{visibility, arena, from.securities_},
        futures_{visibility, arena, from.futures_},
        options_{visibility, arena, from.options_},
        account_id_(arena, from.account_id_) {}

PositionData::PositionData(
    ::google::protobuf::Arena* arena,
    const PositionData& from)
    : ::google::protobuf::Message(arena) {
  PositionData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.date_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionData)
}
inline PROTOBUF_NDEBUG_INLINE PositionData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        money_{visibility, arena},
        securities_{visibility, arena},
        futures_{visibility, arena},
        options_{visibility, arena},
        account_id_(arena) {}

inline void PositionData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.date_ = {};
}
PositionData::~PositionData() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  delete _impl_.date_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionData::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.money_.Clear();
  _impl_.securities_.Clear();
  _impl_.futures_.Clear();
  _impl_.options_.Clear();
  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.date_ != nullptr);
    _impl_.date_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 5, 69, 2> PositionData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PositionData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.account_id_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsMoney money = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.money_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.securities_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.futures_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.options_)}},
    // .google.protobuf.Timestamp date = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 4, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.date_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsMoney money = 2;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.money_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.securities_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 4;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.futures_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 5;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.options_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp date = 6;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.date_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsMoney>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsSecurities>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsFutures>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::PositionsOptions>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\62\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PositionData"
    "account_id"
  }},
};

::uint8_t* PositionData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PositionData.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsMoney money = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_money_size()); i < n; i++) {
    const auto& repfield = this->_internal_money().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_securities_size()); i < n; i++) {
    const auto& repfield = this->_internal_securities().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_futures_size()); i < n; i++) {
    const auto& repfield = this->_internal_futures().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_options().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp date = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::date(this),
        _Internal::date(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionData)
  return target;
}

::size_t PositionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.PositionsMoney money = 2;
  total_size += 1UL * this->_internal_money_size();
  for (const auto& msg : this->_internal_money()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.PositionsSecurities securities = 3;
  total_size += 1UL * this->_internal_securities_size();
  for (const auto& msg : this->_internal_securities()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.PositionsFutures futures = 4;
  total_size += 1UL * this->_internal_futures_size();
  for (const auto& msg : this->_internal_futures()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.PositionsOptions options = 5;
  total_size += 1UL * this->_internal_options_size();
  for (const auto& msg : this->_internal_options()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // .google.protobuf.Timestamp date = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.date_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionData::_class_data_ = {
    PositionData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionData::GetClassData() const {
  return &_class_data_;
}

void PositionData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionData*>(&to_msg);
  auto& from = static_cast<const PositionData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_money()->MergeFrom(
      from._internal_money());
  _this->_internal_mutable_securities()->MergeFrom(
      from._internal_securities());
  _this->_internal_mutable_futures()->MergeFrom(
      from._internal_futures());
  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_date()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_date());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionData::CopyFrom(const PositionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionData::InternalSwap(PositionData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.money_.InternalSwap(&other->_impl_.money_);
  _impl_.securities_.InternalSwap(&other->_impl_.securities_);
  _impl_.futures_.InternalSwap(&other->_impl_.futures_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.date_, other->_impl_.date_);
}

::google::protobuf::Metadata PositionData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[42]);
}
// ===================================================================

class PositionsMoney::_Internal {
 public:
  using HasBits = decltype(std::declval<PositionsMoney>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_._has_bits_);
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& available_value(const PositionsMoney* msg);
  static void set_has_available_value(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tinkoff::public::invest::api::contract::v1::MoneyValue& blocked_value(const PositionsMoney* msg);
  static void set_has_blocked_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PositionsMoney::_Internal::available_value(const PositionsMoney* msg) {
  return *msg->_impl_.available_value_;
}
const ::tinkoff::public::invest::api::contract::v1::MoneyValue& PositionsMoney::_Internal::blocked_value(const PositionsMoney* msg) {
  return *msg->_impl_.blocked_value_;
}
void PositionsMoney::clear_available_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.available_value_ != nullptr) _impl_.available_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PositionsMoney::clear_blocked_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.blocked_value_ != nullptr) _impl_.blocked_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PositionsMoney::PositionsMoney(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PositionsMoney)
}
inline PROTOBUF_NDEBUG_INLINE PositionsMoney::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PositionsMoney::PositionsMoney(
    ::google::protobuf::Arena* arena,
    const PositionsMoney& from)
    : ::google::protobuf::Message(arena) {
  PositionsMoney* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.available_value_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.available_value_)
                : nullptr;
  _impl_.blocked_value_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tinkoff::public::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.blocked_value_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PositionsMoney)
}
inline PROTOBUF_NDEBUG_INLINE PositionsMoney::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionsMoney::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, available_value_),
           0,
           offsetof(Impl_, blocked_value_) -
               offsetof(Impl_, available_value_) +
               sizeof(Impl_::blocked_value_));
}
PositionsMoney::~PositionsMoney() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PositionsMoney)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PositionsMoney::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.available_value_;
  delete _impl_.blocked_value_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PositionsMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PositionsMoney)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.available_value_ != nullptr);
      _impl_.available_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.blocked_value_ != nullptr);
      _impl_.blocked_value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PositionsMoney::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PositionsMoney::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PositionsMoney_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.blocked_value_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue available_value = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.available_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue available_value = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.available_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_value = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.blocked_value_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public::invest::api::contract::v1::MoneyValue>()},
  }}, {{
  }},
};

::uint8_t* PositionsMoney::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PositionsMoney)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.MoneyValue available_value = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::available_value(this),
        _Internal::available_value(this).GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::blocked_value(this),
        _Internal::blocked_value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PositionsMoney)
  return target;
}

::size_t PositionsMoney::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PositionsMoney)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .tinkoff.public.invest.api.contract.v1.MoneyValue available_value = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.available_value_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue blocked_value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.blocked_value_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PositionsMoney::_class_data_ = {
    PositionsMoney::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PositionsMoney::GetClassData() const {
  return &_class_data_;
}

void PositionsMoney::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PositionsMoney*>(&to_msg);
  auto& from = static_cast<const PositionsMoney&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PositionsMoney)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_available_value()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_available_value());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_blocked_value()->::tinkoff::public::invest::api::contract::v1::MoneyValue::MergeFrom(
          from._internal_blocked_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsMoney::CopyFrom(const PositionsMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PositionsMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PositionsMoney::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PositionsMoney::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PositionsMoney::InternalSwap(PositionsMoney* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.blocked_value_)
      + sizeof(PositionsMoney::_impl_.blocked_value_)
      - PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.available_value_)>(
          reinterpret_cast<char*>(&_impl_.available_value_),
          reinterpret_cast<char*>(&other->_impl_.available_value_));
}

::google::protobuf::Metadata PositionsMoney::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_operations_2eproto_getter, &descriptor_table_operations_2eproto_once,
      file_level_metadata_operations_2eproto[43]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
