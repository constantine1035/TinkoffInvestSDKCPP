// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: users.proto
// Protobuf C++ Version: 5.27.0-dev

#include "users.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr UnaryLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : methods_{},
        limit_per_minute_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnaryLimit::UnaryLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UnaryLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnaryLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnaryLimitDefaultTypeInternal() {}
  union {
    UnaryLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnaryLimitDefaultTypeInternal _UnaryLimit_default_instance_;

inline constexpr StreamLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : streams_{},
        limit_{0},
        open_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StreamLimit::StreamLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StreamLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamLimitDefaultTypeInternal() {}
  union {
    StreamLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamLimitDefaultTypeInternal _StreamLimit_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetUserTariffRequest::GetUserTariffRequest(::_pbi::ConstantInitialized) {}
struct GetUserTariffRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserTariffRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserTariffRequestDefaultTypeInternal() {}
  union {
    GetUserTariffRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserTariffRequestDefaultTypeInternal _GetUserTariffRequest_default_instance_;

inline constexpr GetMarginAttributesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetMarginAttributesRequest::GetMarginAttributesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetMarginAttributesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMarginAttributesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMarginAttributesRequestDefaultTypeInternal() {}
  union {
    GetMarginAttributesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMarginAttributesRequestDefaultTypeInternal _GetMarginAttributesRequest_default_instance_;

inline constexpr GetInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : qualified_for_work_with_{},
        tariff_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prem_status_{false},
        qual_status_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetInfoResponse::GetInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInfoResponseDefaultTypeInternal() {}
  union {
    GetInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInfoResponseDefaultTypeInternal _GetInfoResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetInfoRequest::GetInfoRequest(::_pbi::ConstantInitialized) {}
struct GetInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetInfoRequestDefaultTypeInternal() {}
  union {
    GetInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetInfoRequestDefaultTypeInternal _GetInfoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GetAccountsRequest::GetAccountsRequest(::_pbi::ConstantInitialized) {}
struct GetAccountsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAccountsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAccountsRequestDefaultTypeInternal() {}
  union {
    GetAccountsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAccountsRequestDefaultTypeInternal _GetAccountsRequest_default_instance_;

inline constexpr GetUserTariffResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : unary_limits_{},
        stream_limits_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetUserTariffResponse::GetUserTariffResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetUserTariffResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserTariffResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserTariffResponseDefaultTypeInternal() {}
  union {
    GetUserTariffResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserTariffResponseDefaultTypeInternal _GetUserTariffResponse_default_instance_;

inline constexpr GetMarginAttributesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        liquid_portfolio_{nullptr},
        starting_margin_{nullptr},
        minimal_margin_{nullptr},
        funds_sufficiency_level_{nullptr},
        amount_of_missing_funds_{nullptr},
        corrected_margin_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetMarginAttributesResponse::GetMarginAttributesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetMarginAttributesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMarginAttributesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMarginAttributesResponseDefaultTypeInternal() {}
  union {
    GetMarginAttributesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMarginAttributesResponseDefaultTypeInternal _GetMarginAttributesResponse_default_instance_;

inline constexpr Account::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        opened_date_{nullptr},
        closed_date_{nullptr},
        type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::AccountType >(0)},
        status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::AccountStatus >(0)},
        access_level_{static_cast< ::tinkoff::public_::invest::api::contract::v1::AccessLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Account::Account(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountDefaultTypeInternal() {}
  union {
    Account _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountDefaultTypeInternal _Account_default_instance_;

inline constexpr GetAccountsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetAccountsResponse::GetAccountsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetAccountsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAccountsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAccountsResponseDefaultTypeInternal() {}
  union {
    GetAccountsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAccountsResponseDefaultTypeInternal _GetAccountsResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_users_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_users_2eproto = nullptr;
const ::uint32_t
    TableStruct_users_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetAccountsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetAccountsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetAccountsResponse, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_.opened_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_.closed_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Account, _impl_.access_level_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _impl_.liquid_portfolio_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _impl_.starting_margin_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _impl_.minimal_margin_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _impl_.funds_sufficiency_level_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _impl_.amount_of_missing_funds_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse, _impl_.corrected_margin_),
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetUserTariffRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetUserTariffResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetUserTariffResponse, _impl_.unary_limits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetUserTariffResponse, _impl_.stream_limits_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::UnaryLimit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::UnaryLimit, _impl_.limit_per_minute_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::UnaryLimit, _impl_.methods_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::StreamLimit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::StreamLimit, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::StreamLimit, _impl_.streams_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::StreamLimit, _impl_.open_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetInfoResponse, _impl_.prem_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetInfoResponse, _impl_.qual_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetInfoResponse, _impl_.qualified_for_work_with_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetInfoResponse, _impl_.tariff_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetAccountsRequest)},
        {8, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetAccountsResponse)},
        {17, 32, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::Account)},
        {39, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesRequest)},
        {48, 62, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse)},
        {68, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetUserTariffRequest)},
        {76, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetUserTariffResponse)},
        {86, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::UnaryLimit)},
        {96, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::StreamLimit)},
        {107, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetInfoRequest)},
        {115, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetInfoResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::public_::invest::api::contract::v1::_GetAccountsRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetAccountsResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_Account_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetMarginAttributesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetMarginAttributesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetUserTariffRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetUserTariffResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_UnaryLimit_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_StreamLimit_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetInfoRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetInfoResponse_default_instance_._instance,
};
const char descriptor_table_protodef_users_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013users.proto\022%tinkoff.public.invest.api"
    ".contract.v1\032\037google/protobuf/timestamp."
    "proto\032\014common.proto\"\024\n\022GetAccountsReques"
    "t\"W\n\023GetAccountsResponse\022@\n\010accounts\030\001 \003"
    "(\0132..tinkoff.public.invest.api.contract."
    "v1.Account\"\327\002\n\007Account\022\n\n\002id\030\001 \001(\t\022@\n\004ty"
    "pe\030\002 \001(\01622.tinkoff.public.invest.api.con"
    "tract.v1.AccountType\022\014\n\004name\030\003 \001(\t\022D\n\006st"
    "atus\030\004 \001(\01624.tinkoff.public.invest.api.c"
    "ontract.v1.AccountStatus\022/\n\013opened_date\030"
    "\005 \001(\0132\032.google.protobuf.Timestamp\022/\n\013clo"
    "sed_date\030\006 \001(\0132\032.google.protobuf.Timesta"
    "mp\022H\n\014access_level\030\007 \001(\01622.tinkoff.publi"
    "c.invest.api.contract.v1.AccessLevel\"0\n\032"
    "GetMarginAttributesRequest\022\022\n\naccount_id"
    "\030\001 \001(\t\"\365\003\n\033GetMarginAttributesResponse\022K"
    "\n\020liquid_portfolio\030\001 \001(\01321.tinkoff.publi"
    "c.invest.api.contract.v1.MoneyValue\022J\n\017s"
    "tarting_margin\030\002 \001(\01321.tinkoff.public.in"
    "vest.api.contract.v1.MoneyValue\022I\n\016minim"
    "al_margin\030\003 \001(\01321.tinkoff.public.invest."
    "api.contract.v1.MoneyValue\022Q\n\027funds_suff"
    "iciency_level\030\004 \001(\01320.tinkoff.public.inv"
    "est.api.contract.v1.Quotation\022R\n\027amount_"
    "of_missing_funds\030\005 \001(\01321.tinkoff.public."
    "invest.api.contract.v1.MoneyValue\022K\n\020cor"
    "rected_margin\030\006 \001(\01321.tinkoff.public.inv"
    "est.api.contract.v1.MoneyValue\"\026\n\024GetUse"
    "rTariffRequest\"\253\001\n\025GetUserTariffResponse"
    "\022G\n\014unary_limits\030\001 \003(\01321.tinkoff.public."
    "invest.api.contract.v1.UnaryLimit\022I\n\rstr"
    "eam_limits\030\002 \003(\01322.tinkoff.public.invest"
    ".api.contract.v1.StreamLimit\"7\n\nUnaryLim"
    "it\022\030\n\020limit_per_minute\030\001 \001(\005\022\017\n\007methods\030"
    "\002 \003(\t\";\n\013StreamLimit\022\r\n\005limit\030\001 \001(\005\022\017\n\007s"
    "treams\030\002 \003(\t\022\014\n\004open\030\003 \001(\005\"\020\n\016GetInfoReq"
    "uest\"l\n\017GetInfoResponse\022\023\n\013prem_status\030\001"
    " \001(\010\022\023\n\013qual_status\030\002 \001(\010\022\037\n\027qualified_f"
    "or_work_with\030\003 \003(\t\022\016\n\006tariff\030\004 \001(\t*\200\001\n\013A"
    "ccountType\022\034\n\030ACCOUNT_TYPE_UNSPECIFIED\020\000"
    "\022\030\n\024ACCOUNT_TYPE_TINKOFF\020\001\022\034\n\030ACCOUNT_TY"
    "PE_TINKOFF_IIS\020\002\022\033\n\027ACCOUNT_TYPE_INVEST_"
    "BOX\020\003*{\n\rAccountStatus\022\036\n\032ACCOUNT_STATUS"
    "_UNSPECIFIED\020\000\022\026\n\022ACCOUNT_STATUS_NEW\020\001\022\027"
    "\n\023ACCOUNT_STATUS_OPEN\020\002\022\031\n\025ACCOUNT_STATU"
    "S_CLOSED\020\003*\241\001\n\013AccessLevel\022$\n ACCOUNT_AC"
    "CESS_LEVEL_UNSPECIFIED\020\000\022$\n ACCOUNT_ACCE"
    "SS_LEVEL_FULL_ACCESS\020\001\022\"\n\036ACCOUNT_ACCESS"
    "_LEVEL_READ_ONLY\020\002\022\"\n\036ACCOUNT_ACCESS_LEV"
    "EL_NO_ACCESS\020\0032\273\004\n\014UsersService\022\204\001\n\013GetA"
    "ccounts\0229.tinkoff.public.invest.api.cont"
    "ract.v1.GetAccountsRequest\032:.tinkoff.pub"
    "lic.invest.api.contract.v1.GetAccountsRe"
    "sponse\022\234\001\n\023GetMarginAttributes\022A.tinkoff"
    ".public.invest.api.contract.v1.GetMargin"
    "AttributesRequest\032B.tinkoff.public.inves"
    "t.api.contract.v1.GetMarginAttributesRes"
    "ponse\022\212\001\n\rGetUserTariff\022;.tinkoff.public"
    ".invest.api.contract.v1.GetUserTariffReq"
    "uest\032<.tinkoff.public.invest.api.contrac"
    "t.v1.GetUserTariffResponse\022x\n\007GetInfo\0225."
    "tinkoff.public.invest.api.contract.v1.Ge"
    "tInfoRequest\0326.tinkoff.public.invest.api"
    ".contract.v1.GetInfoResponseBa\n\034ru.tinko"
    "ff.piapi.contract.v1P\001Z\014./;investapi\242\002\005T"
    "IAPI\252\002\024Tinkoff.InvestApi.V1\312\002\021Tinkoff\\In"
    "vest\\V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_users_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_users_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_users_2eproto = {
    false,
    false,
    2655,
    descriptor_table_protodef_users_2eproto,
    "users.proto",
    &descriptor_table_users_2eproto_once,
    descriptor_table_users_2eproto_deps,
    2,
    11,
    schemas,
    file_default_instances,
    TableStruct_users_2eproto::offsets,
    file_level_enum_descriptors_users_2eproto,
    file_level_service_descriptors_users_2eproto,
};
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* AccountType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_users_2eproto);
  return file_level_enum_descriptors_users_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AccountType_internal_data_[] = {
    262144u, 0u, };
bool AccountType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* AccountStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_users_2eproto);
  return file_level_enum_descriptors_users_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t AccountStatus_internal_data_[] = {
    262144u, 0u, };
bool AccountStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* AccessLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_users_2eproto);
  return file_level_enum_descriptors_users_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t AccessLevel_internal_data_[] = {
    262144u, 0u, };
bool AccessLevel_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class GetAccountsRequest::_Internal {
 public:
};

GetAccountsRequest::GetAccountsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetAccountsRequest)
}
GetAccountsRequest::GetAccountsRequest(
    ::google::protobuf::Arena* arena,
    const GetAccountsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetAccountsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetAccountsRequest)
}

const ::google::protobuf::MessageLite::ClassData*
GetAccountsRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetAccountsRequest, _impl_._cached_size_),
              false,
          },
          &GetAccountsRequest::MergeImpl,
          &GetAccountsRequest::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> GetAccountsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetAccountsRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetAccountsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata GetAccountsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetAccountsResponse::_Internal {
 public:
};

GetAccountsResponse::GetAccountsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAccountsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : accounts_{visibility, arena, from.accounts_},
        _cached_size_{0} {}

GetAccountsResponse::GetAccountsResponse(
    ::google::protobuf::Arena* arena,
    const GetAccountsResponse& from)
    : ::google::protobuf::Message(arena) {
  GetAccountsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAccountsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        _cached_size_{0} {}

inline void GetAccountsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetAccountsResponse::~GetAccountsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetAccountsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetAccountsResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetAccountsResponse, _impl_._cached_size_),
              false,
          },
          &GetAccountsResponse::MergeImpl,
          &GetAccountsResponse::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetAccountsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetAccountsResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetAccountsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.Account accounts = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetAccountsResponse, _impl_.accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.Account accounts = 1;
    {PROTOBUF_FIELD_OFFSET(GetAccountsResponse, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Account>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetAccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetAccountsResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetAccountsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.Account accounts = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_accounts_size());
       i < n; i++) {
    const auto& repfield = this->_internal_accounts().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
  return target;
}

::size_t GetAccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .tinkoff.public.invest.api.contract.v1.Account accounts = 1;
  total_size += 1UL * this->_internal_accounts_size();
  for (const auto& msg : this->_internal_accounts()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetAccountsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetAccountsResponse*>(&to_msg);
  auto& from = static_cast<const GetAccountsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(
      from._internal_accounts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAccountsResponse::CopyFrom(const GetAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetAccountsResponse::IsInitialized() const {
  return true;
}

void GetAccountsResponse::InternalSwap(GetAccountsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
}

::google::protobuf::Metadata GetAccountsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Account::_Internal {
 public:
  using HasBits = decltype(std::declval<Account>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Account, _impl_._has_bits_);
};

void Account::clear_opened_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.opened_date_ != nullptr) _impl_.opened_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Account::clear_closed_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.closed_date_ != nullptr) _impl_.closed_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Account::Account(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.Account)
}
inline PROTOBUF_NDEBUG_INLINE Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_) {}

Account::Account(
    ::google::protobuf::Arena* arena,
    const Account& from)
    : ::google::protobuf::Message(arena) {
  Account* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.opened_date_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.opened_date_)
                        : nullptr;
  _impl_.closed_date_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.closed_date_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, access_level_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::access_level_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.Account)
}
inline PROTOBUF_NDEBUG_INLINE Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena) {}

inline void Account::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, opened_date_),
           0,
           offsetof(Impl_, access_level_) -
               offsetof(Impl_, opened_date_) +
               sizeof(Impl_::access_level_));
}
Account::~Account() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.Account)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Account::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  delete _impl_.opened_date_;
  delete _impl_.closed_date_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Account::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Account, _impl_._cached_size_),
              false,
          },
          &Account::MergeImpl,
          &Account::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 60, 2> Account::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Account, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Account_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Account>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.id_)}},
    // .tinkoff.public.invest.api.contract.v1.AccountType type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Account, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.type_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.name_)}},
    // .tinkoff.public.invest.api.contract.v1.AccountStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Account, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.status_)}},
    // .google.protobuf.Timestamp opened_date = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.opened_date_)}},
    // .google.protobuf.Timestamp closed_date = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(Account, _impl_.closed_date_)}},
    // .tinkoff.public.invest.api.contract.v1.AccessLevel access_level = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Account, _impl_.access_level_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.access_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.AccountType type = 2;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.AccountStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp opened_date = 5;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.opened_date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp closed_date = 6;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.closed_date_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.AccessLevel access_level = 7;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.access_level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\55\2\0\4\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.Account"
    "id"
    "name"
  }},
};

PROTOBUF_NOINLINE void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.Account)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.opened_date_ != nullptr);
      _impl_.opened_date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.closed_date_ != nullptr);
      _impl_.closed_date_->Clear();
    }
  }
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.access_level_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.access_level_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Account::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* Account::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.Account)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Account.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.AccountType type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Account.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .tinkoff.public.invest.api.contract.v1.AccountStatus status = 4;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_status(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp opened_date = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.opened_date_, _impl_.opened_date_->GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp closed_date = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.closed_date_, _impl_.closed_date_->GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.AccessLevel access_level = 7;
  if (this->_internal_access_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_access_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.Account)
  return target;
}

::size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.Account)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp opened_date = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.opened_date_);
    }

    // .google.protobuf.Timestamp closed_date = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.closed_date_);
    }

  }
  // .tinkoff.public.invest.api.contract.v1.AccountType type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .tinkoff.public.invest.api.contract.v1.AccountStatus status = 4;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // .tinkoff.public.invest.api.contract.v1.AccessLevel access_level = 7;
  if (this->_internal_access_level() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_access_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Account::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Account*>(&to_msg);
  auto& from = static_cast<const Account&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.Account)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.opened_date_ != nullptr);
      if (_this->_impl_.opened_date_ == nullptr) {
        _this->_impl_.opened_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.opened_date_);
      } else {
        _this->_impl_.opened_date_->MergeFrom(*from._impl_.opened_date_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.closed_date_ != nullptr);
      if (_this->_impl_.closed_date_ == nullptr) {
        _this->_impl_.closed_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.closed_date_);
      } else {
        _this->_impl_.closed_date_->MergeFrom(*from._impl_.closed_date_);
      }
    }
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_access_level() != 0) {
    _this->_impl_.access_level_ = from._impl_.access_level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Account::IsInitialized() const {
  return true;
}

void Account::InternalSwap(Account* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Account, _impl_.access_level_)
      + sizeof(Account::_impl_.access_level_)
      - PROTOBUF_FIELD_OFFSET(Account, _impl_.opened_date_)>(
          reinterpret_cast<char*>(&_impl_.opened_date_),
          reinterpret_cast<char*>(&other->_impl_.opened_date_));
}

::google::protobuf::Metadata Account::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetMarginAttributesRequest::_Internal {
 public:
};

GetMarginAttributesRequest::GetMarginAttributesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetMarginAttributesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

GetMarginAttributesRequest::GetMarginAttributesRequest(
    ::google::protobuf::Arena* arena,
    const GetMarginAttributesRequest& from)
    : ::google::protobuf::Message(arena) {
  GetMarginAttributesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetMarginAttributesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void GetMarginAttributesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetMarginAttributesRequest::~GetMarginAttributesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetMarginAttributesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.account_id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetMarginAttributesRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetMarginAttributesRequest, _impl_._cached_size_),
              false,
          },
          &GetMarginAttributesRequest::MergeImpl,
          &GetMarginAttributesRequest::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 83, 2> GetMarginAttributesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetMarginAttributesRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetMarginAttributesRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetMarginAttributesRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\100\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void GetMarginAttributesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetMarginAttributesRequest::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetMarginAttributesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest.account_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
  return target;
}

::size_t GetMarginAttributesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string account_id = 1;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetMarginAttributesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetMarginAttributesRequest*>(&to_msg);
  auto& from = static_cast<const GetMarginAttributesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMarginAttributesRequest::CopyFrom(const GetMarginAttributesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetMarginAttributesRequest::IsInitialized() const {
  return true;
}

void GetMarginAttributesRequest::InternalSwap(GetMarginAttributesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata GetMarginAttributesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetMarginAttributesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetMarginAttributesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_._has_bits_);
};

void GetMarginAttributesResponse::clear_liquid_portfolio() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.liquid_portfolio_ != nullptr) _impl_.liquid_portfolio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetMarginAttributesResponse::clear_starting_margin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.starting_margin_ != nullptr) _impl_.starting_margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GetMarginAttributesResponse::clear_minimal_margin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.minimal_margin_ != nullptr) _impl_.minimal_margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetMarginAttributesResponse::clear_funds_sufficiency_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.funds_sufficiency_level_ != nullptr) _impl_.funds_sufficiency_level_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void GetMarginAttributesResponse::clear_amount_of_missing_funds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.amount_of_missing_funds_ != nullptr) _impl_.amount_of_missing_funds_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GetMarginAttributesResponse::clear_corrected_margin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.corrected_margin_ != nullptr) _impl_.corrected_margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
GetMarginAttributesResponse::GetMarginAttributesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetMarginAttributesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetMarginAttributesResponse::GetMarginAttributesResponse(
    ::google::protobuf::Arena* arena,
    const GetMarginAttributesResponse& from)
    : ::google::protobuf::Message(arena) {
  GetMarginAttributesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.liquid_portfolio_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.liquid_portfolio_)
                        : nullptr;
  _impl_.starting_margin_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.starting_margin_)
                        : nullptr;
  _impl_.minimal_margin_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.minimal_margin_)
                        : nullptr;
  _impl_.funds_sufficiency_level_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.funds_sufficiency_level_)
                        : nullptr;
  _impl_.amount_of_missing_funds_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.amount_of_missing_funds_)
                        : nullptr;
  _impl_.corrected_margin_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.corrected_margin_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetMarginAttributesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetMarginAttributesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, liquid_portfolio_),
           0,
           offsetof(Impl_, corrected_margin_) -
               offsetof(Impl_, liquid_portfolio_) +
               sizeof(Impl_::corrected_margin_));
}
GetMarginAttributesResponse::~GetMarginAttributesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetMarginAttributesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.liquid_portfolio_;
  delete _impl_.starting_margin_;
  delete _impl_.minimal_margin_;
  delete _impl_.funds_sufficiency_level_;
  delete _impl_.amount_of_missing_funds_;
  delete _impl_.corrected_margin_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetMarginAttributesResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_._cached_size_),
              false,
          },
          &GetMarginAttributesResponse::MergeImpl,
          &GetMarginAttributesResponse::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> GetMarginAttributesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetMarginAttributesResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMarginAttributesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue liquid_portfolio = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.liquid_portfolio_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue starting_margin = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.starting_margin_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue minimal_margin = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.minimal_margin_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation funds_sufficiency_level = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.funds_sufficiency_level_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue amount_of_missing_funds = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.amount_of_missing_funds_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue corrected_margin = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.corrected_margin_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue liquid_portfolio = 1;
    {PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.liquid_portfolio_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue starting_margin = 2;
    {PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.starting_margin_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue minimal_margin = 3;
    {PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.minimal_margin_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation funds_sufficiency_level = 4;
    {PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.funds_sufficiency_level_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue amount_of_missing_funds = 5;
    {PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.amount_of_missing_funds_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue corrected_margin = 6;
    {PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.corrected_margin_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetMarginAttributesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.liquid_portfolio_ != nullptr);
      _impl_.liquid_portfolio_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.starting_margin_ != nullptr);
      _impl_.starting_margin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.minimal_margin_ != nullptr);
      _impl_.minimal_margin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.funds_sufficiency_level_ != nullptr);
      _impl_.funds_sufficiency_level_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.amount_of_missing_funds_ != nullptr);
      _impl_.amount_of_missing_funds_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.corrected_margin_ != nullptr);
      _impl_.corrected_margin_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetMarginAttributesResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetMarginAttributesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tinkoff.public.invest.api.contract.v1.MoneyValue liquid_portfolio = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.liquid_portfolio_, _impl_.liquid_portfolio_->GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue starting_margin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.starting_margin_, _impl_.starting_margin_->GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue minimal_margin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.minimal_margin_, _impl_.minimal_margin_->GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.Quotation funds_sufficiency_level = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.funds_sufficiency_level_, _impl_.funds_sufficiency_level_->GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue amount_of_missing_funds = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.amount_of_missing_funds_, _impl_.amount_of_missing_funds_->GetCachedSize(), target, stream);
  }

  // .tinkoff.public.invest.api.contract.v1.MoneyValue corrected_margin = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.corrected_margin_, _impl_.corrected_margin_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
  return target;
}

::size_t GetMarginAttributesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // .tinkoff.public.invest.api.contract.v1.MoneyValue liquid_portfolio = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.liquid_portfolio_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue starting_margin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.starting_margin_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue minimal_margin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.minimal_margin_);
    }

    // .tinkoff.public.invest.api.contract.v1.Quotation funds_sufficiency_level = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.funds_sufficiency_level_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue amount_of_missing_funds = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.amount_of_missing_funds_);
    }

    // .tinkoff.public.invest.api.contract.v1.MoneyValue corrected_margin = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.corrected_margin_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetMarginAttributesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetMarginAttributesResponse*>(&to_msg);
  auto& from = static_cast<const GetMarginAttributesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.liquid_portfolio_ != nullptr);
      if (_this->_impl_.liquid_portfolio_ == nullptr) {
        _this->_impl_.liquid_portfolio_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.liquid_portfolio_);
      } else {
        _this->_impl_.liquid_portfolio_->MergeFrom(*from._impl_.liquid_portfolio_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.starting_margin_ != nullptr);
      if (_this->_impl_.starting_margin_ == nullptr) {
        _this->_impl_.starting_margin_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.starting_margin_);
      } else {
        _this->_impl_.starting_margin_->MergeFrom(*from._impl_.starting_margin_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.minimal_margin_ != nullptr);
      if (_this->_impl_.minimal_margin_ == nullptr) {
        _this->_impl_.minimal_margin_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.minimal_margin_);
      } else {
        _this->_impl_.minimal_margin_->MergeFrom(*from._impl_.minimal_margin_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.funds_sufficiency_level_ != nullptr);
      if (_this->_impl_.funds_sufficiency_level_ == nullptr) {
        _this->_impl_.funds_sufficiency_level_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.funds_sufficiency_level_);
      } else {
        _this->_impl_.funds_sufficiency_level_->MergeFrom(*from._impl_.funds_sufficiency_level_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.amount_of_missing_funds_ != nullptr);
      if (_this->_impl_.amount_of_missing_funds_ == nullptr) {
        _this->_impl_.amount_of_missing_funds_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.amount_of_missing_funds_);
      } else {
        _this->_impl_.amount_of_missing_funds_->MergeFrom(*from._impl_.amount_of_missing_funds_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.corrected_margin_ != nullptr);
      if (_this->_impl_.corrected_margin_ == nullptr) {
        _this->_impl_.corrected_margin_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.corrected_margin_);
      } else {
        _this->_impl_.corrected_margin_->MergeFrom(*from._impl_.corrected_margin_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMarginAttributesResponse::CopyFrom(const GetMarginAttributesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetMarginAttributesResponse::IsInitialized() const {
  return true;
}

void GetMarginAttributesResponse::InternalSwap(GetMarginAttributesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.corrected_margin_)
      + sizeof(GetMarginAttributesResponse::_impl_.corrected_margin_)
      - PROTOBUF_FIELD_OFFSET(GetMarginAttributesResponse, _impl_.liquid_portfolio_)>(
          reinterpret_cast<char*>(&_impl_.liquid_portfolio_),
          reinterpret_cast<char*>(&other->_impl_.liquid_portfolio_));
}

::google::protobuf::Metadata GetMarginAttributesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetUserTariffRequest::_Internal {
 public:
};

GetUserTariffRequest::GetUserTariffRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetUserTariffRequest)
}
GetUserTariffRequest::GetUserTariffRequest(
    ::google::protobuf::Arena* arena,
    const GetUserTariffRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetUserTariffRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetUserTariffRequest)
}

const ::google::protobuf::MessageLite::ClassData*
GetUserTariffRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetUserTariffRequest, _impl_._cached_size_),
              false,
          },
          &GetUserTariffRequest::MergeImpl,
          &GetUserTariffRequest::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> GetUserTariffRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetUserTariffRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetUserTariffRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata GetUserTariffRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetUserTariffResponse::_Internal {
 public:
};

GetUserTariffResponse::GetUserTariffResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetUserTariffResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : unary_limits_{visibility, arena, from.unary_limits_},
        stream_limits_{visibility, arena, from.stream_limits_},
        _cached_size_{0} {}

GetUserTariffResponse::GetUserTariffResponse(
    ::google::protobuf::Arena* arena,
    const GetUserTariffResponse& from)
    : ::google::protobuf::Message(arena) {
  GetUserTariffResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetUserTariffResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : unary_limits_{visibility, arena},
        stream_limits_{visibility, arena},
        _cached_size_{0} {}

inline void GetUserTariffResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetUserTariffResponse::~GetUserTariffResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetUserTariffResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetUserTariffResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetUserTariffResponse, _impl_._cached_size_),
              false,
          },
          &GetUserTariffResponse::MergeImpl,
          &GetUserTariffResponse::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetUserTariffResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GetUserTariffResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetUserTariffResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.StreamLimit stream_limits = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GetUserTariffResponse, _impl_.stream_limits_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.UnaryLimit unary_limits = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetUserTariffResponse, _impl_.unary_limits_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.UnaryLimit unary_limits = 1;
    {PROTOBUF_FIELD_OFFSET(GetUserTariffResponse, _impl_.unary_limits_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.StreamLimit stream_limits = 2;
    {PROTOBUF_FIELD_OFFSET(GetUserTariffResponse, _impl_.stream_limits_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::UnaryLimit>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::StreamLimit>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetUserTariffResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unary_limits_.Clear();
  _impl_.stream_limits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetUserTariffResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetUserTariffResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .tinkoff.public.invest.api.contract.v1.UnaryLimit unary_limits = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_unary_limits_size());
       i < n; i++) {
    const auto& repfield = this->_internal_unary_limits().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .tinkoff.public.invest.api.contract.v1.StreamLimit stream_limits = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_stream_limits_size());
       i < n; i++) {
    const auto& repfield = this->_internal_stream_limits().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
  return target;
}

::size_t GetUserTariffResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .tinkoff.public.invest.api.contract.v1.UnaryLimit unary_limits = 1;
  total_size += 1UL * this->_internal_unary_limits_size();
  for (const auto& msg : this->_internal_unary_limits()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .tinkoff.public.invest.api.contract.v1.StreamLimit stream_limits = 2;
  total_size += 1UL * this->_internal_stream_limits_size();
  for (const auto& msg : this->_internal_stream_limits()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetUserTariffResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetUserTariffResponse*>(&to_msg);
  auto& from = static_cast<const GetUserTariffResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_unary_limits()->MergeFrom(
      from._internal_unary_limits());
  _this->_internal_mutable_stream_limits()->MergeFrom(
      from._internal_stream_limits());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserTariffResponse::CopyFrom(const GetUserTariffResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetUserTariffResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetUserTariffResponse::IsInitialized() const {
  return true;
}

void GetUserTariffResponse::InternalSwap(GetUserTariffResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unary_limits_.InternalSwap(&other->_impl_.unary_limits_);
  _impl_.stream_limits_.InternalSwap(&other->_impl_.stream_limits_);
}

::google::protobuf::Metadata GetUserTariffResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnaryLimit::_Internal {
 public:
};

UnaryLimit::UnaryLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.UnaryLimit)
}
inline PROTOBUF_NDEBUG_INLINE UnaryLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : methods_{visibility, arena, from.methods_},
        _cached_size_{0} {}

UnaryLimit::UnaryLimit(
    ::google::protobuf::Arena* arena,
    const UnaryLimit& from)
    : ::google::protobuf::Message(arena) {
  UnaryLimit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.limit_per_minute_ = from._impl_.limit_per_minute_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.UnaryLimit)
}
inline PROTOBUF_NDEBUG_INLINE UnaryLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : methods_{visibility, arena},
        _cached_size_{0} {}

inline void UnaryLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limit_per_minute_ = {};
}
UnaryLimit::~UnaryLimit() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.UnaryLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UnaryLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UnaryLimit::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UnaryLimit, _impl_._cached_size_),
              false,
          },
          &UnaryLimit::MergeImpl,
          &UnaryLimit::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 64, 2> UnaryLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UnaryLimit_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::UnaryLimit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string methods = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UnaryLimit, _impl_.methods_)}},
    // int32 limit_per_minute = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnaryLimit, _impl_.limit_per_minute_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnaryLimit, _impl_.limit_per_minute_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 limit_per_minute = 1;
    {PROTOBUF_FIELD_OFFSET(UnaryLimit, _impl_.limit_per_minute_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string methods = 2;
    {PROTOBUF_FIELD_OFFSET(UnaryLimit, _impl_.methods_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\60\0\7\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.UnaryLimit"
    "methods"
  }},
};

PROTOBUF_NOINLINE void UnaryLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.UnaryLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.methods_.Clear();
  _impl_.limit_per_minute_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UnaryLimit::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* UnaryLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.UnaryLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 limit_per_minute = 1;
  if (this->_internal_limit_per_minute() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_limit_per_minute(), target);
  }

  // repeated string methods = 2;
  for (int i = 0, n = this->_internal_methods_size(); i < n; ++i) {
    const auto& s = this->_internal_methods().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.UnaryLimit.methods");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.UnaryLimit)
  return target;
}

::size_t UnaryLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.UnaryLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string methods = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_methods().size());
  for (int i = 0, n = _internal_methods().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_methods().Get(i));
  }
  // int32 limit_per_minute = 1;
  if (this->_internal_limit_per_minute() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_limit_per_minute());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UnaryLimit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnaryLimit*>(&to_msg);
  auto& from = static_cast<const UnaryLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.UnaryLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_methods()->MergeFrom(from._internal_methods());
  if (from._internal_limit_per_minute() != 0) {
    _this->_impl_.limit_per_minute_ = from._impl_.limit_per_minute_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnaryLimit::CopyFrom(const UnaryLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.UnaryLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UnaryLimit::IsInitialized() const {
  return true;
}

void UnaryLimit::InternalSwap(UnaryLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.methods_.InternalSwap(&other->_impl_.methods_);
        swap(_impl_.limit_per_minute_, other->_impl_.limit_per_minute_);
}

::google::protobuf::Metadata UnaryLimit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StreamLimit::_Internal {
 public:
};

StreamLimit::StreamLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.StreamLimit)
}
inline PROTOBUF_NDEBUG_INLINE StreamLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : streams_{visibility, arena, from.streams_},
        _cached_size_{0} {}

StreamLimit::StreamLimit(
    ::google::protobuf::Arena* arena,
    const StreamLimit& from)
    : ::google::protobuf::Message(arena) {
  StreamLimit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, open_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::open_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.StreamLimit)
}
inline PROTOBUF_NDEBUG_INLINE StreamLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : streams_{visibility, arena},
        _cached_size_{0} {}

inline void StreamLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           0,
           offsetof(Impl_, open_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::open_));
}
StreamLimit::~StreamLimit() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.StreamLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StreamLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StreamLimit::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_._cached_size_),
              false,
          },
          &StreamLimit::MergeImpl,
          &StreamLimit::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 65, 2> StreamLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StreamLimit_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::StreamLimit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 limit = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamLimit, _impl_.limit_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.limit_)}},
    // repeated string streams = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.streams_)}},
    // int32 open = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StreamLimit, _impl_.open_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.open_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 limit = 1;
    {PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated string streams = 2;
    {PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.streams_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 open = 3;
    {PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.open_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\61\0\7\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.StreamLimit"
    "streams"
  }},
};

PROTOBUF_NOINLINE void StreamLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.StreamLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.streams_.Clear();
  ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.open_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.open_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StreamLimit::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* StreamLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.StreamLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 limit = 1;
  if (this->_internal_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_limit(), target);
  }

  // repeated string streams = 2;
  for (int i = 0, n = this->_internal_streams_size(); i < n; ++i) {
    const auto& s = this->_internal_streams().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.StreamLimit.streams");
    target = stream->WriteString(2, s, target);
  }

  // int32 open = 3;
  if (this->_internal_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_open(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.StreamLimit)
  return target;
}

::size_t StreamLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.StreamLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string streams = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_streams().size());
  for (int i = 0, n = _internal_streams().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_streams().Get(i));
  }
  // int32 limit = 1;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_limit());
  }

  // int32 open = 3;
  if (this->_internal_open() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_open());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StreamLimit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StreamLimit*>(&to_msg);
  auto& from = static_cast<const StreamLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.StreamLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_streams()->MergeFrom(from._internal_streams());
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_open() != 0) {
    _this->_impl_.open_ = from._impl_.open_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StreamLimit::CopyFrom(const StreamLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.StreamLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StreamLimit::IsInitialized() const {
  return true;
}

void StreamLimit::InternalSwap(StreamLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.streams_.InternalSwap(&other->_impl_.streams_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.open_)
      + sizeof(StreamLimit::_impl_.open_)
      - PROTOBUF_FIELD_OFFSET(StreamLimit, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::google::protobuf::Metadata StreamLimit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetInfoRequest::_Internal {
 public:
};

GetInfoRequest::GetInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetInfoRequest)
}
GetInfoRequest::GetInfoRequest(
    ::google::protobuf::Arena* arena,
    const GetInfoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  GetInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetInfoRequest)
}

const ::google::protobuf::MessageLite::ClassData*
GetInfoRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetInfoRequest, _impl_._cached_size_),
              false,
          },
          &GetInfoRequest::MergeImpl,
          &GetInfoRequest::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> GetInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetInfoRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata GetInfoRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetInfoResponse::_Internal {
 public:
};

GetInfoResponse::GetInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : qualified_for_work_with_{visibility, arena, from.qualified_for_work_with_},
        tariff_(arena, from.tariff_),
        _cached_size_{0} {}

GetInfoResponse::GetInfoResponse(
    ::google::protobuf::Arena* arena,
    const GetInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  GetInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, prem_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, prem_status_),
           offsetof(Impl_, qual_status_) -
               offsetof(Impl_, prem_status_) +
               sizeof(Impl_::qual_status_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : qualified_for_work_with_{visibility, arena},
        tariff_(arena),
        _cached_size_{0} {}

inline void GetInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, prem_status_),
           0,
           offsetof(Impl_, qual_status_) -
               offsetof(Impl_, prem_status_) +
               sizeof(Impl_::qual_status_));
}
GetInfoResponse::~GetInfoResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tariff_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetInfoResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_._cached_size_),
              false,
          },
          &GetInfoResponse::MergeImpl,
          &GetInfoResponse::kDescriptorMethods,
          &descriptor_table_users_2eproto,
          nullptr,  // tracker
      };
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 91, 2> GetInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetInfoResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string tariff = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.tariff_)}},
    // bool prem_status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetInfoResponse, _impl_.prem_status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.prem_status_)}},
    // bool qual_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetInfoResponse, _impl_.qual_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.qual_status_)}},
    // repeated string qualified_for_work_with = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.qualified_for_work_with_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool prem_status = 1;
    {PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.prem_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool qual_status = 2;
    {PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.qual_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated string qualified_for_work_with = 3;
    {PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.qualified_for_work_with_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string tariff = 4;
    {PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.tariff_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\0\0\27\6\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetInfoResponse"
    "qualified_for_work_with"
    "tariff"
  }},
};

PROTOBUF_NOINLINE void GetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.qualified_for_work_with_.Clear();
  _impl_.tariff_.ClearToEmpty();
  ::memset(&_impl_.prem_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qual_status_) -
      reinterpret_cast<char*>(&_impl_.prem_status_)) + sizeof(_impl_.qual_status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetInfoResponse::_InternalParse(const char* ptr,
                                        ::_pbi::ParseContext* ctx) {
  return ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
}

::uint8_t* GetInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool prem_status = 1;
  if (this->_internal_prem_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_prem_status(), target);
  }

  // bool qual_status = 2;
  if (this->_internal_qual_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_qual_status(), target);
  }

  // repeated string qualified_for_work_with = 3;
  for (int i = 0, n = this->_internal_qualified_for_work_with_size(); i < n; ++i) {
    const auto& s = this->_internal_qualified_for_work_with().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetInfoResponse.qualified_for_work_with");
    target = stream->WriteString(3, s, target);
  }

  // string tariff = 4;
  if (!this->_internal_tariff().empty()) {
    const std::string& _s = this->_internal_tariff();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetInfoResponse.tariff");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
  return target;
}

::size_t GetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string qualified_for_work_with = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_qualified_for_work_with().size());
  for (int i = 0, n = _internal_qualified_for_work_with().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_qualified_for_work_with().Get(i));
  }
  // string tariff = 4;
  if (!this->_internal_tariff().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tariff());
  }

  // bool prem_status = 1;
  if (this->_internal_prem_status() != 0) {
    total_size += 2;
  }

  // bool qual_status = 2;
  if (this->_internal_qual_status() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_qualified_for_work_with()->MergeFrom(from._internal_qualified_for_work_with());
  if (!from._internal_tariff().empty()) {
    _this->_internal_set_tariff(from._internal_tariff());
  }
  if (from._internal_prem_status() != 0) {
    _this->_impl_.prem_status_ = from._impl_.prem_status_;
  }
  if (from._internal_qual_status() != 0) {
    _this->_impl_.qual_status_ = from._impl_.qual_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetInfoResponse::CopyFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetInfoResponse::IsInitialized() const {
  return true;
}

void GetInfoResponse::InternalSwap(GetInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.qualified_for_work_with_.InternalSwap(&other->_impl_.qualified_for_work_with_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tariff_, &other->_impl_.tariff_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.qual_status_)
      + sizeof(GetInfoResponse::_impl_.qual_status_)
      - PROTOBUF_FIELD_OFFSET(GetInfoResponse, _impl_.prem_status_)>(
          reinterpret_cast<char*>(&_impl_.prem_status_),
          reinterpret_cast<char*>(&other->_impl_.prem_status_));
}

::google::protobuf::Metadata GetInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_users_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
