// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr Quotation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : units_{::int64_t{0}},
        nano_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quotation::Quotation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QuotationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuotationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuotationDefaultTypeInternal() {}
  union {
    Quotation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuotationDefaultTypeInternal _Quotation_default_instance_;

inline constexpr MoneyValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        units_{::int64_t{0}},
        nano_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MoneyValue::MoneyValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MoneyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoneyValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoneyValueDefaultTypeInternal() {}
  union {
    MoneyValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoneyValueDefaultTypeInternal _MoneyValue_default_instance_;

inline constexpr Ping::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Ping::Ping(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingDefaultTypeInternal() {}
  union {
    Ping _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingDefaultTypeInternal _Ping_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
static ::_pb::Metadata file_level_metadata_common_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2eproto = nullptr;
const ::uint32_t TableStruct_common_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MoneyValue, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MoneyValue, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MoneyValue, _impl_.units_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MoneyValue, _impl_.nano_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Quotation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Quotation, _impl_.units_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Quotation, _impl_.nano_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Ping, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Ping, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Ping, _impl_.time_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::MoneyValue)},
        {11, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::Quotation)},
        {21, 30, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::Ping)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_Ping_default_instance_._instance,
};
const char descriptor_table_protodef_common_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014common.proto\022&tinkoff.public_.invest.a"
    "pi.contract.v1\032\037google/protobuf/timestam"
    "p.proto\";\n\nMoneyValue\022\020\n\010currency\030\001 \001(\t\022"
    "\r\n\005units\030\002 \001(\003\022\014\n\004nano\030\003 \001(\005\"(\n\tQuotatio"
    "n\022\r\n\005units\030\001 \001(\003\022\014\n\004nano\030\002 \001(\005\"0\n\004Ping\022("
    "\n\004time\030\001 \001(\0132\032.google.protobuf.Timestamp"
    "*\230\002\n\016InstrumentType\022\037\n\033INSTRUMENT_TYPE_U"
    "NSPECIFIED\020\000\022\030\n\024INSTRUMENT_TYPE_BOND\020\001\022\031"
    "\n\025INSTRUMENT_TYPE_SHARE\020\002\022\034\n\030INSTRUMENT_"
    "TYPE_CURRENCY\020\003\022\027\n\023INSTRUMENT_TYPE_ETF\020\004"
    "\022\033\n\027INSTRUMENT_TYPE_FUTURES\020\005\022\026\n\022INSTRUM"
    "ENT_TYPE_SP\020\006\022\032\n\026INSTRUMENT_TYPE_OPTION\020"
    "\007\022(\n$INSTRUMENT_TYPE_CLEARING_CERTIFICAT"
    "E\020\010*\316\006\n\025SecurityTradingStatus\022\'\n#SECURIT"
    "Y_TRADING_STATUS_UNSPECIFIED\020\000\0225\n1SECURI"
    "TY_TRADING_STATUS_NOT_AVAILABLE_FOR_TRAD"
    "ING\020\001\022*\n&SECURITY_TRADING_STATUS_OPENING"
    "_PERIOD\020\002\022*\n&SECURITY_TRADING_STATUS_CLO"
    "SING_PERIOD\020\003\022,\n(SECURITY_TRADING_STATUS"
    "_BREAK_IN_TRADING\020\004\022*\n&SECURITY_TRADING_"
    "STATUS_NORMAL_TRADING\020\005\022+\n\'SECURITY_TRAD"
    "ING_STATUS_CLOSING_AUCTION\020\006\022-\n)SECURITY"
    "_TRADING_STATUS_DARK_POOL_AUCTION\020\007\022,\n(S"
    "ECURITY_TRADING_STATUS_DISCRETE_AUCTION\020"
    "\010\0222\n.SECURITY_TRADING_STATUS_OPENING_AUC"
    "TION_PERIOD\020\t\022<\n8SECURITY_TRADING_STATUS"
    "_TRADING_AT_CLOSING_AUCTION_PRICE\020\n\022,\n(S"
    "ECURITY_TRADING_STATUS_SESSION_ASSIGNED\020"
    "\013\022)\n%SECURITY_TRADING_STATUS_SESSION_CLO"
    "SE\020\014\022(\n$SECURITY_TRADING_STATUS_SESSION_"
    "OPEN\020\r\0221\n-SECURITY_TRADING_STATUS_DEALER"
    "_NORMAL_TRADING\020\016\0223\n/SECURITY_TRADING_ST"
    "ATUS_DEALER_BREAK_IN_TRADING\020\017\022<\n8SECURI"
    "TY_TRADING_STATUS_DEALER_NOT_AVAILABLE_F"
    "OR_TRADING\020\020Ba\n\034ru.tinkoff.piapi.contrac"
    "t.v1P\001Z\014./;investapi\242\002\005TIAPI\252\002\024Tinkoff.I"
    "nvestApi.V1\312\002\021Tinkoff\\Invest\\V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_common_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2eproto = {
    false,
    false,
    1479,
    descriptor_table_protodef_common_2eproto,
    "common.proto",
    &descriptor_table_common_2eproto_once,
    descriptor_table_common_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_common_2eproto::offsets,
    file_level_metadata_common_2eproto,
    file_level_enum_descriptors_common_2eproto,
    file_level_service_descriptors_common_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2eproto_getter() {
  return &descriptor_table_common_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2eproto(&descriptor_table_common_2eproto);
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* InstrumentType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t InstrumentType_internal_data_[] = {
    589824u, 0u, };
bool InstrumentType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
const ::google::protobuf::EnumDescriptor* SecurityTradingStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SecurityTradingStatus_internal_data_[] = {
    1114112u, 0u, };
bool SecurityTradingStatus_IsValid(int value) {
  return 0 <= value && value <= 16;
}
// ===================================================================

class MoneyValue::_Internal {
 public:
};

MoneyValue::MoneyValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.MoneyValue)
}
inline PROTOBUF_NDEBUG_INLINE MoneyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : currency_(arena, from.currency_),
        _cached_size_{0} {}

MoneyValue::MoneyValue(
    ::google::protobuf::Arena* arena,
    const MoneyValue& from)
    : ::google::protobuf::Message(arena) {
  MoneyValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, units_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, units_),
           offsetof(Impl_, nano_) -
               offsetof(Impl_, units_) +
               sizeof(Impl_::nano_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.MoneyValue)
}
inline PROTOBUF_NDEBUG_INLINE MoneyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : currency_(arena),
        _cached_size_{0} {}

inline void MoneyValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, units_),
           0,
           offsetof(Impl_, nano_) -
               offsetof(Impl_, units_) +
               sizeof(Impl_::nano_));
}
MoneyValue::~MoneyValue() {
  // @@protoc_insertion_point(destructor:tinkoff.public_.invest.api.contract.v1.MoneyValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MoneyValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.currency_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MoneyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public_.invest.api.contract.v1.MoneyValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currency_.ClearToEmpty();
  ::memset(&_impl_.units_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.nano_) -
      reinterpret_cast<char*>(&_impl_.units_)) + sizeof(_impl_.nano_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MoneyValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 66, 2> MoneyValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MoneyValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string currency = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.currency_)}},
    // int64 units = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MoneyValue, _impl_.units_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.units_)}},
    // int32 nano = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MoneyValue, _impl_.nano_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.nano_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string currency = 1;
    {PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.currency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 units = 2;
    {PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.units_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 nano = 3;
    {PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.nano_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\61\10\0\0\0\0\0\0"
    "tinkoff.public_.invest.api.contract.v1.MoneyValue"
    "currency"
  }},
};

::uint8_t* MoneyValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public_.invest.api.contract.v1.MoneyValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string currency = 1;
  if (!this->_internal_currency().empty()) {
    const std::string& _s = this->_internal_currency();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public_.invest.api.contract.v1.MoneyValue.currency");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 units = 2;
  if (this->_internal_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_units(), target);
  }

  // int32 nano = 3;
  if (this->_internal_nano() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_nano(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public_.invest.api.contract.v1.MoneyValue)
  return target;
}

::size_t MoneyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public_.invest.api.contract.v1.MoneyValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string currency = 1;
  if (!this->_internal_currency().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currency());
  }

  // int64 units = 2;
  if (this->_internal_units() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_units());
  }

  // int32 nano = 3;
  if (this->_internal_nano() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_nano());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MoneyValue::_class_data_ = {
    MoneyValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MoneyValue::GetClassData() const {
  return &_class_data_;
}

void MoneyValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MoneyValue*>(&to_msg);
  auto& from = static_cast<const MoneyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public_.invest.api.contract.v1.MoneyValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  if (from._internal_units() != 0) {
    _this->_internal_set_units(from._internal_units());
  }
  if (from._internal_nano() != 0) {
    _this->_internal_set_nano(from._internal_nano());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MoneyValue::CopyFrom(const MoneyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public_.invest.api.contract.v1.MoneyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MoneyValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MoneyValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MoneyValue::InternalSwap(MoneyValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.nano_)
      + sizeof(MoneyValue::_impl_.nano_)
      - PROTOBUF_FIELD_OFFSET(MoneyValue, _impl_.units_)>(
          reinterpret_cast<char*>(&_impl_.units_),
          reinterpret_cast<char*>(&other->_impl_.units_));
}

::google::protobuf::Metadata MoneyValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[0]);
}
// ===================================================================

class Quotation::_Internal {
 public:
};

Quotation::Quotation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.Quotation)
}
Quotation::Quotation(
    ::google::protobuf::Arena* arena, const Quotation& from)
    : Quotation(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quotation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Quotation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, units_),
           0,
           offsetof(Impl_, nano_) -
               offsetof(Impl_, units_) +
               sizeof(Impl_::nano_));
}
Quotation::~Quotation() {
  // @@protoc_insertion_point(destructor:tinkoff.public_.invest.api.contract.v1.Quotation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Quotation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Quotation::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public_.invest.api.contract.v1.Quotation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.units_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.nano_) -
      reinterpret_cast<char*>(&_impl_.units_)) + sizeof(_impl_.nano_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Quotation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Quotation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Quotation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 nano = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Quotation, _impl_.nano_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Quotation, _impl_.nano_)}},
    // int64 units = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Quotation, _impl_.units_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Quotation, _impl_.units_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 units = 1;
    {PROTOBUF_FIELD_OFFSET(Quotation, _impl_.units_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 nano = 2;
    {PROTOBUF_FIELD_OFFSET(Quotation, _impl_.nano_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Quotation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public_.invest.api.contract.v1.Quotation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 units = 1;
  if (this->_internal_units() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_units(), target);
  }

  // int32 nano = 2;
  if (this->_internal_nano() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_nano(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public_.invest.api.contract.v1.Quotation)
  return target;
}

::size_t Quotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public_.invest.api.contract.v1.Quotation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 units = 1;
  if (this->_internal_units() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_units());
  }

  // int32 nano = 2;
  if (this->_internal_nano() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_nano());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Quotation::_class_data_ = {
    Quotation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Quotation::GetClassData() const {
  return &_class_data_;
}

void Quotation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Quotation*>(&to_msg);
  auto& from = static_cast<const Quotation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public_.invest.api.contract.v1.Quotation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_units() != 0) {
    _this->_internal_set_units(from._internal_units());
  }
  if (from._internal_nano() != 0) {
    _this->_internal_set_nano(from._internal_nano());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quotation::CopyFrom(const Quotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public_.invest.api.contract.v1.Quotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Quotation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Quotation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Quotation::InternalSwap(Quotation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quotation, _impl_.nano_)
      + sizeof(Quotation::_impl_.nano_)
      - PROTOBUF_FIELD_OFFSET(Quotation, _impl_.units_)>(
          reinterpret_cast<char*>(&_impl_.units_),
          reinterpret_cast<char*>(&other->_impl_.units_));
}

::google::protobuf::Metadata Quotation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[1]);
}
// ===================================================================

class Ping::_Internal {
 public:
  using HasBits = decltype(std::declval<Ping>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Ping, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& time(const Ping* msg);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& Ping::_Internal::time(const Ping* msg) {
  return *msg->_impl_.time_;
}
void Ping::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Ping::Ping(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public_.invest.api.contract.v1.Ping)
}
inline PROTOBUF_NDEBUG_INLINE Ping::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Ping::Ping(
    ::google::protobuf::Arena* arena,
    const Ping& from)
    : ::google::protobuf::Message(arena) {
  Ping* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.time_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public_.invest.api.contract.v1.Ping)
}
inline PROTOBUF_NDEBUG_INLINE Ping::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Ping::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
Ping::~Ping() {
  // @@protoc_insertion_point(destructor:tinkoff.public_.invest.api.contract.v1.Ping)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Ping::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public_.invest.api.contract.v1.Ping)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_ != nullptr);
    _impl_.time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Ping::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Ping::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Ping, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Ping_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Ping, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp time = 1;
    {PROTOBUF_FIELD_OFFSET(Ping, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* Ping::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public_.invest.api.contract.v1.Ping)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::time(this),
        _Internal::time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public_.invest.api.contract.v1.Ping)
  return target;
}

::size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinkoff.public_.invest.api.contract.v1.Ping)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Ping::_class_data_ = {
    Ping::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Ping::GetClassData() const {
  return &_class_data_;
}

void Ping::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Ping*>(&to_msg);
  auto& from = static_cast<const Ping&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public_.invest.api.contract.v1.Ping)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public_.invest.api.contract.v1.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Ping::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Ping::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Ping::InternalSwap(Ping* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
