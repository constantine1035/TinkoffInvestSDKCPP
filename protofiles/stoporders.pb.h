// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stoporders.proto
// Protobuf C++ Version: 5.27.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_stoporders_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_stoporders_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_stoporders_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_stoporders_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_stoporders_2eproto;
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
class CancelStopOrderRequest;
struct CancelStopOrderRequestDefaultTypeInternal;
extern CancelStopOrderRequestDefaultTypeInternal _CancelStopOrderRequest_default_instance_;
class CancelStopOrderResponse;
struct CancelStopOrderResponseDefaultTypeInternal;
extern CancelStopOrderResponseDefaultTypeInternal _CancelStopOrderResponse_default_instance_;
class GetStopOrdersRequest;
struct GetStopOrdersRequestDefaultTypeInternal;
extern GetStopOrdersRequestDefaultTypeInternal _GetStopOrdersRequest_default_instance_;
class GetStopOrdersResponse;
struct GetStopOrdersResponseDefaultTypeInternal;
extern GetStopOrdersResponseDefaultTypeInternal _GetStopOrdersResponse_default_instance_;
class PostStopOrderRequest;
struct PostStopOrderRequestDefaultTypeInternal;
extern PostStopOrderRequestDefaultTypeInternal _PostStopOrderRequest_default_instance_;
class PostStopOrderResponse;
struct PostStopOrderResponseDefaultTypeInternal;
extern PostStopOrderResponseDefaultTypeInternal _PostStopOrderResponse_default_instance_;
class StopOrder;
struct StopOrderDefaultTypeInternal;
extern StopOrderDefaultTypeInternal _StopOrder_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
enum StopOrderDirection : int {
  STOP_ORDER_DIRECTION_UNSPECIFIED = 0,
  STOP_ORDER_DIRECTION_BUY = 1,
  STOP_ORDER_DIRECTION_SELL = 2,
  StopOrderDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StopOrderDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StopOrderDirection_IsValid(int value);
extern const uint32_t StopOrderDirection_internal_data_[];
constexpr StopOrderDirection StopOrderDirection_MIN = static_cast<StopOrderDirection>(0);
constexpr StopOrderDirection StopOrderDirection_MAX = static_cast<StopOrderDirection>(2);
constexpr int StopOrderDirection_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
StopOrderDirection_descriptor();
template <typename T>
const std::string& StopOrderDirection_Name(T value) {
  static_assert(std::is_same<T, StopOrderDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StopOrderDirection_Name().");
  return StopOrderDirection_Name(static_cast<StopOrderDirection>(value));
}
template <>
inline const std::string& StopOrderDirection_Name(StopOrderDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StopOrderDirection_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool StopOrderDirection_Parse(absl::string_view name, StopOrderDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StopOrderDirection>(
      StopOrderDirection_descriptor(), name, value);
}
enum StopOrderExpirationType : int {
  STOP_ORDER_EXPIRATION_TYPE_UNSPECIFIED = 0,
  STOP_ORDER_EXPIRATION_TYPE_GOOD_TILL_CANCEL = 1,
  STOP_ORDER_EXPIRATION_TYPE_GOOD_TILL_DATE = 2,
  StopOrderExpirationType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StopOrderExpirationType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StopOrderExpirationType_IsValid(int value);
extern const uint32_t StopOrderExpirationType_internal_data_[];
constexpr StopOrderExpirationType StopOrderExpirationType_MIN = static_cast<StopOrderExpirationType>(0);
constexpr StopOrderExpirationType StopOrderExpirationType_MAX = static_cast<StopOrderExpirationType>(2);
constexpr int StopOrderExpirationType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
StopOrderExpirationType_descriptor();
template <typename T>
const std::string& StopOrderExpirationType_Name(T value) {
  static_assert(std::is_same<T, StopOrderExpirationType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StopOrderExpirationType_Name().");
  return StopOrderExpirationType_Name(static_cast<StopOrderExpirationType>(value));
}
template <>
inline const std::string& StopOrderExpirationType_Name(StopOrderExpirationType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StopOrderExpirationType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool StopOrderExpirationType_Parse(absl::string_view name, StopOrderExpirationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StopOrderExpirationType>(
      StopOrderExpirationType_descriptor(), name, value);
}
enum StopOrderType : int {
  STOP_ORDER_TYPE_UNSPECIFIED = 0,
  STOP_ORDER_TYPE_TAKE_PROFIT = 1,
  STOP_ORDER_TYPE_STOP_LOSS = 2,
  STOP_ORDER_TYPE_STOP_LIMIT = 3,
  StopOrderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  StopOrderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool StopOrderType_IsValid(int value);
extern const uint32_t StopOrderType_internal_data_[];
constexpr StopOrderType StopOrderType_MIN = static_cast<StopOrderType>(0);
constexpr StopOrderType StopOrderType_MAX = static_cast<StopOrderType>(3);
constexpr int StopOrderType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
StopOrderType_descriptor();
template <typename T>
const std::string& StopOrderType_Name(T value) {
  static_assert(std::is_same<T, StopOrderType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StopOrderType_Name().");
  return StopOrderType_Name(static_cast<StopOrderType>(value));
}
template <>
inline const std::string& StopOrderType_Name(StopOrderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StopOrderType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool StopOrderType_Parse(absl::string_view name, StopOrderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StopOrderType>(
      StopOrderType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PostStopOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.PostStopOrderResponse) */ {
 public:
  inline PostStopOrderResponse() : PostStopOrderResponse(nullptr) {}
  ~PostStopOrderResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostStopOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostStopOrderResponse(const PostStopOrderResponse& from) : PostStopOrderResponse(nullptr, from) {}
  inline PostStopOrderResponse(PostStopOrderResponse&& from) noexcept
      : PostStopOrderResponse(nullptr, std::move(from)) {}
  inline PostStopOrderResponse& operator=(const PostStopOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostStopOrderResponse& operator=(PostStopOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostStopOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostStopOrderResponse* internal_default_instance() {
    return reinterpret_cast<const PostStopOrderResponse*>(
        &_PostStopOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PostStopOrderResponse& a, PostStopOrderResponse& b) { a.Swap(&b); }
  inline void Swap(PostStopOrderResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostStopOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostStopOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PostStopOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostStopOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostStopOrderResponse& from) { PostStopOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PostStopOrderResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.PostStopOrderResponse"; }

 protected:
  explicit PostStopOrderResponse(::google::protobuf::Arena* arena);
  PostStopOrderResponse(::google::protobuf::Arena* arena, const PostStopOrderResponse& from);
  PostStopOrderResponse(::google::protobuf::Arena* arena, PostStopOrderResponse&& from) noexcept
      : PostStopOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStopOrderIdFieldNumber = 1,
  };
  // string stop_order_id = 1;
  void clear_stop_order_id() ;
  const std::string& stop_order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stop_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_stop_order_id();
  PROTOBUF_NODISCARD std::string* release_stop_order_id();
  void set_allocated_stop_order_id(std::string* value);

  private:
  const std::string& _internal_stop_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stop_order_id(
      const std::string& value);
  std::string* _internal_mutable_stop_order_id();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.PostStopOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      81, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr stop_order_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stoporders_2eproto;
};
// -------------------------------------------------------------------

class GetStopOrdersRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest) */ {
 public:
  inline GetStopOrdersRequest() : GetStopOrdersRequest(nullptr) {}
  ~GetStopOrdersRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStopOrdersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStopOrdersRequest(const GetStopOrdersRequest& from) : GetStopOrdersRequest(nullptr, from) {}
  inline GetStopOrdersRequest(GetStopOrdersRequest&& from) noexcept
      : GetStopOrdersRequest(nullptr, std::move(from)) {}
  inline GetStopOrdersRequest& operator=(const GetStopOrdersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStopOrdersRequest& operator=(GetStopOrdersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStopOrdersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStopOrdersRequest* internal_default_instance() {
    return reinterpret_cast<const GetStopOrdersRequest*>(
        &_GetStopOrdersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetStopOrdersRequest& a, GetStopOrdersRequest& b) { a.Swap(&b); }
  inline void Swap(GetStopOrdersRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStopOrdersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStopOrdersRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetStopOrdersRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStopOrdersRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStopOrdersRequest& from) { GetStopOrdersRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStopOrdersRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest"; }

 protected:
  explicit GetStopOrdersRequest(::google::protobuf::Arena* arena);
  GetStopOrdersRequest(::google::protobuf::Arena* arena, const GetStopOrdersRequest& from);
  GetStopOrdersRequest(::google::protobuf::Arena* arena, GetStopOrdersRequest&& from) noexcept
      : GetStopOrdersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // string account_id = 1;
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      77, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stoporders_2eproto;
};
// -------------------------------------------------------------------

class CancelStopOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest) */ {
 public:
  inline CancelStopOrderRequest() : CancelStopOrderRequest(nullptr) {}
  ~CancelStopOrderRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelStopOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CancelStopOrderRequest(const CancelStopOrderRequest& from) : CancelStopOrderRequest(nullptr, from) {}
  inline CancelStopOrderRequest(CancelStopOrderRequest&& from) noexcept
      : CancelStopOrderRequest(nullptr, std::move(from)) {}
  inline CancelStopOrderRequest& operator=(const CancelStopOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelStopOrderRequest& operator=(CancelStopOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelStopOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelStopOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CancelStopOrderRequest*>(
        &_CancelStopOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CancelStopOrderRequest& a, CancelStopOrderRequest& b) { a.Swap(&b); }
  inline void Swap(CancelStopOrderRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelStopOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelStopOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CancelStopOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelStopOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelStopOrderRequest& from) { CancelStopOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CancelStopOrderRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest"; }

 protected:
  explicit CancelStopOrderRequest(::google::protobuf::Arena* arena);
  CancelStopOrderRequest(::google::protobuf::Arena* arena, const CancelStopOrderRequest& from);
  CancelStopOrderRequest(::google::protobuf::Arena* arena, CancelStopOrderRequest&& from) noexcept
      : CancelStopOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kStopOrderIdFieldNumber = 2,
  };
  // string account_id = 1;
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string stop_order_id = 2;
  void clear_stop_order_id() ;
  const std::string& stop_order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stop_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_stop_order_id();
  PROTOBUF_NODISCARD std::string* release_stop_order_id();
  void set_allocated_stop_order_id(std::string* value);

  private:
  const std::string& _internal_stop_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stop_order_id(
      const std::string& value);
  std::string* _internal_mutable_stop_order_id();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      92, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr stop_order_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stoporders_2eproto;
};
// -------------------------------------------------------------------

class StopOrder final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.StopOrder) */ {
 public:
  inline StopOrder() : StopOrder(nullptr) {}
  ~StopOrder() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopOrder(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopOrder(const StopOrder& from) : StopOrder(nullptr, from) {}
  inline StopOrder(StopOrder&& from) noexcept
      : StopOrder(nullptr, std::move(from)) {}
  inline StopOrder& operator=(const StopOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopOrder& operator=(StopOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopOrder* internal_default_instance() {
    return reinterpret_cast<const StopOrder*>(
        &_StopOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(StopOrder& a, StopOrder& b) { a.Swap(&b); }
  inline void Swap(StopOrder* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopOrder* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopOrder* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StopOrder>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StopOrder& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StopOrder& from) { StopOrder::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StopOrder* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.StopOrder"; }

 protected:
  explicit StopOrder(::google::protobuf::Arena* arena);
  StopOrder(::google::protobuf::Arena* arena, const StopOrder& from);
  StopOrder(::google::protobuf::Arena* arena, StopOrder&& from) noexcept
      : StopOrder(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStopOrderIdFieldNumber = 1,
    kFigiFieldNumber = 3,
    kCurrencyFieldNumber = 5,
    kInstrumentUidFieldNumber = 12,
    kCreateDateFieldNumber = 7,
    kActivationDateTimeFieldNumber = 8,
    kExpirationTimeFieldNumber = 9,
    kPriceFieldNumber = 10,
    kStopPriceFieldNumber = 11,
    kLotsRequestedFieldNumber = 2,
    kDirectionFieldNumber = 4,
    kOrderTypeFieldNumber = 6,
  };
  // string stop_order_id = 1;
  void clear_stop_order_id() ;
  const std::string& stop_order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stop_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_stop_order_id();
  PROTOBUF_NODISCARD std::string* release_stop_order_id();
  void set_allocated_stop_order_id(std::string* value);

  private:
  const std::string& _internal_stop_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stop_order_id(
      const std::string& value);
  std::string* _internal_mutable_stop_order_id();

  public:
  // string figi = 3;
  void clear_figi() ;
  const std::string& figi() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_figi(Arg_&& arg, Args_... args);
  std::string* mutable_figi();
  PROTOBUF_NODISCARD std::string* release_figi();
  void set_allocated_figi(std::string* value);

  private:
  const std::string& _internal_figi() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_figi(
      const std::string& value);
  std::string* _internal_mutable_figi();

  public:
  // string currency = 5;
  void clear_currency() ;
  const std::string& currency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency(Arg_&& arg, Args_... args);
  std::string* mutable_currency();
  PROTOBUF_NODISCARD std::string* release_currency();
  void set_allocated_currency(std::string* value);

  private:
  const std::string& _internal_currency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency(
      const std::string& value);
  std::string* _internal_mutable_currency();

  public:
  // string instrument_uid = 12;
  void clear_instrument_uid() ;
  const std::string& instrument_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_uid(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_uid();
  PROTOBUF_NODISCARD std::string* release_instrument_uid();
  void set_allocated_instrument_uid(std::string* value);

  private:
  const std::string& _internal_instrument_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_uid(
      const std::string& value);
  std::string* _internal_mutable_instrument_uid();

  public:
  // .google.protobuf.Timestamp create_date = 7;
  bool has_create_date() const;
  void clear_create_date() ;
  const ::google::protobuf::Timestamp& create_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_create_date();
  ::google::protobuf::Timestamp* mutable_create_date();
  void set_allocated_create_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_create_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_create_date();

  private:
  const ::google::protobuf::Timestamp& _internal_create_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_create_date();

  public:
  // .google.protobuf.Timestamp activation_date_time = 8;
  bool has_activation_date_time() const;
  void clear_activation_date_time() ;
  const ::google::protobuf::Timestamp& activation_date_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_activation_date_time();
  ::google::protobuf::Timestamp* mutable_activation_date_time();
  void set_allocated_activation_date_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_activation_date_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_activation_date_time();

  private:
  const ::google::protobuf::Timestamp& _internal_activation_date_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_activation_date_time();

  public:
  // .google.protobuf.Timestamp expiration_time = 9;
  bool has_expiration_time() const;
  void clear_expiration_time() ;
  const ::google::protobuf::Timestamp& expiration_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_expiration_time();
  ::google::protobuf::Timestamp* mutable_expiration_time();
  void set_allocated_expiration_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_expiration_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_expiration_time();

  private:
  const ::google::protobuf::Timestamp& _internal_expiration_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_expiration_time();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 10;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue stop_price = 11;
  bool has_stop_price() const;
  void clear_stop_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& stop_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_stop_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_stop_price();
  void set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_stop_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_stop_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_stop_price();

  public:
  // int64 lots_requested = 2;
  void clear_lots_requested() ;
  ::int64_t lots_requested() const;
  void set_lots_requested(::int64_t value);

  private:
  ::int64_t _internal_lots_requested() const;
  void _internal_set_lots_requested(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.StopOrderDirection direction = 4;
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value);

  public:
  // .tinkoff.public.invest.api.contract.v1.StopOrderType order_type = 6;
  void clear_order_type() ;
  ::tinkoff::public_::invest::api::contract::v1::StopOrderType order_type() const;
  void set_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::StopOrderType _internal_order_type() const;
  void _internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.StopOrder)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 5,
      103, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr stop_order_id_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr currency_;
    ::google::protobuf::internal::ArenaStringPtr instrument_uid_;
    ::google::protobuf::Timestamp* create_date_;
    ::google::protobuf::Timestamp* activation_date_time_;
    ::google::protobuf::Timestamp* expiration_time_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* stop_price_;
    ::int64_t lots_requested_;
    int direction_;
    int order_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stoporders_2eproto;
};
// -------------------------------------------------------------------

class PostStopOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest) */ {
 public:
  inline PostStopOrderRequest() : PostStopOrderRequest(nullptr) {}
  ~PostStopOrderRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostStopOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostStopOrderRequest(const PostStopOrderRequest& from) : PostStopOrderRequest(nullptr, from) {}
  inline PostStopOrderRequest(PostStopOrderRequest&& from) noexcept
      : PostStopOrderRequest(nullptr, std::move(from)) {}
  inline PostStopOrderRequest& operator=(const PostStopOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostStopOrderRequest& operator=(PostStopOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostStopOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostStopOrderRequest* internal_default_instance() {
    return reinterpret_cast<const PostStopOrderRequest*>(
        &_PostStopOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PostStopOrderRequest& a, PostStopOrderRequest& b) { a.Swap(&b); }
  inline void Swap(PostStopOrderRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostStopOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostStopOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PostStopOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostStopOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostStopOrderRequest& from) { PostStopOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PostStopOrderRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.PostStopOrderRequest"; }

 protected:
  explicit PostStopOrderRequest(::google::protobuf::Arena* arena);
  PostStopOrderRequest(::google::protobuf::Arena* arena, const PostStopOrderRequest& from);
  PostStopOrderRequest(::google::protobuf::Arena* arena, PostStopOrderRequest&& from) noexcept
      : PostStopOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFigiFieldNumber = 1,
    kAccountIdFieldNumber = 6,
    kInstrumentIdFieldNumber = 10,
    kPriceFieldNumber = 3,
    kStopPriceFieldNumber = 4,
    kExpireDateFieldNumber = 9,
    kQuantityFieldNumber = 2,
    kDirectionFieldNumber = 5,
    kExpirationTypeFieldNumber = 7,
    kStopOrderTypeFieldNumber = 8,
  };
  // string figi = 1 [deprecated = true];
  [[deprecated]]  void clear_figi() ;
  [[deprecated]] const std::string& figi() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_figi(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_figi();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_figi();
  [[deprecated]] void set_allocated_figi(std::string* value);

  private:
  const std::string& _internal_figi() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_figi(
      const std::string& value);
  std::string* _internal_mutable_figi();

  public:
  // string account_id = 6;
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string instrument_id = 10;
  void clear_instrument_id() ;
  const std::string& instrument_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_id(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_id();
  PROTOBUF_NODISCARD std::string* release_instrument_id();
  void set_allocated_instrument_id(std::string* value);

  private:
  const std::string& _internal_instrument_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_id(
      const std::string& value);
  std::string* _internal_mutable_instrument_id();

  public:
  // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.Quotation stop_price = 4;
  bool has_stop_price() const;
  void clear_stop_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& stop_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_stop_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_stop_price();
  void set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_stop_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_stop_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_stop_price();

  public:
  // .google.protobuf.Timestamp expire_date = 9;
  bool has_expire_date() const;
  void clear_expire_date() ;
  const ::google::protobuf::Timestamp& expire_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_expire_date();
  ::google::protobuf::Timestamp* mutable_expire_date();
  void set_allocated_expire_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_expire_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_expire_date();

  private:
  const ::google::protobuf::Timestamp& _internal_expire_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_expire_date();

  public:
  // int64 quantity = 2;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.StopOrderDirection direction = 5;
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value);

  public:
  // .tinkoff.public.invest.api.contract.v1.StopOrderExpirationType expiration_type = 7;
  void clear_expiration_type() ;
  ::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType expiration_type() const;
  void set_expiration_type(::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType _internal_expiration_type() const;
  void _internal_set_expiration_type(::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType value);

  public:
  // .tinkoff.public.invest.api.contract.v1.StopOrderType stop_order_type = 8;
  void clear_stop_order_type() ;
  ::tinkoff::public_::invest::api::contract::v1::StopOrderType stop_order_type() const;
  void set_stop_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::StopOrderType _internal_stop_order_type() const;
  void _internal_set_stop_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 3,
      102, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr instrument_id_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* price_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* stop_price_;
    ::google::protobuf::Timestamp* expire_date_;
    ::int64_t quantity_;
    int direction_;
    int expiration_type_;
    int stop_order_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stoporders_2eproto;
};
// -------------------------------------------------------------------

class CancelStopOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse) */ {
 public:
  inline CancelStopOrderResponse() : CancelStopOrderResponse(nullptr) {}
  ~CancelStopOrderResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelStopOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CancelStopOrderResponse(const CancelStopOrderResponse& from) : CancelStopOrderResponse(nullptr, from) {}
  inline CancelStopOrderResponse(CancelStopOrderResponse&& from) noexcept
      : CancelStopOrderResponse(nullptr, std::move(from)) {}
  inline CancelStopOrderResponse& operator=(const CancelStopOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelStopOrderResponse& operator=(CancelStopOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelStopOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelStopOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CancelStopOrderResponse*>(
        &_CancelStopOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CancelStopOrderResponse& a, CancelStopOrderResponse& b) { a.Swap(&b); }
  inline void Swap(CancelStopOrderResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelStopOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelStopOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CancelStopOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelStopOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelStopOrderResponse& from) { CancelStopOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CancelStopOrderResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse"; }

 protected:
  explicit CancelStopOrderResponse(::google::protobuf::Arena* arena);
  CancelStopOrderResponse(::google::protobuf::Arena* arena, const CancelStopOrderResponse& from);
  CancelStopOrderResponse(::google::protobuf::Arena* arena, CancelStopOrderResponse&& from) noexcept
      : CancelStopOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 1,
  };
  // .google.protobuf.Timestamp time = 1;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stoporders_2eproto;
};
// -------------------------------------------------------------------

class GetStopOrdersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse) */ {
 public:
  inline GetStopOrdersResponse() : GetStopOrdersResponse(nullptr) {}
  ~GetStopOrdersResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetStopOrdersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetStopOrdersResponse(const GetStopOrdersResponse& from) : GetStopOrdersResponse(nullptr, from) {}
  inline GetStopOrdersResponse(GetStopOrdersResponse&& from) noexcept
      : GetStopOrdersResponse(nullptr, std::move(from)) {}
  inline GetStopOrdersResponse& operator=(const GetStopOrdersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStopOrdersResponse& operator=(GetStopOrdersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStopOrdersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStopOrdersResponse* internal_default_instance() {
    return reinterpret_cast<const GetStopOrdersResponse*>(
        &_GetStopOrdersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetStopOrdersResponse& a, GetStopOrdersResponse& b) { a.Swap(&b); }
  inline void Swap(GetStopOrdersResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStopOrdersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStopOrdersResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetStopOrdersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStopOrdersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetStopOrdersResponse& from) { GetStopOrdersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStopOrdersResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse"; }

 protected:
  explicit GetStopOrdersResponse(::google::protobuf::Arena* arena);
  GetStopOrdersResponse(::google::protobuf::Arena* arena, const GetStopOrdersResponse& from);
  GetStopOrdersResponse(::google::protobuf::Arena* arena, GetStopOrdersResponse&& from) noexcept
      : GetStopOrdersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStopOrdersFieldNumber = 1,
  };
  // repeated .tinkoff.public.invest.api.contract.v1.StopOrder stop_orders = 1;
  int stop_orders_size() const;
  private:
  int _internal_stop_orders_size() const;

  public:
  void clear_stop_orders() ;
  ::tinkoff::public_::invest::api::contract::v1::StopOrder* mutable_stop_orders(int index);
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>* mutable_stop_orders();

  private:
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>& _internal_stop_orders() const;
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>* _internal_mutable_stop_orders();
  public:
  const ::tinkoff::public_::invest::api::contract::v1::StopOrder& stop_orders(int index) const;
  ::tinkoff::public_::invest::api::contract::v1::StopOrder* add_stop_orders();
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>& stop_orders() const;
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::tinkoff::public_::invest::api::contract::v1::StopOrder > stop_orders_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stoporders_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PostStopOrderRequest

// string figi = 1 [deprecated = true];
inline void PostStopOrderRequest::clear_figi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.ClearToEmpty();
}
inline const std::string& PostStopOrderRequest::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostStopOrderRequest::set_figi(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.figi)
}
inline std::string* PostStopOrderRequest::mutable_figi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.figi)
  return _s;
}
inline const std::string& PostStopOrderRequest::_internal_figi() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.figi_.Get();
}
inline void PostStopOrderRequest::_internal_set_figi(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.Set(value, GetArena());
}
inline std::string* PostStopOrderRequest::_internal_mutable_figi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.figi_.Mutable( GetArena());
}
inline std::string* PostStopOrderRequest::release_figi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.figi)
  return _impl_.figi_.Release();
}
inline void PostStopOrderRequest::set_allocated_figi(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.figi_.IsDefault()) {
          _impl_.figi_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.figi)
}

// int64 quantity = 2;
inline void PostStopOrderRequest::clear_quantity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t PostStopOrderRequest::quantity() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.quantity)
  return _internal_quantity();
}
inline void PostStopOrderRequest::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.quantity)
}
inline ::int64_t PostStopOrderRequest::_internal_quantity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quantity_;
}
inline void PostStopOrderRequest::_internal_set_quantity(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.quantity_ = value;
}

// .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
inline bool PostStopOrderRequest::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostStopOrderRequest::_internal_price() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostStopOrderRequest::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.price)
  return _internal_price();
}
inline void PostStopOrderRequest::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::release_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.price_;
  _impl_.price_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::unsafe_arena_release_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::_internal_mutable_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.price)
  return _msg;
}
inline void PostStopOrderRequest::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.price)
}

// .tinkoff.public.invest.api.contract.v1.Quotation stop_price = 4;
inline bool PostStopOrderRequest::has_stop_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stop_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostStopOrderRequest::_internal_stop_price() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.stop_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostStopOrderRequest::stop_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.stop_price)
  return _internal_stop_price();
}
inline void PostStopOrderRequest::unsafe_arena_set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stop_price_);
  }
  _impl_.stop_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.stop_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::release_stop_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.stop_price_;
  _impl_.stop_price_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::unsafe_arena_release_stop_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.stop_price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.stop_price_;
  _impl_.stop_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::_internal_mutable_stop_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.stop_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.stop_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.stop_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostStopOrderRequest::mutable_stop_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_stop_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.stop_price)
  return _msg;
}
inline void PostStopOrderRequest::set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stop_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.stop_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.stop_price)
}

// .tinkoff.public.invest.api.contract.v1.StopOrderDirection direction = 5;
inline void PostStopOrderRequest::clear_direction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection PostStopOrderRequest::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.direction)
  return _internal_direction();
}
inline void PostStopOrderRequest::set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection PostStopOrderRequest::_internal_direction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::StopOrderDirection>(_impl_.direction_);
}
inline void PostStopOrderRequest::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.direction_ = value;
}

// string account_id = 6;
inline void PostStopOrderRequest::clear_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& PostStopOrderRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostStopOrderRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.account_id)
}
inline std::string* PostStopOrderRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.account_id)
  return _s;
}
inline const std::string& PostStopOrderRequest::_internal_account_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.account_id_.Get();
}
inline void PostStopOrderRequest::_internal_set_account_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* PostStopOrderRequest::_internal_mutable_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* PostStopOrderRequest::release_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void PostStopOrderRequest::set_allocated_account_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_id_.IsDefault()) {
          _impl_.account_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.account_id)
}

// .tinkoff.public.invest.api.contract.v1.StopOrderExpirationType expiration_type = 7;
inline void PostStopOrderRequest::clear_expiration_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.expiration_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType PostStopOrderRequest::expiration_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.expiration_type)
  return _internal_expiration_type();
}
inline void PostStopOrderRequest::set_expiration_type(::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType value) {
  _internal_set_expiration_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.expiration_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType PostStopOrderRequest::_internal_expiration_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType>(_impl_.expiration_type_);
}
inline void PostStopOrderRequest::_internal_set_expiration_type(::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.expiration_type_ = value;
}

// .tinkoff.public.invest.api.contract.v1.StopOrderType stop_order_type = 8;
inline void PostStopOrderRequest::clear_stop_order_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderType PostStopOrderRequest::stop_order_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.stop_order_type)
  return _internal_stop_order_type();
}
inline void PostStopOrderRequest::set_stop_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value) {
  _internal_set_stop_order_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.stop_order_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderType PostStopOrderRequest::_internal_stop_order_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::StopOrderType>(_impl_.stop_order_type_);
}
inline void PostStopOrderRequest::_internal_set_stop_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_type_ = value;
}

// .google.protobuf.Timestamp expire_date = 9;
inline bool PostStopOrderRequest::has_expire_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expire_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& PostStopOrderRequest::_internal_expire_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.expire_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& PostStopOrderRequest::expire_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.expire_date)
  return _internal_expire_date();
}
inline void PostStopOrderRequest::unsafe_arena_set_allocated_expire_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expire_date_);
  }
  _impl_.expire_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.expire_date)
}
inline ::google::protobuf::Timestamp* PostStopOrderRequest::release_expire_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.expire_date_;
  _impl_.expire_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* PostStopOrderRequest::unsafe_arena_release_expire_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.expire_date)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.expire_date_;
  _impl_.expire_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PostStopOrderRequest::_internal_mutable_expire_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expire_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.expire_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expire_date_;
}
inline ::google::protobuf::Timestamp* PostStopOrderRequest::mutable_expire_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expire_date();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.expire_date)
  return _msg;
}
inline void PostStopOrderRequest::set_allocated_expire_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expire_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.expire_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.expire_date)
}

// string instrument_id = 10;
inline void PostStopOrderRequest::clear_instrument_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_id_.ClearToEmpty();
}
inline const std::string& PostStopOrderRequest::instrument_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.instrument_id)
  return _internal_instrument_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostStopOrderRequest::set_instrument_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.instrument_id)
}
inline std::string* PostStopOrderRequest::mutable_instrument_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.instrument_id)
  return _s;
}
inline const std::string& PostStopOrderRequest::_internal_instrument_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instrument_id_.Get();
}
inline void PostStopOrderRequest::_internal_set_instrument_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_id_.Set(value, GetArena());
}
inline std::string* PostStopOrderRequest::_internal_mutable_instrument_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.instrument_id_.Mutable( GetArena());
}
inline std::string* PostStopOrderRequest::release_instrument_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.instrument_id)
  return _impl_.instrument_id_.Release();
}
inline void PostStopOrderRequest::set_allocated_instrument_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instrument_id_.IsDefault()) {
          _impl_.instrument_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderRequest.instrument_id)
}

// -------------------------------------------------------------------

// PostStopOrderResponse

// string stop_order_id = 1;
inline void PostStopOrderResponse::clear_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.ClearToEmpty();
}
inline const std::string& PostStopOrderResponse::stop_order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostStopOrderResponse.stop_order_id)
  return _internal_stop_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostStopOrderResponse::set_stop_order_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostStopOrderResponse.stop_order_id)
}
inline std::string* PostStopOrderResponse::mutable_stop_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stop_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostStopOrderResponse.stop_order_id)
  return _s;
}
inline const std::string& PostStopOrderResponse::_internal_stop_order_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stop_order_id_.Get();
}
inline void PostStopOrderResponse::_internal_set_stop_order_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.Set(value, GetArena());
}
inline std::string* PostStopOrderResponse::_internal_mutable_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.stop_order_id_.Mutable( GetArena());
}
inline std::string* PostStopOrderResponse::release_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostStopOrderResponse.stop_order_id)
  return _impl_.stop_order_id_.Release();
}
inline void PostStopOrderResponse::set_allocated_stop_order_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stop_order_id_.IsDefault()) {
          _impl_.stop_order_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostStopOrderResponse.stop_order_id)
}

// -------------------------------------------------------------------

// GetStopOrdersRequest

// string account_id = 1;
inline void GetStopOrdersRequest::clear_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& GetStopOrdersRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStopOrdersRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest.account_id)
}
inline std::string* GetStopOrdersRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest.account_id)
  return _s;
}
inline const std::string& GetStopOrdersRequest::_internal_account_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.account_id_.Get();
}
inline void GetStopOrdersRequest::_internal_set_account_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* GetStopOrdersRequest::_internal_mutable_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* GetStopOrdersRequest::release_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void GetStopOrdersRequest::set_allocated_account_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_id_.IsDefault()) {
          _impl_.account_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetStopOrdersRequest.account_id)
}

// -------------------------------------------------------------------

// GetStopOrdersResponse

// repeated .tinkoff.public.invest.api.contract.v1.StopOrder stop_orders = 1;
inline int GetStopOrdersResponse::_internal_stop_orders_size() const {
  return _internal_stop_orders().size();
}
inline int GetStopOrdersResponse::stop_orders_size() const {
  return _internal_stop_orders_size();
}
inline void GetStopOrdersResponse::clear_stop_orders() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_orders_.Clear();
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrder* GetStopOrdersResponse::mutable_stop_orders(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse.stop_orders)
  return _internal_mutable_stop_orders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>* GetStopOrdersResponse::mutable_stop_orders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse.stop_orders)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stop_orders();
}
inline const ::tinkoff::public_::invest::api::contract::v1::StopOrder& GetStopOrdersResponse::stop_orders(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse.stop_orders)
  return _internal_stop_orders().Get(index);
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrder* GetStopOrdersResponse::add_stop_orders() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::tinkoff::public_::invest::api::contract::v1::StopOrder* _add = _internal_mutable_stop_orders()->Add();
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse.stop_orders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>& GetStopOrdersResponse::stop_orders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.GetStopOrdersResponse.stop_orders)
  return _internal_stop_orders();
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>&
GetStopOrdersResponse::_internal_stop_orders() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stop_orders_;
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::StopOrder>*
GetStopOrdersResponse::_internal_mutable_stop_orders() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stop_orders_;
}

// -------------------------------------------------------------------

// CancelStopOrderRequest

// string account_id = 1;
inline void CancelStopOrderRequest::clear_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& CancelStopOrderRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CancelStopOrderRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.account_id)
}
inline std::string* CancelStopOrderRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.account_id)
  return _s;
}
inline const std::string& CancelStopOrderRequest::_internal_account_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.account_id_.Get();
}
inline void CancelStopOrderRequest::_internal_set_account_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* CancelStopOrderRequest::_internal_mutable_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* CancelStopOrderRequest::release_account_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void CancelStopOrderRequest::set_allocated_account_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.account_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_id_.IsDefault()) {
          _impl_.account_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.account_id)
}

// string stop_order_id = 2;
inline void CancelStopOrderRequest::clear_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.ClearToEmpty();
}
inline const std::string& CancelStopOrderRequest::stop_order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.stop_order_id)
  return _internal_stop_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CancelStopOrderRequest::set_stop_order_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.stop_order_id)
}
inline std::string* CancelStopOrderRequest::mutable_stop_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stop_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.stop_order_id)
  return _s;
}
inline const std::string& CancelStopOrderRequest::_internal_stop_order_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stop_order_id_.Get();
}
inline void CancelStopOrderRequest::_internal_set_stop_order_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.Set(value, GetArena());
}
inline std::string* CancelStopOrderRequest::_internal_mutable_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.stop_order_id_.Mutable( GetArena());
}
inline std::string* CancelStopOrderRequest::release_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.stop_order_id)
  return _impl_.stop_order_id_.Release();
}
inline void CancelStopOrderRequest::set_allocated_stop_order_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stop_order_id_.IsDefault()) {
          _impl_.stop_order_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.CancelStopOrderRequest.stop_order_id)
}

// -------------------------------------------------------------------

// CancelStopOrderResponse

// .google.protobuf.Timestamp time = 1;
inline bool CancelStopOrderResponse::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CancelStopOrderResponse::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CancelStopOrderResponse::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse.time)
  return _internal_time();
}
inline void CancelStopOrderResponse::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse.time)
}
inline ::google::protobuf::Timestamp* CancelStopOrderResponse::release_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* CancelStopOrderResponse::unsafe_arena_release_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse.time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CancelStopOrderResponse::_internal_mutable_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* CancelStopOrderResponse::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse.time)
  return _msg;
}
inline void CancelStopOrderResponse::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.CancelStopOrderResponse.time)
}

// -------------------------------------------------------------------

// StopOrder

// string stop_order_id = 1;
inline void StopOrder::clear_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.ClearToEmpty();
}
inline const std::string& StopOrder::stop_order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.stop_order_id)
  return _internal_stop_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StopOrder::set_stop_order_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.StopOrder.stop_order_id)
}
inline std::string* StopOrder::mutable_stop_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stop_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.stop_order_id)
  return _s;
}
inline const std::string& StopOrder::_internal_stop_order_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stop_order_id_.Get();
}
inline void StopOrder::_internal_set_stop_order_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.Set(value, GetArena());
}
inline std::string* StopOrder::_internal_mutable_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.stop_order_id_.Mutable( GetArena());
}
inline std::string* StopOrder::release_stop_order_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.stop_order_id)
  return _impl_.stop_order_id_.Release();
}
inline void StopOrder::set_allocated_stop_order_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.stop_order_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stop_order_id_.IsDefault()) {
          _impl_.stop_order_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.stop_order_id)
}

// int64 lots_requested = 2;
inline void StopOrder::clear_lots_requested() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lots_requested_ = ::int64_t{0};
}
inline ::int64_t StopOrder::lots_requested() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.lots_requested)
  return _internal_lots_requested();
}
inline void StopOrder::set_lots_requested(::int64_t value) {
  _internal_set_lots_requested(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.StopOrder.lots_requested)
}
inline ::int64_t StopOrder::_internal_lots_requested() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lots_requested_;
}
inline void StopOrder::_internal_set_lots_requested(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lots_requested_ = value;
}

// string figi = 3;
inline void StopOrder::clear_figi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.ClearToEmpty();
}
inline const std::string& StopOrder::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StopOrder::set_figi(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.StopOrder.figi)
}
inline std::string* StopOrder::mutable_figi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.figi)
  return _s;
}
inline const std::string& StopOrder::_internal_figi() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.figi_.Get();
}
inline void StopOrder::_internal_set_figi(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.Set(value, GetArena());
}
inline std::string* StopOrder::_internal_mutable_figi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.figi_.Mutable( GetArena());
}
inline std::string* StopOrder::release_figi() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.figi)
  return _impl_.figi_.Release();
}
inline void StopOrder::set_allocated_figi(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.figi_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.figi_.IsDefault()) {
          _impl_.figi_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.figi)
}

// .tinkoff.public.invest.api.contract.v1.StopOrderDirection direction = 4;
inline void StopOrder::clear_direction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection StopOrder::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.direction)
  return _internal_direction();
}
inline void StopOrder::set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.StopOrder.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection StopOrder::_internal_direction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::StopOrderDirection>(_impl_.direction_);
}
inline void StopOrder::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::StopOrderDirection value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.direction_ = value;
}

// string currency = 5;
inline void StopOrder::clear_currency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.currency_.ClearToEmpty();
}
inline const std::string& StopOrder::currency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.currency)
  return _internal_currency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StopOrder::set_currency(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.currency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.StopOrder.currency)
}
inline std::string* StopOrder::mutable_currency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.currency)
  return _s;
}
inline const std::string& StopOrder::_internal_currency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.currency_.Get();
}
inline void StopOrder::_internal_set_currency(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.currency_.Set(value, GetArena());
}
inline std::string* StopOrder::_internal_mutable_currency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.currency_.Mutable( GetArena());
}
inline std::string* StopOrder::release_currency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.currency)
  return _impl_.currency_.Release();
}
inline void StopOrder::set_allocated_currency(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.currency_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currency_.IsDefault()) {
          _impl_.currency_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.currency)
}

// .tinkoff.public.invest.api.contract.v1.StopOrderType order_type = 6;
inline void StopOrder::clear_order_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.order_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderType StopOrder::order_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.order_type)
  return _internal_order_type();
}
inline void StopOrder::set_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.StopOrder.order_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::StopOrderType StopOrder::_internal_order_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::StopOrderType>(_impl_.order_type_);
}
inline void StopOrder::_internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::StopOrderType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.order_type_ = value;
}

// .google.protobuf.Timestamp create_date = 7;
inline bool StopOrder::has_create_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.create_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& StopOrder::_internal_create_date() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.create_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& StopOrder::create_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.create_date)
  return _internal_create_date();
}
inline void StopOrder::unsafe_arena_set_allocated_create_date(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.create_date_);
  }
  _impl_.create_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.create_date)
}
inline ::google::protobuf::Timestamp* StopOrder::release_create_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.create_date_;
  _impl_.create_date_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* StopOrder::unsafe_arena_release_create_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.create_date)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.create_date_;
  _impl_.create_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StopOrder::_internal_mutable_create_date() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.create_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.create_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.create_date_;
}
inline ::google::protobuf::Timestamp* StopOrder::mutable_create_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_create_date();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.create_date)
  return _msg;
}
inline void StopOrder::set_allocated_create_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.create_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.create_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.create_date)
}

// .google.protobuf.Timestamp activation_date_time = 8;
inline bool StopOrder::has_activation_date_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activation_date_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& StopOrder::_internal_activation_date_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.activation_date_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& StopOrder::activation_date_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.activation_date_time)
  return _internal_activation_date_time();
}
inline void StopOrder::unsafe_arena_set_allocated_activation_date_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_date_time_);
  }
  _impl_.activation_date_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.activation_date_time)
}
inline ::google::protobuf::Timestamp* StopOrder::release_activation_date_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.activation_date_time_;
  _impl_.activation_date_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* StopOrder::unsafe_arena_release_activation_date_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.activation_date_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.activation_date_time_;
  _impl_.activation_date_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StopOrder::_internal_mutable_activation_date_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.activation_date_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.activation_date_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.activation_date_time_;
}
inline ::google::protobuf::Timestamp* StopOrder::mutable_activation_date_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_activation_date_time();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.activation_date_time)
  return _msg;
}
inline void StopOrder::set_allocated_activation_date_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_date_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.activation_date_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.activation_date_time)
}

// .google.protobuf.Timestamp expiration_time = 9;
inline bool StopOrder::has_expiration_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expiration_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& StopOrder::_internal_expiration_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.expiration_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& StopOrder::expiration_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.expiration_time)
  return _internal_expiration_time();
}
inline void StopOrder::unsafe_arena_set_allocated_expiration_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_time_);
  }
  _impl_.expiration_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.expiration_time)
}
inline ::google::protobuf::Timestamp* StopOrder::release_expiration_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.expiration_time_;
  _impl_.expiration_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* StopOrder::unsafe_arena_release_expiration_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.expiration_time)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.expiration_time_;
  _impl_.expiration_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StopOrder::_internal_mutable_expiration_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expiration_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.expiration_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expiration_time_;
}
inline ::google::protobuf::Timestamp* StopOrder::mutable_expiration_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expiration_time();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.expiration_time)
  return _msg;
}
inline void StopOrder::set_allocated_expiration_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.expiration_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.expiration_time)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue price = 10;
inline bool StopOrder::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& StopOrder::_internal_price() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& StopOrder::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.price)
  return _internal_price();
}
inline void StopOrder::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::release_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.price_;
  _impl_.price_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::unsafe_arena_release_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.price)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::_internal_mutable_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.price)
  return _msg;
}
inline void StopOrder::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.price)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue stop_price = 11;
inline bool StopOrder::has_stop_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stop_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& StopOrder::_internal_stop_price() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.stop_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& StopOrder::stop_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.stop_price)
  return _internal_stop_price();
}
inline void StopOrder::unsafe_arena_set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stop_price_);
  }
  _impl_.stop_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.stop_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::release_stop_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.stop_price_;
  _impl_.stop_price_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::unsafe_arena_release_stop_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.stop_price)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.stop_price_;
  _impl_.stop_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::_internal_mutable_stop_price() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.stop_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.stop_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.stop_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* StopOrder::mutable_stop_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_stop_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.stop_price)
  return _msg;
}
inline void StopOrder::set_allocated_stop_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stop_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.stop_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.stop_price)
}

// string instrument_uid = 12;
inline void StopOrder::clear_instrument_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_uid_.ClearToEmpty();
}
inline const std::string& StopOrder::instrument_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.StopOrder.instrument_uid)
  return _internal_instrument_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StopOrder::set_instrument_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.StopOrder.instrument_uid)
}
inline std::string* StopOrder::mutable_instrument_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_uid();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.StopOrder.instrument_uid)
  return _s;
}
inline const std::string& StopOrder::_internal_instrument_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instrument_uid_.Get();
}
inline void StopOrder::_internal_set_instrument_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_uid_.Set(value, GetArena());
}
inline std::string* StopOrder::_internal_mutable_instrument_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.instrument_uid_.Mutable( GetArena());
}
inline std::string* StopOrder::release_instrument_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.StopOrder.instrument_uid)
  return _impl_.instrument_uid_.Release();
}
inline void StopOrder::set_allocated_instrument_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instrument_uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.instrument_uid_.IsDefault()) {
          _impl_.instrument_uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.StopOrder.instrument_uid)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::StopOrderDirection> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::StopOrderDirection>() {
  return ::tinkoff::public_::invest::api::contract::v1::StopOrderDirection_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType>() {
  return ::tinkoff::public_::invest::api::contract::v1::StopOrderExpirationType_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::StopOrderType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::StopOrderType>() {
  return ::tinkoff::public_::invest::api::contract::v1::StopOrderType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_stoporders_2eproto_2epb_2eh
